{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"gasEstimates": null,
		"methodIdentifiers": {
			"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
			"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string),bool)": "426cfaf3"
		}
	},
	"abi": [
		{
			"anonymous": false,
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "startTimestamp",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "maxClaimableSupply",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "supplyClaimed",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "quantityLimitPerWallet",
							"type": "uint256"
						},
						{
							"internalType": "bytes32",
							"name": "merkleRoot",
							"type": "bytes32"
						},
						{
							"internalType": "uint256",
							"name": "pricePerToken",
							"type": "uint256"
						},
						{
							"internalType": "address",
							"name": "currency",
							"type": "address"
						},
						{
							"internalType": "string",
							"name": "metadata",
							"type": "string"
						}
					],
					"indexed": false,
					"internalType": "struct IClaimCondition.ClaimCondition",
					"name": "condition",
					"type": "tuple"
				},
				{
					"indexed": false,
					"internalType": "bool",
					"name": "resetEligibility",
					"type": "bool"
				}
			],
			"name": "ClaimConditionUpdated",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "claimer",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "startTokenId",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "quantityClaimed",
					"type": "uint256"
				}
			],
			"name": "TokensClaimed",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "quantity",
					"type": "uint256"
				},
				{
					"internalType": "address",
					"name": "currency",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "pricePerToken",
					"type": "uint256"
				},
				{
					"components": [
						{
							"internalType": "bytes32[]",
							"name": "proof",
							"type": "bytes32[]"
						},
						{
							"internalType": "uint256",
							"name": "quantityLimitPerWallet",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "pricePerToken",
							"type": "uint256"
						},
						{
							"internalType": "address",
							"name": "currency",
							"type": "address"
						}
					],
					"internalType": "struct IDropSinglePhase.AllowlistProof",
					"name": "allowlistProof",
					"type": "tuple"
				},
				{
					"internalType": "bytes",
					"name": "data",
					"type": "bytes"
				}
			],
			"name": "claim",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "uint256",
							"name": "startTimestamp",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "maxClaimableSupply",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "supplyClaimed",
							"type": "uint256"
						},
						{
							"internalType": "uint256",
							"name": "quantityLimitPerWallet",
							"type": "uint256"
						},
						{
							"internalType": "bytes32",
							"name": "merkleRoot",
							"type": "bytes32"
						},
						{
							"internalType": "uint256",
							"name": "pricePerToken",
							"type": "uint256"
						},
						{
							"internalType": "address",
							"name": "currency",
							"type": "address"
						},
						{
							"internalType": "string",
							"name": "metadata",
							"type": "string"
						}
					],
					"internalType": "struct IClaimCondition.ClaimCondition",
					"name": "phase",
					"type": "tuple"
				},
				{
					"internalType": "bool",
					"name": "resetClaimEligibility",
					"type": "bool"
				}
			],
			"name": "setClaimConditions",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}