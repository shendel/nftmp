{
	"id": "c7d925196f9eee0b0a55f7c4589ab09b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Farm.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\ncontract Farm is ReentrancyGuard, Pausable, Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakedToken_V1 {\r\n        address staker;\r\n        uint256 tokenId;\r\n    }\r\n\r\n    struct StakedToken {\r\n        address staker;\r\n        uint256 tokenId;\r\n        uint256 stackeUtx;          // Время когда застейкали\r\n    }\r\n    // Staker info\r\n    struct Staker {\r\n        uint256 amountStaked;\r\n        StakedToken[] stakedTokens;\r\n        uint256 timeOfLastUpdate;\r\n        uint256 unclaimedRewards;\r\n    }\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC721 public nftCollection;\r\n    address private nftCollectionAddress;\r\n    // Rewards per hour per token deposited in wei\r\n    uint256 public rewardsPerHour = 100000;\r\n\r\n    uint256 public version = 3;\r\n\r\n    bool public lockEnabled = false;      // v3\r\n    uint256 public lockTime = 0;          // v3\r\n    \r\n    mapping(address => Staker) public stakers;\r\n    // Mapping of tokenId to staker. For remember who to send back ther token\r\n    mapping(uint256 => address) public stakerAddress;\r\n    // Mapping of tokenId to start stake time\r\n    mapping(uint256 => uint256) public tokenStartStakeTime;     // v3\r\n\r\n    constructor(\r\n        address _nftCollection,\r\n        IERC20 _rewardsToken,\r\n        uint256 _rewardsPerHour,\r\n        bool _lockEnabled,         // v3\r\n        uint _lockTime             // v3\r\n    ) {\r\n        nftCollection = IERC721(_nftCollection);\r\n        nftCollectionAddress = _nftCollection;\r\n        rewardsToken = _rewardsToken;\r\n        rewardsPerHour = _rewardsPerHour;\r\n        lockTime = _lockTime;           // v3\r\n        lockEnabled = _lockEnabled;     // v3\r\n    }\r\n    // v3\r\n    function setLockEnabled(bool _lockEnabled) external onlyOwner {\r\n        lockEnabled = _lockEnabled;\r\n    }\r\n    // v3\r\n    function setLockTime(uint256 _lockTime) external onlyOwner {\r\n        lockTime = _lockTime;\r\n    }\r\n    function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {\r\n        rewardsPerHour = _rewardsPerHour;\r\n    }\r\n\r\n    function _stake(address _staker, uint256 _tokenId) internal {\r\n        require(\r\n            nftCollection.ownerOf(_tokenId) == _staker,\r\n            \"You don't own this token!\"\r\n        );\r\n\r\n        if (stakers[_staker].amountStaked > 0) {\r\n            uint256 rewards = calculateRewards(_staker);\r\n            stakers[_staker].unclaimedRewards += rewards;\r\n        }\r\n\r\n        nftCollection.transferFrom(_staker, address(this), _tokenId);\r\n\r\n        StakedToken memory stakedToken = StakedToken(\r\n            /* staker */        _staker,\r\n            /* tokenId */       _tokenId,\r\n            /* stackeUtx */     block.timestamp  // v3\r\n        );\r\n        stakers[_staker].stakedTokens.push(stakedToken);\r\n        stakers[_staker].amountStaked++;\r\n        stakerAddress[_tokenId] = _staker;\r\n        tokenStartStakeTime[_tokenId] = block.timestamp;        // v3\r\n        stakers[_staker].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function adminWithdrawRewards() external onlyOwner whenPaused {\r\n        uint256 _balance = rewardsToken.balanceOf(address(this));\r\n        rewardsToken.safeTransfer(msg.sender, _balance);\r\n    }\r\n\r\n    function stake(uint256 _tokenId) external nonReentrant whenNotPaused {\r\n        _stake(msg.sender, _tokenId);\r\n    }\r\n\r\n    function withdraw(uint256 _tokenId) external nonReentrant {\r\n        require(\r\n            stakers[msg.sender].amountStaked > 0,\r\n            \"You have no tokens staked\"\r\n        );\r\n        require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\");\r\n\r\n        require(\r\n            (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled,\r\n            \"Token lock time has not yet expired\"\r\n        );\r\n\r\n        // Update the rewards for this user, as the amount of rewards decreases with less tokens.\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        stakers[msg.sender].unclaimedRewards += rewards;\r\n\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r\n            if (\r\n                stakers[msg.sender].stakedTokens[i].tokenId == _tokenId \r\n                && \r\n                stakers[msg.sender].stakedTokens[i].staker != address(0)\r\n            ) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        stakers[msg.sender].stakedTokens[index].staker = address(0);\r\n        stakers[msg.sender].amountStaked--;\r\n        stakerAddress[_tokenId] = address(0);\r\n        tokenStartStakeTime[_tokenId] = 0;\r\n\r\n        nftCollection.transferFrom(address(this), msg.sender, _tokenId);\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function calculateRewards(address _staker)\r\n        internal\r\n        view\r\n        returns (uint256 _rewards)\r\n    {\r\n        return (((\r\n            ((block.timestamp - stakers[_staker].timeOfLastUpdate) *\r\n                stakers[_staker].amountStaked)\r\n        ) * rewardsPerHour) / 3600);\r\n    }\r\n\r\n    function claimRewards() external {\r\n        uint256 rewards = calculateRewards(msg.sender) +\r\n            stakers[msg.sender].unclaimedRewards;\r\n        require(rewards > 0, \"You have no rewards to claim\");\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n        stakers[msg.sender].unclaimedRewards = 0;\r\n        rewardsToken.safeTransfer(msg.sender, rewards);\r\n    }\r\n\r\n    function getStakedTokens(address _user) public view returns (StakedToken_V1[] memory) {\r\n        StakedToken[] memory _stakedTokens = getStakedTokens_V3(_user);\r\n        StakedToken_V1[] memory _stakedTokesV1_V2 = new StakedToken_V1[](_stakedTokens.length);\r\n        for(uint256 k = 0; k > _stakedTokens.length; k++) {\r\n            _stakedTokesV1_V2[k] = StakedToken_V1(\r\n                _stakedTokens[k].staker,\r\n                _stakedTokens[k].tokenId\r\n            );\r\n        }\r\n        return _stakedTokesV1_V2;\r\n    }\r\n    function getStakedTokens_V3(address _user) public view returns (StakedToken[] memory) {\r\n        if (stakers[_user].amountStaked > 0) {\r\n            StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked);\r\n            uint256 _index = 0;\r\n\r\n            for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r\n                if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r\n                    _stakedTokens[_index] = stakers[_user].stakedTokens[j];\r\n                    _index++;\r\n                }\r\n            }\r\n\r\n            return _stakedTokens;\r\n        } else {\r\n            return new StakedToken[](0);\r\n        }\r\n    }\r\n\r\n    function availableRewards(address _staker) public view returns (uint256) {\r\n        uint256 rewards = calculateRewards(_staker) +\r\n            stakers[_staker].unclaimedRewards;\r\n        return rewards;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Farm.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":5159:12020  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":5159:12020  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f942b03676ab164717fbed4aa7e409cda9b2fe30ffee7112a97b333431bfcd864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f942b03676ab164717fbed4aa7e409cda9b2fe30ffee7112a97b333431bfcd864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP5 0x2B SUB PUSH8 0x6AB164717FBED4AA PUSH31 0x409CDA9B2FE30FFEE7112A97B333431BFCD864736F6C634300081200330000 ",
							"sourceMap": "5159:6861:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;5159:6861:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f942b03676ab164717fbed4aa7e409cda9b2fe30ffee7112a97b333431bfcd864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP5 0x2B SUB PUSH8 0x6AB164717FBED4AA PUSH31 0x409CDA9B2FE30FFEE7112A97B333431BFCD864736F6C634300081200330000 ",
							"sourceMap": "5159:6861:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f942b03676ab164717fbed4aa7e409cda9b2fe30ffee7112a97b333431bfcd864736f6c63430008120033",
									".code": [
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Farm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Farm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftCollection",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_lockEnabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminWithdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakedTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "staker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Farm.StakedToken_V1[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakedTokens_V3",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "staker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stackeUtx",
											"type": "uint256"
										}
									],
									"internalType": "struct Farm.StakedToken[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsPerHour",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_lockEnabled",
									"type": "bool"
								}
							],
							"name": "setLockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"name": "setLockTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								}
							],
							"name": "setRewardsPerHour",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeOfLastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unclaimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenStartStakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":28878:35803  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Farm.sol\":29644:29650  100000 */\n  0x0186a0\n    /* \"source/Farm.sol\":29612:29650  uint256 public rewardsPerHour = 100000 */\n  0x05\n  sstore\n    /* \"source/Farm.sol\":29684:29685  3 */\n  0x03\n    /* \"source/Farm.sol\":29659:29685  uint256 public version = 3 */\n  0x06\n  sstore\n    /* \"source/Farm.sol\":29694:29725  bool public lockEnabled = false */\n  0x07\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  0x00\n    /* \"source/Farm.sol\":29743:29770  uint256 public lockTime = 0 */\n  0x08\n  sstore\n    /* \"source/Farm.sol\":30100:30584  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Farm.sol\":17794:17795  1 */\n  0x01\n    /* \"source/Farm.sol\":17905:17912  _status */\n  0x00\n    /* \"source/Farm.sol\":17905:17927  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"source/Farm.sol\":15323:15338  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"source/Farm.sol\":27132:27164  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"source/Farm.sol\":14778:14788  msg.sender */\n  caller\n    /* \"source/Farm.sol\":27132:27150  _transferOwnership */\n  tag_14\n    /* \"source/Farm.sol\":27132:27164  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"source/Farm.sol\":30313:30326  nftCollection */\n  0x03\n    /* \"source/Farm.sol\":30313:30352  nftCollection = IERC721(_nftCollection) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"source/Farm.sol\":30363:30383  nftCollectionAddress */\n  0x04\n    /* \"source/Farm.sol\":30363:30400  nftCollectionAddress = _nftCollection */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"source/Farm.sol\":30411:30423  rewardsToken */\n  0x02\n    /* \"source/Farm.sol\":30411:30439  rewardsToken = _rewardsToken */\n  dup1\n  sload\n  swap6\n  swap1\n  swap7\n  and\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap4\n  sstore\n    /* \"source/Farm.sol\":30450:30464  rewardsPerHour */\n  0x05\n    /* \"source/Farm.sol\":30450:30482  rewardsPerHour = _rewardsPerHour */\n  sstore\n    /* \"source/Farm.sol\":30493:30501  lockTime */\n  0x08\n    /* \"source/Farm.sol\":30493:30513  lockTime = _lockTime */\n  sstore\n    /* \"source/Farm.sol\":30540:30551  lockEnabled */\n  0x07\n    /* \"source/Farm.sol\":30540:30566  lockEnabled = _lockEnabled */\n  dup1\n  sload\n  swap2\n  iszero\n  iszero\n  not(0xff)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"source/Farm.sol\":28878:35803  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  jump(tag_20)\n    /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  0x0100\n    /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"source/Farm.sol\":28752:28768  address oldOwner */\n  0x00\n  swap1\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Farm.sol\":28741:28869  {... */\n  pop\n    /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_22:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:835   */\ntag_3:\n    /* \"#utility.yul\":267:273   */\n  0x00\n    /* \"#utility.yul\":275:281   */\n  dup1\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":291:297   */\n  dup1\n    /* \"#utility.yul\":299:305   */\n  0x00\n    /* \"#utility.yul\":352:355   */\n  0xa0\n    /* \"#utility.yul\":340:349   */\n  dup7\n    /* \"#utility.yul\":331:338   */\n  dup9\n    /* \"#utility.yul\":327:350   */\n  sub\n    /* \"#utility.yul\":323:356   */\n  slt\n    /* \"#utility.yul\":320:373   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":320:373   */\ntag_24:\n    /* \"#utility.yul\":401:410   */\n  dup6\n    /* \"#utility.yul\":395:411   */\n  mload\n    /* \"#utility.yul\":420:451   */\n  tag_25\n    /* \"#utility.yul\":445:450   */\n  dup2\n    /* \"#utility.yul\":420:451   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":520:522   */\n  0x20\n    /* \"#utility.yul\":505:523   */\n  dup8\n  add\n    /* \"#utility.yul\":499:524   */\n  mload\n    /* \"#utility.yul\":470:475   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":533:566   */\n  tag_26\n    /* \"#utility.yul\":499:524   */\n  dup2\n    /* \"#utility.yul\":533:566   */\n  tag_19\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":632:634   */\n  0x40\n    /* \"#utility.yul\":617:635   */\n  dup8\n  add\n    /* \"#utility.yul\":611:636   */\n  mload\n    /* \"#utility.yul\":681:683   */\n  0x60\n    /* \"#utility.yul\":666:684   */\n  dup9\n  add\n    /* \"#utility.yul\":660:685   */\n  mload\n    /* \"#utility.yul\":585:592   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":611:636   */\n  swap4\n  pop\n    /* \"#utility.yul\":723:738   */\n  dup1\n  iszero\n    /* \"#utility.yul\":716:739   */\n  iszero\n    /* \"#utility.yul\":704:740   */\n  dup2\n  eq\n    /* \"#utility.yul\":694:758   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":754:755   */\n  0x00\n    /* \"#utility.yul\":751:752   */\n  dup1\n    /* \"#utility.yul\":744:756   */\n  revert\n    /* \"#utility.yul\":694:758   */\ntag_27:\n    /* \"#utility.yul\":777:784   */\n  dup1\n    /* \"#utility.yul\":767:784   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":824:827   */\n  0x80\n    /* \"#utility.yul\":813:822   */\n  dup7\n    /* \"#utility.yul\":809:828   */\n  add\n    /* \"#utility.yul\":803:829   */\n  mload\n    /* \"#utility.yul\":793:829   */\n  swap1\n  pop\n    /* \"#utility.yul\":150:835   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_20:\n    /* \"source/Farm.sol\":28878:35803  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":28878:35803  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xae04d45d\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xae04d45d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb5a5e509\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf854a27f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf995441b\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8e7271fa\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x94067045\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x372500ab\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x54fd4d50\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x63c28db1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6588103b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6aa4439f\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x0c2517a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0d668087\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x114cd3c8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3166b848\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"source/Farm.sol\":34898:35581  function getStakedTokens_V3(address _user) public view returns (StakedToken[] memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Farm.sol\":29743:29770  uint256 public lockTime = 0 */\n    tag_4:\n      tag_35\n      sload(0x08)\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1430:1455   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1418:1420   */\n      0x20\n        /* \"#utility.yul\":1403:1421   */\n      add\n        /* \"source/Farm.sol\":29743:29770  uint256 public lockTime = 0 */\n      tag_33\n        /* \"#utility.yul\":1284:1461   */\n      jump\n        /* \"source/Farm.sol\":30027:30081  mapping(uint256 => uint256) public tokenStartStakeTime */\n    tag_5:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"source/Farm.sol\":32230:33659  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_6:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"source/Farm.sol\":29694:29725  bool public lockEnabled = false */\n    tag_7:\n      sload(0x07)\n      tag_47\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1816:1830   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1809:1831   */\n      iszero\n        /* \"#utility.yul\":1791:1832   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1779:1781   */\n      0x20\n        /* \"#utility.yul\":1764:1782   */\n      add\n        /* \"source/Farm.sol\":29694:29725  bool public lockEnabled = false */\n      tag_33\n        /* \"#utility.yul\":1651:1838   */\n      jump\n        /* \"source/Farm.sol\":33975:34361  function claimRewards() external {... */\n    tag_8:\n      tag_44\n      tag_52\n      jump\t// in\n        /* \"source/Farm.sol\":29659:29685  uint256 public version = 3 */\n    tag_9:\n      tag_35\n      sload(0x06)\n      dup2\n      jump\n        /* \"source/Farm.sol\":15972:16058  function paused() public view virtual returns (bool) {... */\n    tag_10:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":15972:16058  function paused() public view virtual returns (bool) {... */\n      jump(tag_47)\n        /* \"source/Farm.sol\":34369:34892  function getStakedTokens(address _user) public view returns (StakedToken_V1[] memory) {... */\n    tag_11:\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"source/Farm.sol\":29482:29510  IERC721 public nftCollection */\n    tag_12:\n      sload(0x03)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_64:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2855:2887   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2837:2888   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2825:2827   */\n      0x20\n        /* \"#utility.yul\":2810:2828   */\n      add\n        /* \"source/Farm.sol\":29482:29510  IERC721 public nftCollection */\n      tag_33\n        /* \"#utility.yul\":2676:2894   */\n      jump\n        /* \"source/Farm.sol\":30601:30708  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n    tag_13:\n      tag_44\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_44\n      tag_73\n      jump\t// in\n        /* \"source/Farm.sol\":27411:27498  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"source/Farm.sol\":27484:27490  _owner */\n      sload(0x01)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Farm.sol\":27411:27498  function owner() public view virtual returns (address) {... */\n      jump(tag_64)\n        /* \"source/Farm.sol\":29612:29650  uint256 public rewardsPerHour = 100000 */\n    tag_16:\n      tag_35\n      sload(0x05)\n      dup2\n      jump\n        /* \"source/Farm.sol\":29798:29839  mapping(address => Staker) public stakers */\n    tag_17:\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_82:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_81:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3678:3703   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3734:3736   */\n      0x20\n        /* \"#utility.yul\":3719:3737   */\n      dup5\n      add\n        /* \"#utility.yul\":3712:3746   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3762:3780   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3755:3789   */\n      mstore\n        /* \"#utility.yul\":3666:3668   */\n      0x60\n        /* \"#utility.yul\":3651:3669   */\n      add\n        /* \"source/Farm.sol\":29798:29839  mapping(address => Staker) public stakers */\n      tag_33\n        /* \"#utility.yul\":3476:3795   */\n      jump\n        /* \"source/Farm.sol\":29925:29973  mapping(uint256 => address) public stakerAddress */\n    tag_18:\n      tag_64\n      tag_87\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_87:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"source/Farm.sol\":32106:32222  function stake(uint256 _tokenId) external nonReentrant whenNotPaused {... */\n    tag_19:\n      tag_44\n      tag_91\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"source/Farm.sol\":30725:30823  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n    tag_20:\n      tag_44\n      tag_94\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"source/Farm.sol\":30829:30951  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n    tag_21:\n      tag_44\n      tag_97\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"source/Farm.sol\":29449:29475  IERC20 public rewardsToken */\n    tag_22:\n      sload(0x02)\n      tag_64\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"source/Farm.sol\":28317:28518  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_44\n      tag_104\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"source/Farm.sol\":35589:35798  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_24:\n      tag_35\n      tag_107\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"source/Farm.sol\":31903:32098  function adminWithdrawRewards() external onlyOwner whenPaused {... */\n    tag_25:\n      tag_44\n      tag_111\n      jump\t// in\n        /* \"source/Farm.sol\":34898:35581  function getStakedTokens_V3(address _user) public view returns (StakedToken[] memory) {... */\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":34999:35013  stakers[_user] */\n      dup2\n      and\n        /* \"source/Farm.sol\":35029:35030  0 */\n      0x00\n        /* \"source/Farm.sol\":34999:35013  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34999:35006  stakers */\n      0x09\n        /* \"source/Farm.sol\":34999:35013  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":34999:35026  stakers[_user].amountStaked */\n      sload\n        /* \"source/Farm.sol\":34962:34982  StakedToken[] memory */\n      0x60\n      swap1\n        /* \"source/Farm.sol\":34999:35030  stakers[_user].amountStaked > 0 */\n      iszero\n        /* \"source/Farm.sol\":34995:35574  if (stakers[_user].amountStaked > 0) {... */\n      tag_113\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":35102:35116  stakers[_user] */\n      dup3\n      and\n        /* \"source/Farm.sol\":35047:35081  StakedToken[] memory _stakedTokens */\n      0x00\n        /* \"source/Farm.sol\":35102:35116  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35102:35109  stakers */\n      0x09\n        /* \"source/Farm.sol\":35102:35116  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":35102:35129  stakers[_user].amountStaked */\n      sload\n        /* \"source/Farm.sol\":35084:35130  new StakedToken[](stakers[_user].amountStaked) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_115\n      jumpi\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_117\n      jumpi\n      dup2\n      0x20\n      add\n    tag_118:\n      tag_119\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_119:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_118\n      jumpi\n      swap1\n      pop\n    tag_117:\n      pop\n        /* \"source/Farm.sol\":35047:35130  StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked) */\n      swap1\n      pop\n        /* \"source/Farm.sol\":35145:35159  uint256 _index */\n      0x00\n        /* \"source/Farm.sol\":35185:35194  uint256 j */\n      dup1\n        /* \"source/Farm.sol\":35180:35466  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":35204:35218  stakers[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35204:35211  stakers */\n      0x09\n        /* \"source/Farm.sol\":35204:35218  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":35204:35231  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":35204:35238  stakers[_user].stakedTokens.length */\n      sload\n        /* \"source/Farm.sol\":35200:35238  j < stakers[_user].stakedTokens.length */\n      dup2\n      lt\n        /* \"source/Farm.sol\":35180:35466  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      iszero\n      tag_122\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":35268:35282  stakers[_user] */\n      dup6\n      and\n        /* \"source/Farm.sol\":35318:35319  0 */\n      0x00\n        /* \"source/Farm.sol\":35268:35282  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35268:35275  stakers */\n      0x09\n        /* \"source/Farm.sol\":35268:35282  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":35268:35295  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":35268:35298  stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":35296:35297  j */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":35268:35298  stakers[_user].stakedTokens[j] */\n      dup2\n      lt\n      tag_125\n      jumpi\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Farm.sol\":35268:35305  stakers[_user].stakedTokens[j].staker */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Farm.sol\":35268:35321  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      eq\n        /* \"source/Farm.sol\":35264:35451  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n      tag_128\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":35370:35384  stakers[_user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35370:35377  stakers */\n      0x09\n        /* \"source/Farm.sol\":35370:35384  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":35370:35397  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":35370:35400  stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":35398:35399  j */\n      dup3\n      swap1\n        /* \"source/Farm.sol\":35370:35400  stakers[_user].stakedTokens[j] */\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_130\n      tag_126\n      jump\t// in\n    tag_130:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":35346:35400  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Farm.sol\":35370:35400  stakers[_user].stakedTokens[j] */\n      0x03\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":35346:35400  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Farm.sol\":35346:35367  _stakedTokens[_index] */\n      dup4\n      mload\n        /* \"source/Farm.sol\":35346:35359  _stakedTokens */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":35360:35366  _index */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":35346:35367  _stakedTokens[_index] */\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_126\n      jump\t// in\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Farm.sol\":35346:35400  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Farm.sol\":35423:35431  _index++ */\n      dup2\n      dup1\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      swap3\n      pop\n      pop\n        /* \"source/Farm.sol\":35264:35451  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n    tag_128:\n        /* \"source/Farm.sol\":35240:35243  j++ */\n      dup1\n      tag_136\n      dup2\n      tag_135\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":35180:35466  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      jump(tag_121)\n    tag_122:\n      pop\n        /* \"source/Farm.sol\":35489:35502  _stakedTokens */\n      swap1\n      swap4\n        /* \"source/Farm.sol\":34898:35581  function getStakedTokens_V3(address _user) public view returns (StakedToken[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":34995:35574  if (stakers[_user].amountStaked > 0) {... */\n    tag_113:\n        /* \"source/Farm.sol\":35542:35562  new StakedToken[](0) */\n      0x40\n      dup1\n      mload\n        /* \"source/Farm.sol\":35560:35561  0 */\n      0x00\n        /* \"source/Farm.sol\":35542:35562  new StakedToken[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_140)\n    tag_141:\n      tag_142\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_142:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_141\n      jumpi\n      swap1\n      pop\n    tag_140:\n      pop\n        /* \"source/Farm.sol\":35535:35562  return new StakedToken[](0) */\n      swap3\n        /* \"source/Farm.sol\":34898:35581  function getStakedTokens_V3(address _user) public view returns (StakedToken[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":32230:33659  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_46:\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      tag_144\n        /* \"source/Farm.sol\":18356:18375  _nonReentrantBefore */\n      tag_145\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"source/Farm.sol\":32329:32339  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32356:32357  0 */\n      0x00\n        /* \"source/Farm.sol\":32321:32340  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32321:32328  stakers */\n      0x09\n        /* \"source/Farm.sol\":32321:32340  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":32321:32353  stakers[msg.sender].amountStaked */\n      sload\n        /* \"source/Farm.sol\":32299:32410  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"source/Farm.sol\":32299:32410  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4742:4763   */\n      mstore\n        /* \"#utility.yul\":4799:4801   */\n      0x19\n        /* \"#utility.yul\":4779:4797   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4772:4802   */\n      mstore\n        /* \"#utility.yul\":4838:4865   */\n      0x596f752068617665206e6f20746f6b656e73207374616b656400000000000000\n        /* \"#utility.yul\":4818:4836   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4811:4866   */\n      mstore\n        /* \"#utility.yul\":4883:4901   */\n      0x64\n      add\n        /* \"source/Farm.sol\":32299:32410  require(... */\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"source/Farm.sol\":32429:32452  stakerAddress[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32429:32442  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":32429:32452  stakerAddress[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Farm.sol\":32456:32466  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32429:32466  stakerAddress[_tokenId] == msg.sender */\n      eq\n        /* \"source/Farm.sol\":32421:32496  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5114:5116   */\n      0x20\n        /* \"source/Farm.sol\":32421:32496  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5096:5117   */\n      mstore\n        /* \"#utility.yul\":5153:5155   */\n      0x19\n        /* \"#utility.yul\":5133:5151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5126:5156   */\n      mstore\n      shl(0x38, 0x596f7520646f6e2774206f776e207468697320746f6b656e21)\n        /* \"#utility.yul\":5172:5190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5165:5220   */\n      mstore\n        /* \"#utility.yul\":5237:5255   */\n      0x64\n      add\n        /* \"source/Farm.sol\":32421:32496  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_148\n        /* \"#utility.yul\":4912:5261   */\n      jump\n        /* \"source/Farm.sol\":32421:32496  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n    tag_150:\n        /* \"source/Farm.sol\":32532:32543  lockEnabled */\n      and(0xff, sload(0x07))\n        /* \"source/Farm.sol\":32532:32609  lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp) */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"source/Farm.sol\":32581:32589  lockTime */\n      sload(0x08)\n        /* \"source/Farm.sol\":32549:32578  tokenStartStakeTime[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32549:32568  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":32549:32578  tokenStartStakeTime[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Farm.sol\":32593:32608  block.timestamp */\n      timestamp\n      swap2\n        /* \"source/Farm.sol\":32549:32589  tokenStartStakeTime[_tokenId] + lockTime */\n      tag_154\n      swap2\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"source/Farm.sol\":32548:32608  (tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp */\n      lt\n        /* \"source/Farm.sol\":32532:32609  lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp) */\n    tag_153:\n        /* \"source/Farm.sol\":32531:32626  (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled */\n      dup1\n      tag_156\n      jumpi\n      pop\n        /* \"source/Farm.sol\":32615:32626  lockEnabled */\n      and(0xff, sload(0x07))\n        /* \"source/Farm.sol\":32614:32626  !lockEnabled */\n      iszero\n        /* \"source/Farm.sol\":32531:32626  (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled */\n    tag_156:\n        /* \"source/Farm.sol\":32509:32689  require(... */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5598:5600   */\n      0x20\n        /* \"source/Farm.sol\":32509:32689  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5580:5601   */\n      mstore\n        /* \"#utility.yul\":5637:5639   */\n      0x23\n        /* \"#utility.yul\":5617:5635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5610:5640   */\n      mstore\n        /* \"#utility.yul\":5676:5710   */\n      0x546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069\n        /* \"#utility.yul\":5656:5674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5649:5711   */\n      mstore\n      shl(0xea, 0x1c9959)\n        /* \"#utility.yul\":5727:5745   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5720:5753   */\n      mstore\n        /* \"#utility.yul\":5770:5789   */\n      0x84\n      add\n        /* \"source/Farm.sol\":32509:32689  require(... */\n      tag_148\n        /* \"#utility.yul\":5396:5795   */\n      jump\n        /* \"source/Farm.sol\":32509:32689  require(... */\n    tag_157:\n        /* \"source/Farm.sol\":32801:32816  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":32819:32847  calculateRewards(msg.sender) */\n      tag_160\n        /* \"source/Farm.sol\":32836:32846  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32819:32835  calculateRewards */\n      tag_161\n        /* \"source/Farm.sol\":32819:32847  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_160:\n        /* \"source/Farm.sol\":32866:32876  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32858:32877  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32858:32865  stakers */\n      0x09\n        /* \"source/Farm.sol\":32858:32877  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":32858:32894  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n        /* \"source/Farm.sol\":32858:32905  stakers[msg.sender].unclaimedRewards += rewards */\n      dup1\n      sload\n        /* \"source/Farm.sol\":32801:32847  uint256 rewards = calculateRewards(msg.sender) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"source/Farm.sol\":32858:32894  stakers[msg.sender].unclaimedRewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":32858:32877  stakers[msg.sender] */\n      swap1\n        /* \"source/Farm.sol\":32858:32905  stakers[msg.sender].unclaimedRewards += rewards */\n      tag_162\n      swap1\n        /* \"source/Farm.sol\":32801:32847  uint256 rewards = calculateRewards(msg.sender) */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":32858:32905  stakers[msg.sender].unclaimedRewards += rewards */\n      tag_155\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"source/Farm.sol\":32920:32933  uint256 index */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"source/Farm.sol\":32948:33301  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n    tag_163:\n        /* \"source/Farm.sol\":32980:32990  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32972:32991  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32972:32979  stakers */\n      0x09\n        /* \"source/Farm.sol\":32972:32991  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":32972:33004  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":32972:33011  stakers[msg.sender].stakedTokens.length */\n      sload\n        /* \"source/Farm.sol\":32968:33011  i < stakers[msg.sender].stakedTokens.length */\n      dup2\n      lt\n        /* \"source/Farm.sol\":32948:33301  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"source/Farm.sol\":33063:33073  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33055:33074  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33055:33062  stakers */\n      0x09\n        /* \"source/Farm.sol\":33055:33074  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":33055:33087  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":33055:33090  stakers[msg.sender].stakedTokens[i] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33102:33110  _tokenId */\n      dup6\n      swap2\n        /* \"source/Farm.sol\":33055:33087  stakers[msg.sender].stakedTokens */\n      swap1\n        /* \"source/Farm.sol\":33088:33089  i */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":33055:33090  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_167\n      tag_126\n      jump\t// in\n    tag_167:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"source/Farm.sol\":33055:33098  stakers[msg.sender].stakedTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Farm.sol\":33055:33110  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId */\n      eq\n        /* \"source/Farm.sol\":33055:33206  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"source/Farm.sol\":33158:33168  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33204:33205  0 */\n      0x00\n        /* \"source/Farm.sol\":33150:33169  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33150:33157  stakers */\n      0x09\n        /* \"source/Farm.sol\":33150:33169  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33150:33182  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":33150:33185  stakers[msg.sender].stakedTokens[i] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33183:33184  i */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":33150:33185  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_126\n      jump\t// in\n    tag_171:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Farm.sol\":33150:33192  stakers[msg.sender].stakedTokens[i].staker */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"source/Farm.sol\":33150:33206  stakers[msg.sender].stakedTokens[i].staker != address(0) */\n      eq\n      iszero\n        /* \"source/Farm.sol\":33055:33206  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n    tag_169:\n        /* \"source/Farm.sol\":33033:33290  if (... */\n      iszero\n      tag_173\n      jumpi\n        /* \"source/Farm.sol\":33249:33250  i */\n      dup1\n        /* \"source/Farm.sol\":33241:33250  index = i */\n      swap2\n      pop\n        /* \"source/Farm.sol\":33269:33274  break */\n      jump(tag_164)\n        /* \"source/Farm.sol\":33033:33290  if (... */\n    tag_173:\n        /* \"source/Farm.sol\":33013:33016  i++ */\n      dup1\n      tag_174\n      dup2\n      tag_135\n      jump\t// in\n    tag_174:\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":32948:33301  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      jump(tag_163)\n    tag_164:\n      pop\n        /* \"source/Farm.sol\":33323:33333  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33372:33373  0 */\n      0x00\n        /* \"source/Farm.sol\":33315:33334  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33315:33322  stakers */\n      0x09\n        /* \"source/Farm.sol\":33315:33334  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33315:33347  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":33315:33354  stakers[msg.sender].stakedTokens[index] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33348:33353  index */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":33315:33354  stakers[msg.sender].stakedTokens[index] */\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_176\n      tag_126\n      jump\t// in\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap3\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":33315:33374  stakers[msg.sender].stakedTokens[index].staker = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"source/Farm.sol\":33393:33403  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33385:33404  stakers[msg.sender] */\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33385:33392  stakers */\n      0x09\n        /* \"source/Farm.sol\":33385:33404  stakers[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33385:33419  stakers[msg.sender].amountStaked-- */\n      dup1\n      sload\n      swap2\n      tag_178\n      dup4\n      tag_179\n      jump\t// in\n    tag_178:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Farm.sol\":33464:33465  0 */\n      0x00\n        /* \"source/Farm.sol\":33430:33453  stakerAddress[_tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33430:33443  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":33430:33453  stakerAddress[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":33430:33466  stakerAddress[_tokenId] = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"source/Farm.sol\":33477:33496  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":33477:33506  tokenStartStakeTime[_tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"source/Farm.sol\":33477:33510  tokenStartStakeTime[_tokenId] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":33523:33536  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":33523:33586  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33558:33562  this */\n      address\n        /* \"source/Farm.sol\":33523:33586  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6181:6215   */\n      mstore\n        /* \"source/Farm.sol\":33565:33575  msg.sender */\n      caller\n        /* \"#utility.yul\":6231:6249   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6224:6267   */\n      mstore\n        /* \"#utility.yul\":6283:6301   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6276:6310   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":33523:33536  nftCollection */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":33523:33549  nftCollection.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6116:6134   */\n      0x64\n      add\n        /* \"source/Farm.sol\":33523:33586  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n        /* \"source/Farm.sol\":33605:33615  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33597:33616  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33597:33604  stakers */\n      0x09\n        /* \"source/Farm.sol\":33597:33616  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":33636:33651  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":33597:33633  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":33597:33651  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      sstore\n      pop\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      tag_185\n      swap3\n      pop\n        /* \"source/Farm.sol\":18400:18418  _nonReentrantAfter */\n      tag_186\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      jump\t// in\n    tag_185:\n        /* \"source/Farm.sol\":32230:33659  function withdraw(uint256 _tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":33975:34361  function claimRewards() external {... */\n    tag_52:\n        /* \"source/Farm.sol\":34089:34099  msg.sender */\n      caller\n        /* \"source/Farm.sol\":34019:34034  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":34081:34100  stakers[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34081:34088  stakers */\n      0x09\n        /* \"source/Farm.sol\":34081:34100  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":34081:34117  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"source/Farm.sol\":34019:34034  uint256 rewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":34037:34065  calculateRewards(msg.sender) */\n      tag_188\n      swap1\n        /* \"source/Farm.sol\":34037:34053  calculateRewards */\n      tag_161\n        /* \"source/Farm.sol\":34037:34065  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_188:\n        /* \"source/Farm.sol\":34037:34117  calculateRewards(msg.sender) +... */\n      tag_189\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"source/Farm.sol\":34019:34117  uint256 rewards = calculateRewards(msg.sender) +... */\n      swap1\n      pop\n        /* \"source/Farm.sol\":34146:34147  0 */\n      0x00\n        /* \"source/Farm.sol\":34136:34143  rewards */\n      dup2\n        /* \"source/Farm.sol\":34136:34147  rewards > 0 */\n      gt\n        /* \"source/Farm.sol\":34128:34180  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6523:6525   */\n      0x20\n        /* \"source/Farm.sol\":34128:34180  require(rewards > 0, \"You have no rewards to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6505:6526   */\n      mstore\n        /* \"#utility.yul\":6562:6564   */\n      0x1c\n        /* \"#utility.yul\":6542:6560   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6535:6565   */\n      mstore\n        /* \"#utility.yul\":6601:6631   */\n      0x596f752068617665206e6f207265776172647320746f20636c61696d00000000\n        /* \"#utility.yul\":6581:6599   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6574:6632   */\n      mstore\n        /* \"#utility.yul\":6649:6667   */\n      0x64\n      add\n        /* \"source/Farm.sol\":34128:34180  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_148\n        /* \"#utility.yul\":6321:6673   */\n      jump\n        /* \"source/Farm.sol\":34128:34180  require(rewards > 0, \"You have no rewards to claim\") */\n    tag_190:\n        /* \"source/Farm.sol\":34199:34209  msg.sender */\n      caller\n        /* \"source/Farm.sol\":34191:34210  stakers[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34191:34198  stakers */\n      0x09\n        /* \"source/Farm.sol\":34191:34210  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":34230:34245  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":34191:34227  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      dup1\n      dup4\n      add\n        /* \"source/Farm.sol\":34191:34245  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":34256:34292  stakers[msg.sender].unclaimedRewards */\n      0x03\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":34256:34296  stakers[msg.sender].unclaimedRewards = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":34307:34319  rewardsToken */\n      sload\n        /* \"source/Farm.sol\":34307:34353  rewardsToken.safeTransfer(msg.sender, rewards) */\n      tag_185\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":34307:34319  rewardsToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":34345:34352  rewards */\n      dup4\n        /* \"source/Farm.sol\":34307:34332  rewardsToken.safeTransfer */\n      tag_194\n        /* \"source/Farm.sol\":34307:34353  rewardsToken.safeTransfer(msg.sender, rewards) */\n      jump\t// in\n        /* \"source/Farm.sol\":34369:34892  function getStakedTokens(address _user) public view returns (StakedToken_V1[] memory) {... */\n    tag_61:\n        /* \"source/Farm.sol\":34430:34453  StakedToken_V1[] memory */\n      0x60\n        /* \"source/Farm.sol\":34466:34500  StakedToken[] memory _stakedTokens */\n      0x00\n        /* \"source/Farm.sol\":34503:34528  getStakedTokens_V3(_user) */\n      tag_197\n        /* \"source/Farm.sol\":34522:34527  _user */\n      dup4\n        /* \"source/Farm.sol\":34503:34521  getStakedTokens_V3 */\n      tag_32\n        /* \"source/Farm.sol\":34503:34528  getStakedTokens_V3(_user) */\n      jump\t// in\n    tag_197:\n        /* \"source/Farm.sol\":34466:34528  StakedToken[] memory _stakedTokens = getStakedTokens_V3(_user) */\n      swap1\n      pop\n        /* \"source/Farm.sol\":34539:34580  StakedToken_V1[] memory _stakedTokesV1_V2 */\n      0x00\n        /* \"source/Farm.sol\":34604:34617  _stakedTokens */\n      dup2\n        /* \"source/Farm.sol\":34604:34624  _stakedTokens.length */\n      mload\n        /* \"source/Farm.sol\":34583:34625  new StakedToken_V1[](_stakedTokens.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_199\n      tag_116\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup2\n      0x20\n      add\n    tag_201:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_201\n      jumpi\n      swap1\n      pop\n    tag_200:\n      pop\n        /* \"source/Farm.sol\":34539:34625  StakedToken_V1[] memory _stakedTokesV1_V2 = new StakedToken_V1[](_stakedTokens.length) */\n      swap1\n      pop\n        /* \"source/Farm.sol\":34640:34649  uint256 k */\n      0x00\n        /* \"source/Farm.sol\":34636:34850  for(uint256 k = 0; k > _stakedTokens.length; k++) {... */\n    tag_204:\n        /* \"source/Farm.sol\":34659:34672  _stakedTokens */\n      dup3\n        /* \"source/Farm.sol\":34659:34679  _stakedTokens.length */\n      mload\n        /* \"source/Farm.sol\":34655:34656  k */\n      dup2\n        /* \"source/Farm.sol\":34655:34679  k > _stakedTokens.length */\n      gt\n        /* \"source/Farm.sol\":34636:34850  for(uint256 k = 0; k > _stakedTokens.length; k++) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"source/Farm.sol\":34724:34838  StakedToken_V1(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"source/Farm.sol\":34757:34770  _stakedTokens */\n      dup5\n        /* \"source/Farm.sol\":34771:34772  k */\n      dup4\n        /* \"source/Farm.sol\":34757:34773  _stakedTokens[k] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_126\n      jump\t// in\n    tag_208:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"source/Farm.sol\":34757:34780  _stakedTokens[k].staker */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":34724:34838  StakedToken_V1(... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"source/Farm.sol\":34799:34812  _stakedTokens */\n      dup5\n        /* \"source/Farm.sol\":34813:34814  k */\n      dup4\n        /* \"source/Farm.sol\":34799:34815  _stakedTokens[k] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_210\n      tag_126\n      jump\t// in\n    tag_210:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"source/Farm.sol\":34799:34823  _stakedTokens[k].tokenId */\n      0x20\n      add\n      mload\n        /* \"source/Farm.sol\":34724:34838  StakedToken_V1(... */\n      dup2\n      mstore\n      pop\n        /* \"source/Farm.sol\":34701:34718  _stakedTokesV1_V2 */\n      dup3\n        /* \"source/Farm.sol\":34719:34720  k */\n      dup3\n        /* \"source/Farm.sol\":34701:34721  _stakedTokesV1_V2[k] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      tag_212\n      tag_126\n      jump\t// in\n    tag_212:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Farm.sol\":34701:34838  _stakedTokesV1_V2[k] = StakedToken_V1(... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Farm.sol\":34681:34684  k++ */\n      dup1\n      dup1\n      tag_213\n      swap1\n      tag_135\n      jump\t// in\n    tag_213:\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":34636:34850  for(uint256 k = 0; k > _stakedTokens.length; k++) {... */\n      jump(tag_204)\n    tag_205:\n      pop\n        /* \"source/Farm.sol\":34867:34884  _stakedTokesV1_V2 */\n      swap4\n        /* \"source/Farm.sol\":34369:34892  function getStakedTokens(address _user) public view returns (StakedToken_V1[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":30601:30708  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n    tag_71:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_215\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"source/Farm.sol\":30674:30685  lockEnabled */\n      0x07\n        /* \"source/Farm.sol\":30674:30700  lockEnabled = _lockEnabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Farm.sol\":30601:30708  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_219\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"source/Farm.sol\":28124:28154  _transferOwnership(address(0)) */\n      tag_221\n        /* \"source/Farm.sol\":28151:28152  0 */\n      0x00\n        /* \"source/Farm.sol\":28124:28142  _transferOwnership */\n      tag_222\n        /* \"source/Farm.sol\":28124:28154  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_221:\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":32106:32222  function stake(uint256 _tokenId) external nonReentrant whenNotPaused {... */\n    tag_92:\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      tag_225\n        /* \"source/Farm.sol\":18356:18375  _nonReentrantBefore */\n      tag_145\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      jump\t// in\n    tag_225:\n        /* \"source/Farm.sol\":15577:15596  _requireNotPaused() */\n      tag_227\n        /* \"source/Farm.sol\":15577:15594  _requireNotPaused */\n      tag_228\n        /* \"source/Farm.sol\":15577:15596  _requireNotPaused() */\n      jump\t// in\n    tag_227:\n        /* \"source/Farm.sol\":32186:32214  _stake(msg.sender, _tokenId) */\n      tag_230\n        /* \"source/Farm.sol\":32193:32203  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32205:32213  _tokenId */\n      dup3\n        /* \"source/Farm.sol\":32186:32192  _stake */\n      tag_231\n        /* \"source/Farm.sol\":32186:32214  _stake(msg.sender, _tokenId) */\n      jump\t// in\n    tag_230:\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      tag_185\n        /* \"source/Farm.sol\":17794:17795  1 */\n      0x01\n        /* \"source/Farm.sol\":18916:18923  _status */\n      0x00\n        /* \"source/Farm.sol\":18916:18938  _status = _NOT_ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n      jump\n        /* \"source/Farm.sol\":30725:30823  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n    tag_95:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_234\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"source/Farm.sol\":30795:30803  lockTime */\n      0x08\n        /* \"source/Farm.sol\":30795:30815  lockTime = _lockTime */\n      sstore\n        /* \"source/Farm.sol\":30725:30823  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":30829:30951  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n    tag_98:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_237\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"source/Farm.sol\":30911:30925  rewardsPerHour */\n      0x05\n        /* \"source/Farm.sol\":30911:30943  rewardsPerHour = _rewardsPerHour */\n      sstore\n        /* \"source/Farm.sol\":30829:30951  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":28317:28518  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_240\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":28406:28428  newOwner != address(0) */\n      dup2\n      and\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6880:6882   */\n      0x20\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6862:6883   */\n      mstore\n        /* \"#utility.yul\":6919:6921   */\n      0x26\n        /* \"#utility.yul\":6899:6917   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6892:6922   */\n      mstore\n        /* \"#utility.yul\":6958:6992   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6938:6956   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6931:6993   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7009:7027   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7002:7038   */\n      mstore\n        /* \"#utility.yul\":7055:7074   */\n      0x84\n      add\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n        /* \"#utility.yul\":6678:7080   */\n      jump\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_242:\n        /* \"source/Farm.sol\":28482:28510  _transferOwnership(newOwner) */\n      tag_185\n        /* \"source/Farm.sol\":28501:28509  newOwner */\n      dup2\n        /* \"source/Farm.sol\":28482:28500  _transferOwnership */\n      tag_222\n        /* \"source/Farm.sol\":28482:28510  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"source/Farm.sol\":35589:35798  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":35732:35748  stakers[_staker] */\n      dup2\n      and\n        /* \"source/Farm.sol\":35653:35660  uint256 */\n      0x00\n        /* \"source/Farm.sol\":35732:35748  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35732:35739  stakers */\n      0x09\n        /* \"source/Farm.sol\":35732:35748  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":35732:35765  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"source/Farm.sol\":35653:35660  uint256 */\n      dup2\n      swap1\n        /* \"source/Farm.sol\":35691:35716  calculateRewards(_staker) */\n      tag_247\n        /* \"source/Farm.sol\":35740:35747  _staker */\n      dup5\n        /* \"source/Farm.sol\":35691:35707  calculateRewards */\n      tag_161\n        /* \"source/Farm.sol\":35691:35716  calculateRewards(_staker) */\n      jump\t// in\n    tag_247:\n        /* \"source/Farm.sol\":35691:35765  calculateRewards(_staker) +... */\n      tag_248\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_248:\n        /* \"source/Farm.sol\":35673:35765  uint256 rewards = calculateRewards(_staker) +... */\n      swap4\n        /* \"source/Farm.sol\":35589:35798  function availableRewards(address _staker) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":31903:32098  function adminWithdrawRewards() external onlyOwner whenPaused {... */\n    tag_111:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_250\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_216\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_250:\n        /* \"source/Farm.sol\":15836:15852  _requirePaused() */\n      tag_252\n        /* \"source/Farm.sol\":15836:15850  _requirePaused */\n      tag_253\n        /* \"source/Farm.sol\":15836:15852  _requirePaused() */\n      jump\t// in\n    tag_252:\n        /* \"source/Farm.sol\":31995:32007  rewardsToken */\n      sload(0x02)\n        /* \"source/Farm.sol\":31995:32032  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32026:32030  this */\n      address\n        /* \"source/Farm.sol\":31995:32032  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2837:2888   */\n      mstore\n        /* \"source/Farm.sol\":31976:31992  uint256 _balance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":31995:32007  rewardsToken */\n      and\n      swap1\n        /* \"source/Farm.sol\":31995:32017  rewardsToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2810:2828   */\n      0x24\n      add\n        /* \"source/Farm.sol\":31995:32032  rewardsToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"source/Farm.sol\":32043:32055  rewardsToken */\n      sload(0x02)\n        /* \"source/Farm.sol\":31976:32032  uint256 _balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"source/Farm.sol\":32043:32090  rewardsToken.safeTransfer(msg.sender, _balance) */\n      tag_185\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":32043:32055  rewardsToken */\n      and\n        /* \"source/Farm.sol\":32069:32079  msg.sender */\n      caller\n        /* \"source/Farm.sol\":31976:32032  uint256 _balance = rewardsToken.balanceOf(address(this)) */\n      dup4\n        /* \"source/Farm.sol\":32043:32068  rewardsToken.safeTransfer */\n      tag_194\n        /* \"source/Farm.sol\":32043:32090  rewardsToken.safeTransfer(msg.sender, _balance) */\n      jump\t// in\n        /* \"source/Farm.sol\":18436:18725  function _nonReentrantBefore() private {... */\n    tag_145:\n        /* \"source/Farm.sol\":17838:17839  2 */\n      0x02\n        /* \"source/Farm.sol\":18566:18573  _status */\n      sload(0x00)\n        /* \"source/Farm.sol\":18566:18585  _status != _ENTERED */\n      sub\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7476:7478   */\n      0x20\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7458:7479   */\n      mstore\n        /* \"#utility.yul\":7515:7517   */\n      0x1f\n        /* \"#utility.yul\":7495:7513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7488:7518   */\n      mstore\n        /* \"#utility.yul\":7554:7587   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7534:7552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7527:7588   */\n      mstore\n        /* \"#utility.yul\":7605:7623   */\n      0x64\n      add\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_148\n        /* \"#utility.yul\":7274:7629   */\n      jump\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_262:\n        /* \"source/Farm.sol\":17838:17839  2 */\n      0x02\n        /* \"source/Farm.sol\":18699:18706  _status */\n      0x00\n        /* \"source/Farm.sol\":18699:18717  _status = _ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18436:18725  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"source/Farm.sol\":33667:33967  function calculateRewards(address _staker)... */\n    tag_161:\n        /* \"source/Farm.sol\":33936:33950  rewardsPerHour */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":33892:33908  stakers[_staker] */\n      dup3\n      and\n        /* \"source/Farm.sol\":33760:33776  uint256 _rewards */\n      0x00\n        /* \"source/Farm.sol\":33892:33908  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33892:33899  stakers */\n      0x09\n        /* \"source/Farm.sol\":33892:33908  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33892:33921  stakers[_staker].amountStaked */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33838:33871  stakers[_staker].timeOfLastUpdate */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Farm.sol\":33760:33776  uint256 _rewards */\n      swap2\n      swap3\n        /* \"source/Farm.sol\":33954:33958  3600 */\n      0x0e10\n      swap3\n        /* \"source/Farm.sol\":33936:33950  rewardsPerHour */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":33892:33921  stakers[_staker].amountStaked */\n      swap1\n        /* \"source/Farm.sol\":33820:33871  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_266\n      swap1\n        /* \"source/Farm.sol\":33820:33835  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":33820:33871  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"source/Farm.sol\":33819:33921  (block.timestamp - stakers[_staker].timeOfLastUpdate) *... */\n      tag_268\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"source/Farm.sol\":33803:33950  (... */\n      tag_270\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_270:\n        /* \"source/Farm.sol\":33802:33958  ((... */\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"source/Farm.sol\":33794:33959  return (((... */\n      swap3\n        /* \"source/Farm.sol\":33667:33967  function calculateRewards(address _staker)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n    tag_186:\n        /* \"source/Farm.sol\":17794:17795  1 */\n      0x01\n        /* \"source/Farm.sol\":18916:18923  _status */\n      0x00\n        /* \"source/Farm.sol\":18916:18938  _status = _NOT_ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"source/Farm.sol\":23768:23945  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_194:\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8354:8386   */\n      dup5\n      and\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8336:8387   */\n      mstore\n        /* \"#utility.yul\":8403:8421   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8396:8430   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8309:8327   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"source/Farm.sol\":23851:23937  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_275\n      swap1\n        /* \"source/Farm.sol\":23871:23876  token */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":23851:23870  _callOptionalReturn */\n      tag_278\n        /* \"source/Farm.sol\":23851:23937  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_275:\n        /* \"source/Farm.sol\":23768:23945  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":27576:27708  function _checkOwner() internal view virtual {... */\n    tag_216:\n        /* \"source/Farm.sol\":27484:27490  _owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"source/Farm.sol\":14778:14788  msg.sender */\n      caller\n        /* \"source/Farm.sol\":27640:27663  owner() == _msgSender() */\n      eq\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8643:8645   */\n      0x20\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8625:8646   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8662:8680   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8655:8685   */\n      mstore\n        /* \"#utility.yul\":8721:8755   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8701:8719   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8694:8756   */\n      mstore\n        /* \"#utility.yul\":8773:8791   */\n      0x64\n      add\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_148\n        /* \"#utility.yul\":8441:8797   */\n      jump\n        /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_222:\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      0x0100\n        /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"source/Farm.sol\":28752:28768  address oldOwner */\n      0x00\n      swap1\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Farm.sol\":28741:28869  {... */\n      pop\n        /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":16131:16239  function _requireNotPaused() internal view virtual {... */\n    tag_228:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":16201:16210  !paused() */\n      iszero\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9004:9006   */\n      0x20\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8986:9007   */\n      mstore\n        /* \"#utility.yul\":9043:9045   */\n      0x10\n        /* \"#utility.yul\":9023:9041   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9016:9046   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9062:9080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9055:9101   */\n      mstore\n        /* \"#utility.yul\":9118:9136   */\n      0x64\n      add\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      tag_148\n        /* \"#utility.yul\":8802:9142   */\n      jump\n        /* \"source/Farm.sol\":30959:31895  function _stake(address _staker, uint256 _tokenId) internal {... */\n    tag_231:\n        /* \"source/Farm.sol\":31052:31065  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":31052:31083  nftCollection.ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1430:1455   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":31052:31094  nftCollection.ownerOf(_tokenId) == _staker */\n      dup5\n      dup2\n      and\n      swap3\n        /* \"source/Farm.sol\":31052:31065  nftCollection */\n      and\n      swap1\n        /* \"source/Farm.sol\":31052:31073  nftCollection.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":1403:1421   */\n      0x24\n      add\n        /* \"source/Farm.sol\":31052:31083  nftCollection.ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":31052:31094  nftCollection.ownerOf(_tokenId) == _staker */\n      and\n      eq\n        /* \"source/Farm.sol\":31030:31147  require(... */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5114:5116   */\n      0x20\n        /* \"source/Farm.sol\":31030:31147  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5096:5117   */\n      mstore\n        /* \"#utility.yul\":5153:5155   */\n      0x19\n        /* \"#utility.yul\":5133:5151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5126:5156   */\n      mstore\n      shl(0x38, 0x596f7520646f6e2774206f776e207468697320746f6b656e21)\n        /* \"#utility.yul\":5172:5190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5165:5220   */\n      mstore\n        /* \"#utility.yul\":5237:5255   */\n      0x64\n      add\n        /* \"source/Farm.sol\":31030:31147  require(... */\n      tag_148\n        /* \"#utility.yul\":4912:5261   */\n      jump\n        /* \"source/Farm.sol\":31030:31147  require(... */\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":31164:31180  stakers[_staker] */\n      dup3\n      and\n        /* \"source/Farm.sol\":31196:31197  0 */\n      0x00\n        /* \"source/Farm.sol\":31164:31180  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31164:31171  stakers */\n      0x09\n        /* \"source/Farm.sol\":31164:31180  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":31164:31193  stakers[_staker].amountStaked */\n      sload\n        /* \"source/Farm.sol\":31164:31197  stakers[_staker].amountStaked > 0 */\n      iszero\n        /* \"source/Farm.sol\":31160:31328  if (stakers[_staker].amountStaked > 0) {... */\n      tag_300\n      jumpi\n        /* \"source/Farm.sol\":31214:31229  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":31232:31257  calculateRewards(_staker) */\n      tag_301\n        /* \"source/Farm.sol\":31249:31256  _staker */\n      dup4\n        /* \"source/Farm.sol\":31232:31248  calculateRewards */\n      tag_161\n        /* \"source/Farm.sol\":31232:31257  calculateRewards(_staker) */\n      jump\t// in\n    tag_301:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":31272:31288  stakers[_staker] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31272:31279  stakers */\n      0x09\n        /* \"source/Farm.sol\":31272:31288  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":31272:31305  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n        /* \"source/Farm.sol\":31272:31316  stakers[_staker].unclaimedRewards += rewards */\n      dup1\n      sload\n        /* \"source/Farm.sol\":31214:31257  uint256 rewards = calculateRewards(_staker) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"source/Farm.sol\":31272:31305  stakers[_staker].unclaimedRewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":31272:31288  stakers[_staker] */\n      swap1\n        /* \"source/Farm.sol\":31272:31316  stakers[_staker].unclaimedRewards += rewards */\n      tag_302\n      swap1\n        /* \"source/Farm.sol\":31214:31257  uint256 rewards = calculateRewards(_staker) */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":31272:31316  stakers[_staker].unclaimedRewards += rewards */\n      tag_155\n      jump\t// in\n    tag_302:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Farm.sol\":31160:31328  if (stakers[_staker].amountStaked > 0) {... */\n    tag_300:\n        /* \"source/Farm.sol\":31340:31353  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":31340:31400  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6199:6214   */\n      dup5\n      dup2\n      and\n        /* \"source/Farm.sol\":31340:31400  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6181:6215   */\n      mstore\n        /* \"source/Farm.sol\":31384:31388  this */\n      address\n        /* \"#utility.yul\":6231:6249   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6224:6267   */\n      mstore\n        /* \"#utility.yul\":6283:6301   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6276:6310   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Farm.sol\":31340:31353  nftCollection */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":31340:31366  nftCollection.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6116:6134   */\n      0x64\n      add\n        /* \"source/Farm.sol\":31340:31400  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n        /* \"source/Farm.sol\":31446:31610  StakedToken(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup9\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31577:31592  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":31446:31610  StakedToken(... */\n      dup6\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n        /* \"source/Farm.sol\":31621:31637  stakers[_staker] */\n      dup5\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31621:31628  stakers */\n      0x09\n        /* \"source/Farm.sol\":31621:31637  stakers[_staker] */\n      dup5\n      mstore\n      swap7\n      dup8\n      keccak256\n        /* \"source/Farm.sol\":31621:31650  stakers[_staker].stakedTokens */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"source/Farm.sol\":31621:31668  stakers[_staker].stakedTokens.push(stakedToken) */\n      dup1\n      sload\n      dup1\n      dup4\n      add\n      dup3\n      sstore\n      swap1\n      dup11\n      mstore\n      swap5\n      dup10\n      keccak256\n      dup9\n      mload\n      0x03\n      swap1\n      swap7\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap6\n      swap1\n      swap8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup7\n      sstore\n      swap2\n      mload\n      swap3\n      dup6\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      swap1\n      mload\n      0x02\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/Farm.sol\":31679:31695  stakers[_staker] */\n      dup4\n      mstore\n        /* \"source/Farm.sol\":31679:31710  stakers[_staker].amountStaked++ */\n      dup1\n      sload\n        /* \"source/Farm.sol\":31446:31610  StakedToken(... */\n      swap2\n      swap5\n      pop\n        /* \"source/Farm.sol\":31679:31710  stakers[_staker].amountStaked++ */\n      swap1\n      swap3\n      pop\n        /* \"source/Farm.sol\":31621:31637  stakers[_staker] */\n      swap1\n        /* \"source/Farm.sol\":31679:31710  stakers[_staker].amountStaked++ */\n      tag_308\n      dup4\n      tag_135\n      jump\t// in\n    tag_308:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Farm.sol\":31721:31744  stakerAddress[_tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31721:31734  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":31721:31744  stakerAddress[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":31721:31754  stakerAddress[_tokenId] = _staker */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap6\n      and\n      dup6\n      or\n      swap1\n      sstore\n        /* \"source/Farm.sol\":31765:31784  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":31765:31794  tokenStartStakeTime[_tokenId] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":31797:31812  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":31765:31812  tokenStartStakeTime[_tokenId] = block.timestamp */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"source/Farm.sol\":31836:31852  stakers[_staker] */\n      swap4\n      dup4\n      mstore\n        /* \"source/Farm.sol\":31836:31843  stakers */\n      0x09\n        /* \"source/Farm.sol\":31836:31852  stakers[_staker] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":31836:31869  stakers[_staker].timeOfLastUpdate */\n      0x02\n      add\n        /* \"source/Farm.sol\":31836:31887  stakers[_staker].timeOfLastUpdate = block.timestamp */\n      sstore\n        /* \"source/Farm.sol\":30959:31895  function _stake(address _staker, uint256 _tokenId) internal {... */\n      jump\t// out\n        /* \"source/Farm.sol\":16316:16424  function _requirePaused() internal view virtual {... */\n    tag_253:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9605:9607   */\n      0x20\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9587:9608   */\n      mstore\n        /* \"#utility.yul\":9644:9646   */\n      0x14\n        /* \"#utility.yul\":9624:9642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9617:9647   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9663:9681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9656:9706   */\n      mstore\n        /* \"#utility.yul\":9723:9741   */\n      0x64\n      add\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      tag_148\n        /* \"#utility.yul\":9403:9747   */\n      jump\n        /* \"source/Farm.sol\":26073:26834  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_278:\n        /* \"source/Farm.sol\":26497:26520  bytes memory returndata */\n      0x00\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_315\n        /* \"source/Farm.sol\":26551:26555  data */\n      dup3\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Farm.sol\":26531:26536  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":26523:26550  address(token).functionCall */\n      and\n      tag_316\n      swap1\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"source/Farm.sol\":26607:26624  returndata.length */\n      dup1\n      mload\n        /* \"source/Farm.sol\":26497:26592  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Farm.sol\":26607:26628  returndata.length > 0 */\n      iszero\n        /* \"source/Farm.sol\":26603:26827  if (returndata.length > 0) { // Return data is optional... */\n      tag_275\n      jumpi\n        /* \"source/Farm.sol\":26749:26759  returndata */\n      dup1\n        /* \"source/Farm.sol\":26738:26768  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_318\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10186:10207   */\n      mstore\n        /* \"#utility.yul\":10243:10245   */\n      0x2a\n        /* \"#utility.yul\":10223:10241   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10216:10246   */\n      mstore\n        /* \"#utility.yul\":10282:10316   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10262:10280   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10255:10317   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":10333:10351   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10326:10366   */\n      mstore\n        /* \"#utility.yul\":10383:10402   */\n      0x84\n      add\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_148\n        /* \"#utility.yul\":10002:10408   */\n      jump\n        /* \"source/Farm.sol\":8687:8882  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_316:\n        /* \"source/Farm.sol\":8790:8802  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":8822:8874  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_325\n        /* \"source/Farm.sol\":8844:8850  target */\n      dup5\n        /* \"source/Farm.sol\":8852:8856  data */\n      dup5\n        /* \"source/Farm.sol\":8858:8859  0 */\n      0x00\n        /* \"source/Farm.sol\":8861:8873  errorMessage */\n      dup6\n        /* \"source/Farm.sol\":8822:8843  functionCallWithValue */\n      tag_326\n        /* \"source/Farm.sol\":8822:8874  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_325:\n        /* \"source/Farm.sol\":8815:8874  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Farm.sol\":8687:8882  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":9739:10269  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_326:\n        /* \"source/Farm.sol\":9866:9878  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":9924:9929  value */\n      dup3\n        /* \"source/Farm.sol\":9899:9920  address(this).balance */\n      selfbalance\n        /* \"source/Farm.sol\":9899:9929  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10615:10617   */\n      0x20\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10597:10618   */\n      mstore\n        /* \"#utility.yul\":10654:10656   */\n      0x26\n        /* \"#utility.yul\":10634:10652   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10627:10657   */\n      mstore\n        /* \"#utility.yul\":10693:10727   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10673:10691   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10666:10728   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":10744:10762   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10737:10773   */\n      mstore\n        /* \"#utility.yul\":10790:10809   */\n      0x84\n      add\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_148\n        /* \"#utility.yul\":10413:10815   */\n      jump\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_328:\n        /* \"source/Farm.sol\":6136:6156  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11022:11024   */\n      0x20\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11004:11025   */\n      mstore\n        /* \"#utility.yul\":11061:11063   */\n      0x1d\n        /* \"#utility.yul\":11041:11059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11034:11064   */\n      mstore\n        /* \"#utility.yul\":11100:11131   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":11080:11098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11073:11132   */\n      mstore\n        /* \"#utility.yul\":11149:11167   */\n      0x64\n      add\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      tag_148\n        /* \"#utility.yul\":10820:11173   */\n      jump\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n    tag_333:\n        /* \"source/Farm.sol\":10117:10129  bool success */\n      0x00\n        /* \"source/Farm.sol\":10131:10154  bytes memory returndata */\n      dup1\n        /* \"source/Farm.sol\":10158:10164  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"source/Farm.sol\":10158:10169  target.call */\n      and\n        /* \"source/Farm.sol\":10178:10183  value */\n      dup6\n        /* \"source/Farm.sol\":10186:10190  data */\n      dup8\n        /* \"source/Farm.sol\":10158:10191  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_340\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_339)\n    tag_340:\n      0x60\n      swap2\n      pop\n    tag_339:\n      pop\n        /* \"source/Farm.sol\":10116:10191  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Farm.sol\":10209:10261  _verifyCallResult(success, returndata, errorMessage) */\n      tag_341\n        /* \"source/Farm.sol\":10227:10234  success */\n      dup3\n        /* \"source/Farm.sol\":10236:10246  returndata */\n      dup3\n        /* \"source/Farm.sol\":10248:10260  errorMessage */\n      dup7\n        /* \"source/Farm.sol\":10209:10226  _verifyCallResult */\n      tag_342\n        /* \"source/Farm.sol\":10209:10261  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_341:\n        /* \"source/Farm.sol\":10202:10261  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"source/Farm.sol\":9739:10269  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":11275:12017  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_342:\n        /* \"source/Farm.sol\":11390:11402  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":11419:11426  success */\n      dup4\n        /* \"source/Farm.sol\":11415:12010  if (success) {... */\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"source/Farm.sol\":11450:11460  returndata */\n      dup2\n        /* \"source/Farm.sol\":11443:11460  return returndata */\n      jump(tag_248)\n        /* \"source/Farm.sol\":11415:12010  if (success) {... */\n    tag_345:\n        /* \"source/Farm.sol\":11564:11581  returndata.length */\n      dup3\n      mload\n        /* \"source/Farm.sol\":11564:11585  returndata.length > 0 */\n      iszero\n        /* \"source/Farm.sol\":11560:11999  if (returndata.length > 0) {... */\n      tag_347\n      jumpi\n        /* \"source/Farm.sol\":11827:11837  returndata */\n      dup3\n        /* \"source/Farm.sol\":11821:11838  mload(returndata) */\n      mload\n        /* \"source/Farm.sol\":11888:11903  returndata_size */\n      dup1\n        /* \"source/Farm.sol\":11875:11885  returndata */\n      dup5\n        /* \"source/Farm.sol\":11871:11873  32 */\n      0x20\n        /* \"source/Farm.sol\":11867:11886  add(32, returndata) */\n      add\n        /* \"source/Farm.sol\":11860:11904  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Farm.sol\":11560:11999  if (returndata.length > 0) {... */\n    tag_347:\n        /* \"source/Farm.sol\":11970:11982  errorMessage */\n      dup2\n        /* \"source/Farm.sol\":11963:11983  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_31:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_359:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_248\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":402:1279   */\n    tag_34:\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":683:704   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":753:766   */\n      dup3\n      mload\n        /* \"#utility.yul\":656:674   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":775:797   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":602:606   */\n      0x00\n      swap2\n        /* \"#utility.yul\":631:633   */\n      swap1\n        /* \"#utility.yul\":816:818   */\n      0x40\n      swap1\n        /* \"#utility.yul\":834:852   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":875:890   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":602:606   */\n      dup6\n        /* \"#utility.yul\":918:1253   */\n    tag_362:\n        /* \"#utility.yul\":932:938   */\n      dup3\n        /* \"#utility.yul\":929:930   */\n      dup2\n        /* \"#utility.yul\":926:939   */\n      lt\n        /* \"#utility.yul\":918:1253   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":991:1004   */\n      dup2\n      mload\n        /* \"#utility.yul\":1033:1042   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1029:1064   */\n      and\n        /* \"#utility.yul\":1017:1065   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1105:1116   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1099:1117   */\n      mload\n        /* \"#utility.yul\":1085:1097   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":1078:1118   */\n      mstore\n        /* \"#utility.yul\":1158:1169   */\n      dup6\n      add\n        /* \"#utility.yul\":1152:1170   */\n      mload\n        /* \"#utility.yul\":1138:1150   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":1131:1171   */\n      mstore\n        /* \"#utility.yul\":1200:1204   */\n      0x60\n        /* \"#utility.yul\":1191:1205   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1228:1243   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1061:1062   */\n      0x01\n        /* \"#utility.yul\":947:956   */\n      add\n        /* \"#utility.yul\":918:1253   */\n      jump(tag_362)\n    tag_364:\n      pop\n        /* \"#utility.yul\":1270:1273   */\n      swap2\n      swap8\n        /* \"#utility.yul\":402:1279   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1466:1646   */\n    tag_41:\n        /* \"#utility.yul\":1525:1531   */\n      0x00\n        /* \"#utility.yul\":1578:1580   */\n      0x20\n        /* \"#utility.yul\":1566:1575   */\n      dup3\n        /* \"#utility.yul\":1557:1564   */\n      dup5\n        /* \"#utility.yul\":1553:1576   */\n      sub\n        /* \"#utility.yul\":1549:1581   */\n      slt\n        /* \"#utility.yul\":1546:1598   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":1594:1595   */\n      0x00\n        /* \"#utility.yul\":1591:1592   */\n      dup1\n        /* \"#utility.yul\":1584:1596   */\n      revert\n        /* \"#utility.yul\":1546:1598   */\n    tag_367:\n      pop\n        /* \"#utility.yul\":1617:1640   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1466:1646   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1843:2671   */\n    tag_63:\n        /* \"#utility.yul\":2078:2080   */\n      0x20\n        /* \"#utility.yul\":2130:2151   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2200:2213   */\n      dup3\n      mload\n        /* \"#utility.yul\":2103:2121   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2222:2244   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2049:2053   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2078:2080   */\n      swap1\n        /* \"#utility.yul\":2263:2265   */\n      0x40\n      swap1\n        /* \"#utility.yul\":2281:2299   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2322:2337   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":2049:2053   */\n      dup6\n        /* \"#utility.yul\":2365:2645   */\n    tag_370:\n        /* \"#utility.yul\":2379:2385   */\n      dup3\n        /* \"#utility.yul\":2376:2377   */\n      dup2\n        /* \"#utility.yul\":2373:2386   */\n      lt\n        /* \"#utility.yul\":2365:2645   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":2438:2451   */\n      dup2\n      mload\n        /* \"#utility.yul\":2480:2489   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2476:2511   */\n      and\n        /* \"#utility.yul\":2464:2512   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2552:2563   */\n      dup7\n      add\n        /* \"#utility.yul\":2546:2564   */\n      mload\n        /* \"#utility.yul\":2532:2544   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":2525:2565   */\n      mstore\n        /* \"#utility.yul\":2585:2597   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2620:2635   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2508:2509   */\n      0x01\n        /* \"#utility.yul\":2394:2403   */\n      add\n        /* \"#utility.yul\":2365:2645   */\n      jump(tag_370)\n        /* \"#utility.yul\":2899:3017   */\n    tag_352:\n        /* \"#utility.yul\":2985:2990   */\n      dup1\n        /* \"#utility.yul\":2978:2991   */\n      iszero\n        /* \"#utility.yul\":2971:2992   */\n      iszero\n        /* \"#utility.yul\":2964:2969   */\n      dup2\n        /* \"#utility.yul\":2961:2993   */\n      eq\n        /* \"#utility.yul\":2951:3011   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":3007:3008   */\n      0x00\n        /* \"#utility.yul\":3004:3005   */\n      dup1\n        /* \"#utility.yul\":2997:3009   */\n      revert\n        /* \"#utility.yul\":3022:3263   */\n    tag_70:\n        /* \"#utility.yul\":3078:3084   */\n      0x00\n        /* \"#utility.yul\":3131:3133   */\n      0x20\n        /* \"#utility.yul\":3119:3128   */\n      dup3\n        /* \"#utility.yul\":3110:3117   */\n      dup5\n        /* \"#utility.yul\":3106:3129   */\n      sub\n        /* \"#utility.yul\":3102:3134   */\n      slt\n        /* \"#utility.yul\":3099:3151   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3147:3148   */\n      0x00\n        /* \"#utility.yul\":3144:3145   */\n      dup1\n        /* \"#utility.yul\":3137:3149   */\n      revert\n        /* \"#utility.yul\":3099:3151   */\n    tag_377:\n        /* \"#utility.yul\":3186:3195   */\n      dup2\n        /* \"#utility.yul\":3173:3196   */\n      calldataload\n        /* \"#utility.yul\":3205:3233   */\n      tag_248\n        /* \"#utility.yul\":3227:3232   */\n      dup2\n        /* \"#utility.yul\":3205:3233   */\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":4022:4149   */\n    tag_116:\n        /* \"#utility.yul\":4083:4093   */\n      0x4e487b71\n        /* \"#utility.yul\":4078:4081   */\n      0xe0\n        /* \"#utility.yul\":4074:4094   */\n      shl\n        /* \"#utility.yul\":4071:4072   */\n      0x00\n        /* \"#utility.yul\":4064:4095   */\n      mstore\n        /* \"#utility.yul\":4114:4118   */\n      0x41\n        /* \"#utility.yul\":4111:4112   */\n      0x04\n        /* \"#utility.yul\":4104:4119   */\n      mstore\n        /* \"#utility.yul\":4138:4142   */\n      0x24\n        /* \"#utility.yul\":4135:4136   */\n      0x00\n        /* \"#utility.yul\":4128:4143   */\n      revert\n        /* \"#utility.yul\":4154:4281   */\n    tag_126:\n        /* \"#utility.yul\":4215:4225   */\n      0x4e487b71\n        /* \"#utility.yul\":4210:4213   */\n      0xe0\n        /* \"#utility.yul\":4206:4226   */\n      shl\n        /* \"#utility.yul\":4203:4204   */\n      0x00\n        /* \"#utility.yul\":4196:4227   */\n      mstore\n        /* \"#utility.yul\":4246:4250   */\n      0x32\n        /* \"#utility.yul\":4243:4244   */\n      0x04\n        /* \"#utility.yul\":4236:4251   */\n      mstore\n        /* \"#utility.yul\":4270:4274   */\n      0x24\n        /* \"#utility.yul\":4267:4268   */\n      0x00\n        /* \"#utility.yul\":4260:4275   */\n      revert\n        /* \"#utility.yul\":4286:4413   */\n    tag_353:\n        /* \"#utility.yul\":4347:4357   */\n      0x4e487b71\n        /* \"#utility.yul\":4342:4345   */\n      0xe0\n        /* \"#utility.yul\":4338:4358   */\n      shl\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4328:4359   */\n      mstore\n        /* \"#utility.yul\":4378:4382   */\n      0x11\n        /* \"#utility.yul\":4375:4376   */\n      0x04\n        /* \"#utility.yul\":4368:4383   */\n      mstore\n        /* \"#utility.yul\":4402:4406   */\n      0x24\n        /* \"#utility.yul\":4399:4400   */\n      0x00\n        /* \"#utility.yul\":4392:4407   */\n      revert\n        /* \"#utility.yul\":4418:4553   */\n    tag_135:\n        /* \"#utility.yul\":4457:4460   */\n      0x00\n        /* \"#utility.yul\":4478:4495   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":4475:4518   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4498:4516   */\n      tag_387\n      tag_353\n      jump\t// in\n    tag_387:\n      pop\n        /* \"#utility.yul\":4545:4546   */\n      0x01\n        /* \"#utility.yul\":4534:4547   */\n      add\n      swap1\n        /* \"#utility.yul\":4418:4553   */\n      jump\t// out\n        /* \"#utility.yul\":5266:5391   */\n    tag_155:\n        /* \"#utility.yul\":5331:5340   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5352:5362   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5349:5385   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5365:5383   */\n      tag_271\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":5800:5936   */\n    tag_179:\n        /* \"#utility.yul\":5839:5842   */\n      0x00\n        /* \"#utility.yul\":5867:5872   */\n      dup2\n        /* \"#utility.yul\":5857:5896   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":5876:5894   */\n      tag_396\n      tag_353\n      jump\t// in\n    tag_396:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":5912:5930   */\n      add\n      swap1\n        /* \"#utility.yul\":5800:5936   */\n      jump\t// out\n        /* \"#utility.yul\":7085:7269   */\n    tag_259:\n        /* \"#utility.yul\":7155:7161   */\n      0x00\n        /* \"#utility.yul\":7208:7210   */\n      0x20\n        /* \"#utility.yul\":7196:7205   */\n      dup3\n        /* \"#utility.yul\":7187:7194   */\n      dup5\n        /* \"#utility.yul\":7183:7206   */\n      sub\n        /* \"#utility.yul\":7179:7211   */\n      slt\n        /* \"#utility.yul\":7176:7228   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":7224:7225   */\n      0x00\n        /* \"#utility.yul\":7221:7222   */\n      dup1\n        /* \"#utility.yul\":7214:7226   */\n      revert\n        /* \"#utility.yul\":7176:7228   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":7247:7263   */\n      mload\n      swap2\n        /* \"#utility.yul\":7085:7269   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7634:7762   */\n    tag_267:\n        /* \"#utility.yul\":7701:7710   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7722:7733   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7719:7756   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7736:7754   */\n      tag_271\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":7767:7935   */\n    tag_269:\n        /* \"#utility.yul\":7840:7849   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7871:7880   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7888:7903   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7882:7904   */\n      dup5\n      eq\n        /* \"#utility.yul\":7868:7905   */\n      or\n        /* \"#utility.yul\":7858:7929   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7909:7927   */\n      tag_271\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":7940:8157   */\n    tag_272:\n        /* \"#utility.yul\":7980:7981   */\n      0x00\n        /* \"#utility.yul\":8006:8007   */\n      dup3\n        /* \"#utility.yul\":7996:8128   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8050:8060   */\n      0x4e487b71\n        /* \"#utility.yul\":8045:8048   */\n      0xe0\n        /* \"#utility.yul\":8041:8061   */\n      shl\n        /* \"#utility.yul\":8038:8039   */\n      0x00\n        /* \"#utility.yul\":8031:8062   */\n      mstore\n        /* \"#utility.yul\":8085:8089   */\n      0x12\n        /* \"#utility.yul\":8082:8083   */\n      0x04\n        /* \"#utility.yul\":8075:8090   */\n      mstore\n        /* \"#utility.yul\":8113:8117   */\n      0x24\n        /* \"#utility.yul\":8110:8111   */\n      0x00\n        /* \"#utility.yul\":8103:8118   */\n      revert\n        /* \"#utility.yul\":7996:8128   */\n    tag_410:\n      pop\n        /* \"#utility.yul\":8142:8151   */\n      div\n      swap1\n        /* \"#utility.yul\":7940:8157   */\n      jump\t// out\n        /* \"#utility.yul\":9147:9398   */\n    tag_297:\n        /* \"#utility.yul\":9217:9223   */\n      0x00\n        /* \"#utility.yul\":9270:9272   */\n      0x20\n        /* \"#utility.yul\":9258:9267   */\n      dup3\n        /* \"#utility.yul\":9249:9256   */\n      dup5\n        /* \"#utility.yul\":9245:9268   */\n      sub\n        /* \"#utility.yul\":9241:9273   */\n      slt\n        /* \"#utility.yul\":9238:9290   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":9286:9287   */\n      0x00\n        /* \"#utility.yul\":9283:9284   */\n      dup1\n        /* \"#utility.yul\":9276:9288   */\n      revert\n        /* \"#utility.yul\":9238:9290   */\n    tag_415:\n        /* \"#utility.yul\":9318:9327   */\n      dup2\n        /* \"#utility.yul\":9312:9328   */\n      mload\n        /* \"#utility.yul\":9337:9368   */\n      tag_248\n        /* \"#utility.yul\":9362:9367   */\n      dup2\n        /* \"#utility.yul\":9337:9368   */\n      tag_351\n      jump\t// in\n        /* \"#utility.yul\":9752:9997   */\n    tag_319:\n        /* \"#utility.yul\":9819:9825   */\n      0x00\n        /* \"#utility.yul\":9872:9874   */\n      0x20\n        /* \"#utility.yul\":9860:9869   */\n      dup3\n        /* \"#utility.yul\":9851:9858   */\n      dup5\n        /* \"#utility.yul\":9847:9870   */\n      sub\n        /* \"#utility.yul\":9843:9875   */\n      slt\n        /* \"#utility.yul\":9840:9892   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9888:9889   */\n      0x00\n        /* \"#utility.yul\":9885:9886   */\n      dup1\n        /* \"#utility.yul\":9878:9890   */\n      revert\n        /* \"#utility.yul\":9840:9892   */\n    tag_419:\n        /* \"#utility.yul\":9920:9929   */\n      dup2\n        /* \"#utility.yul\":9914:9930   */\n      mload\n        /* \"#utility.yul\":9939:9967   */\n      tag_248\n        /* \"#utility.yul\":9961:9966   */\n      dup2\n        /* \"#utility.yul\":9939:9967   */\n      tag_352\n      jump\t// in\n        /* \"#utility.yul\":11178:11428   */\n    tag_354:\n        /* \"#utility.yul\":11263:11264   */\n      0x00\n        /* \"#utility.yul\":11273:11386   */\n    tag_425:\n        /* \"#utility.yul\":11287:11293   */\n      dup4\n        /* \"#utility.yul\":11284:11285   */\n      dup2\n        /* \"#utility.yul\":11281:11294   */\n      lt\n        /* \"#utility.yul\":11273:11386   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":11363:11374   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11357:11375   */\n      mload\n        /* \"#utility.yul\":11344:11355   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11337:11376   */\n      mstore\n        /* \"#utility.yul\":11309:11311   */\n      0x20\n        /* \"#utility.yul\":11302:11312   */\n      add\n        /* \"#utility.yul\":11273:11386   */\n      jump(tag_425)\n    tag_427:\n      pop\n      pop\n        /* \"#utility.yul\":11420:11421   */\n      0x00\n        /* \"#utility.yul\":11402:11418   */\n      swap2\n      add\n        /* \"#utility.yul\":11395:11422   */\n      mstore\n        /* \"#utility.yul\":11178:11428   */\n      jump\t// out\n        /* \"#utility.yul\":11433:11720   */\n    tag_337:\n        /* \"#utility.yul\":11562:11565   */\n      0x00\n        /* \"#utility.yul\":11600:11606   */\n      dup3\n        /* \"#utility.yul\":11594:11607   */\n      mload\n        /* \"#utility.yul\":11616:11682   */\n      tag_429\n        /* \"#utility.yul\":11675:11681   */\n      dup2\n        /* \"#utility.yul\":11670:11673   */\n      dup5\n        /* \"#utility.yul\":11663:11667   */\n      0x20\n        /* \"#utility.yul\":11655:11661   */\n      dup8\n        /* \"#utility.yul\":11651:11668   */\n      add\n        /* \"#utility.yul\":11616:11682   */\n      tag_354\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11698:11714   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11433:11720   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11725:12121   */\n    tag_350:\n        /* \"#utility.yul\":11874:11876   */\n      0x20\n        /* \"#utility.yul\":11863:11872   */\n      dup2\n        /* \"#utility.yul\":11856:11877   */\n      mstore\n        /* \"#utility.yul\":11837:11841   */\n      0x00\n        /* \"#utility.yul\":11906:11912   */\n      dup3\n        /* \"#utility.yul\":11900:11913   */\n      mload\n        /* \"#utility.yul\":11949:11955   */\n      dup1\n        /* \"#utility.yul\":11944:11946   */\n      0x20\n        /* \"#utility.yul\":11933:11942   */\n      dup5\n        /* \"#utility.yul\":11929:11947   */\n      add\n        /* \"#utility.yul\":11922:11956   */\n      mstore\n        /* \"#utility.yul\":11965:12044   */\n      tag_431\n        /* \"#utility.yul\":12037:12043   */\n      dup2\n        /* \"#utility.yul\":12032:12034   */\n      0x40\n        /* \"#utility.yul\":12021:12030   */\n      dup6\n        /* \"#utility.yul\":12017:12035   */\n      add\n        /* \"#utility.yul\":12012:12014   */\n      0x20\n        /* \"#utility.yul\":12004:12010   */\n      dup8\n        /* \"#utility.yul\":12000:12015   */\n      add\n        /* \"#utility.yul\":11965:12044   */\n      tag_354\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12105:12107   */\n      0x1f\n        /* \"#utility.yul\":12084:12099   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12080:12109   */\n      and\n        /* \"#utility.yul\":12065:12110   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12061:12115   */\n      add\n      swap3\n        /* \"#utility.yul\":11725:12121   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122031a6ba8384db8430167747d143d3222bb10865f21fe12da799b4e1ecd6d816ba64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1237": {
									"entryPoint": null,
									"id": 1237,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1126": {
									"entryPoint": 197,
									"id": 1126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"validator_revert_address": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:837:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:525:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "331:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "340:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "327:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "352:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "323:33:1"
															},
															"nodeType": "YulIf",
															"src": "320:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "382:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "386:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "420:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "420:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "460:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "470:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "484:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "520:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "505:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "499:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:25:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "488:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "558:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "533:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "533:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "575:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "585:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "632:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "645:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "681:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "660:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:25:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "649:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "707:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_2",
																								"nodeType": "YulIdentifier",
																								"src": "730:7:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "723:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "723:15:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "716:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "716:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "704:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:36:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:44:1"
															},
															"nodeType": "YulIf",
															"src": "694:64:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "767:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "777:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "793:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "824:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "809:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "803:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "291:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "299:6:1",
														"type": ""
													}
												],
												"src": "150:685:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        let value_2 := mload(add(headStart, 96))\n        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n        value3 := value_2\n        value4 := mload(add(headStart, 128))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH1 0x5 SSTORE PUSH1 0x3 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1851 CODESIZE SUB DUP1 PUSH3 0x1851 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4F SWAP2 PUSH3 0x138 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x69 CALLER PUSH3 0xC5 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP6 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SSTORE PUSH1 0x8 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x1A4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x15E DUP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x171 DUP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x169D DUP1 PUSH3 0x1B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xAE04D45D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xB5A5E509 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xF995441B EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8E7271FA EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x372500AB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x6AA4439F EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2517A8 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x114CD3C8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x3166B848 EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x184 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x233 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x233 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x233 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH2 0x3C4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x422 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x40F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x479 JUMPI PUSH2 0x479 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x536 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x4C5 JUMPI PUSH2 0x4C5 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x51C JUMPI PUSH2 0x51C PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x532 SWAP1 PUSH2 0x1512 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x540 DUP2 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x429 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x594 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x567 JUMPI SWAP1 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0xCA3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x596F7520646F6E2774206F776E207468697320746F6B656E21 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x6A5 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x6A3 SWAP2 PUSH2 0x152B JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x6B3 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER PUSH2 0xCFC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x73D SWAP1 DUP5 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x802 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x7E3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x7C6 JUMPI PUSH2 0x7C6 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7F0 JUMPI DUP1 SWAP2 POP PUSH2 0x802 JUMP JUMPDEST DUP1 PUSH2 0x7FA DUP2 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x747 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x827 JUMPI PUSH2 0x827 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x871 DUP4 PUSH2 0x153E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP PUSH2 0x92C SWAP3 POP PUSH2 0xD56 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x94D SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x92C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9EF DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0D PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA52 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA2B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA7E JUMPI PUSH2 0xA7E PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAAA JUMPI PUSH2 0xAAA PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xAE1 SWAP1 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA58 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF9 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xB1E PUSH1 0x0 PUSH2 0xE14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB28 PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xB3A CALLER DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x92C PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xB59 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x92C DUP2 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 SWAP1 PUSH2 0xBFB DUP5 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC14 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x111A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x92C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xCF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 SWAP3 PUSH2 0xE10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD32 SWAP1 TIMESTAMP PUSH2 0x156E JUMP JUMPDEST PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xDAF SWAP1 DUP5 SWAP1 PUSH2 0x1163 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x596F7520646F6E2774206F776E207468697320746F6B656E21 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 PUSH2 0xF9E DUP4 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xFCE SWAP1 DUP5 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE SWAP7 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP11 MSTORE SWAP5 DUP10 KECCAK256 DUP9 MLOAD PUSH1 0x3 SWAP1 SWAP7 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR DUP7 SSTORE SWAP2 MLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP4 MSTORE DUP1 SLOAD SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0x10CA DUP4 PUSH2 0x1512 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xDAF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1244 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x124C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1369 DUP3 DUP3 DUP7 PUSH2 0x1374 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1383 JUMPI POP DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1393 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC05 DUP2 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13FC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC05 DUP2 PUSH2 0x14A5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1524 JUMPI PUSH2 0x1524 PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC05 DUP2 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC05 DUP2 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x160F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x162A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15F4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1653 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xA6 0xBA DUP4 DUP5 0xDB DUP5 ADDRESS AND PUSH24 0x47D143D3222BB10865F21FE12DA799B4E1ECD6D816BA6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "28878:6925:0:-:0;;;29644:6;29612:38;;29684:1;29659:26;;29694:31;;;-1:-1:-1;;29694:31:0;;;-1:-1:-1;29743:27:0;;30100:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17794:1;17905:7;:22;;;15323:15;;-1:-1:-1;;15323:15:0;;;27132:32;14778:10;27132:18;:32::i;:::-;30313:13;:39;;-1:-1:-1;;;;;30313:39:0;;;-1:-1:-1;;;;;;30313:39:0;;;;;;;;30363:20;:37;;;;;;;;;;30411:12;:28;;;;;;;;;;;;;;;30450:14;:32;30493:8;:20;30540:11;:26;;;;;-1:-1:-1;;30540:26:0;;;;;;;;;28878:6925;;28678:191;28771:6;;;-1:-1:-1;;;;;28788:17:0;;;28771:6;28788:17;;;-1:-1:-1;;;;;;28788:17:0;;;;;;28821:40;;28771:6;;;;;;;;28821:40;;28752:16;;28821:40;28741:128;28678:191;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:685::-;267:6;275;283;291;299;352:3;340:9;331:7;327:23;323:33;320:53;;;369:1;366;359:12;320:53;401:9;395:16;420:31;445:5;420:31;:::i;:::-;520:2;505:18;;499:25;470:5;;-1:-1:-1;533:33:1;499:25;533:33;:::i;:::-;632:2;617:18;;611:25;681:2;666:18;;660:25;585:7;;-1:-1:-1;611:25:1;-1:-1:-1;723:15:1;;716:23;704:36;;694:64;;754:1;751;744:12;694:64;777:7;767:17;;;824:3;813:9;809:19;803:26;793:36;;150:685;;;;;;;;:::o;:::-;28878:6925:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1017": {
									"entryPoint": 4451,
									"id": 1017,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1069": {
									"entryPoint": 3508,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_611": {
									"entryPoint": 3414,
									"id": 611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_603": {
									"entryPoint": 3235,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_517": {
									"entryPoint": 3694,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_528": {
									"entryPoint": 4378,
									"id": 528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stake_1368": {
									"entryPoint": 3764,
									"id": 1368,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1126": {
									"entryPoint": 3604,
									"id": 1126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_verifyCallResult_362": {
									"entryPoint": 4980,
									"id": 362,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@adminWithdrawRewards_1394": {
									"entryPoint": 3084,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@availableRewards_1837": {
									"entryPoint": 3028,
									"id": 1837,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRewards_1613": {
									"entryPoint": 3324,
									"id": 1613,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewards_1662": {
									"entryPoint": 2351,
									"id": 1662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_280": {
									"entryPoint": 4684,
									"id": 280,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_210": {
									"entryPoint": 4661,
									"id": 210,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getStakedTokens_1724": {
									"entryPoint": 2530,
									"id": 1724,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakedTokens_V3_1816": {
									"entryPoint": 882,
									"id": 1816,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockEnabled_1180": {
									"entryPoint": null,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockTime_1183": {
									"entryPoint": null,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftCollection_1169": {
									"entryPoint": null,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1055": {
									"entryPoint": null,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_505": {
									"entryPoint": null,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1083": {
									"entryPoint": 2828,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsPerHour_1174": {
									"entryPoint": null,
									"id": 1174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1166": {
									"entryPoint": null,
									"id": 1166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_834": {
									"entryPoint": 3421,
									"id": 834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLockEnabled_1249": {
									"entryPoint": 2801,
									"id": 1249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockTime_1261": {
									"entryPoint": 2884,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardsPerHour_1273": {
									"entryPoint": 2897,
									"id": 1273,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1410": {
									"entryPoint": 2848,
									"id": 1410,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakerAddress_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_1188": {
									"entryPoint": null,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenStartStakeTime_1196": {
									"entryPoint": null,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1106": {
									"entryPoint": 2910,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@version_1177": {
									"entryPoint": null,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1583": {
									"entryPoint": 1454,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12123:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:1"
															},
															"nodeType": "YulIf",
															"src": "230:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:1",
														"type": ""
													}
												],
												"src": "150:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:668:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "621:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "631:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "625:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "642:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "660:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "671:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "656:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "646:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "690:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "683:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "713:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "724:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "717:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "739:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "753:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "743:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "806:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "816:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "810:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "827:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "849:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "861:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "887:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "865:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "899:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "908:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "903:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "967:286:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "981:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "997:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "991:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "991:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "985:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1024:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1039:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1033:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1033:9:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1052:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1057:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1048:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1048:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1061:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1044:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1044:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1029:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1029:35:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1017:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1017:48:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1017:48:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1089:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1094:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1085:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1085:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1109:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1113:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1105:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1105:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1099:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1099:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1078:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1078:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1142:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1147:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1138:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1138:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1162:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1166:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1158:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1158:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1152:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1152:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1131:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1131:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1131:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1184:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1195:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1200:4:1",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1191:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1191:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1184:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1218:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1232:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1240:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1228:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1228:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1218:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "929:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "932:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "926:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "940:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "942:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "951:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "954:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "947:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "947:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "942:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "922:3:1",
																"statements": []
															},
															"src": "918:335:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1262:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1270:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1262:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "580:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "591:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "602:4:1",
														"type": ""
													}
												],
												"src": "402:877:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1395:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1407:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1395:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1437:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1448:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1430:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1354:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1365:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1376:4:1",
														"type": ""
													}
												],
												"src": "1284:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1536:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1582:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1591:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1584:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1584:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1584:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1557:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1566:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1553:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1578:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:32:1"
															},
															"nodeType": "YulIf",
															"src": "1546:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1607:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1630:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1617:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1502:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1513:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1525:6:1",
														"type": ""
													}
												],
												"src": "1466:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1746:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1768:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1756:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1798:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1823:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1816:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1816:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1809:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1791:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1791:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1715:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1726:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1737:4:1",
														"type": ""
													}
												],
												"src": "1651:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2058:613:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2068:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2078:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2072:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2089:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2107:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2118:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2093:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2148:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2130:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2160:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2171:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2164:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2186:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2200:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2190:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2237:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2222:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2222:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2253:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2263:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2257:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2274:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2285:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2296:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2308:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2326:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2334:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2312:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2346:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2355:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2350:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:231:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2428:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2444:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2438:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2438:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "2432:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2471:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2486:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2480:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2480:9:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2499:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2504:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2495:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2495:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2508:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2491:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2491:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2476:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2476:35:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2464:48:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2464:48:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2536:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "2541:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2532:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2532:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2556:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2560:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2552:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2552:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2546:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2546:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2525:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2525:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2525:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2578:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2589:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2594:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2585:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2578:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2610:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2624:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2632:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2620:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2620:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2376:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2379:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2387:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2389:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2398:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2394:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2394:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2369:3:1",
																"statements": []
															},
															"src": "2365:280:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2662:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2027:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2038:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2049:4:1",
														"type": ""
													}
												],
												"src": "1843:828:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2802:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2814:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2825:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2810:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2802:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2844:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2875:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2880:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2871:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2871:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2884:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2867:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2867:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2837:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2761:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2772:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2783:4:1",
														"type": ""
													}
												],
												"src": "2676:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2995:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3004:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3007:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2997:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2997:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2997:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2964:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2985:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2978:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2978:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2971:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2971:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2961:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:40:1"
															},
															"nodeType": "YulIf",
															"src": "2951:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2930:5:1",
														"type": ""
													}
												],
												"src": "2899:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:174:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3135:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3144:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3147:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3137:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3137:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3137:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3110:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3119:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3106:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3102:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:32:1"
															},
															"nodeType": "YulIf",
															"src": "3099:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3160:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3186:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3173:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3164:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3227:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3205:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3205:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3242:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3252:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3055:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3066:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3078:6:1",
														"type": ""
													}
												],
												"src": "3022:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3369:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3379:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3391:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3387:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3379:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3421:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3436:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3452:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3457:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3448:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3448:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3461:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3444:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3444:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3432:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3432:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3414:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3338:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3360:4:1",
														"type": ""
													}
												],
												"src": "3268:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3643:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3655:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3643:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3685:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3696:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3739:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3712:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3755:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3586:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3597:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3605:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3613:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3624:4:1",
														"type": ""
													}
												],
												"src": "3476:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3915:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3925:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3937:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3948:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3933:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3933:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3925:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3967:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3982:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3998:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4003:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3994:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4007:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3990:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3990:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3978:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3960:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3960:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3884:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3895:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3906:4:1",
														"type": ""
													}
												],
												"src": "3800:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4078:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4083:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4064:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4128:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4022:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4186:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4210:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4215:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4206:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4243:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4246:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4236:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4270:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4154:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4318:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4342:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4338:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4328:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4328:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4375:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4378:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4368:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4399:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4392:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4286:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4465:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4496:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4498:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4498:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4498:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4481:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4488:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4488:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4478:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:17:1"
															},
															"nodeType": "YulIf",
															"src": "4475:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4527:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4538:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4545:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4447:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4457:3:1",
														"type": ""
													}
												],
												"src": "4418:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4732:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4742:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4783:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4779:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4799:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4822:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4833:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4818:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4818:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4838:27:1",
																		"type": "",
																		"value": "You have no tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4811:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4811:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4811:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4875:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4887:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4875:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4709:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4723:4:1",
														"type": ""
													}
												],
												"src": "4558:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5086:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5096:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5133:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5153:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5126:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5126:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5187:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5172:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5192:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5165:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5229:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5241:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5229:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5063:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5077:4:1",
														"type": ""
													}
												],
												"src": "4912:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5314:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5324:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5335:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5338:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5324:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5363:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5365:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5365:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5355:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5358:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5352:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5352:10:1"
															},
															"nodeType": "YulIf",
															"src": "5349:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5297:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5300:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5306:3:1",
														"type": ""
													}
												],
												"src": "5266:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5587:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5580:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5580:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5632:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5617:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5610:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5660:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5671:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5656:18:1"
																	},
																	{
																		"hexValue": "546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5676:34:1",
																		"type": "",
																		"value": "Token lock time has not yet expi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5649:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5731:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5742:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5727:18:1"
																	},
																	{
																		"hexValue": "726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5747:5:1",
																		"type": "",
																		"value": "red"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5720:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5762:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5774:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5785:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5762:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5547:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5561:4:1",
														"type": ""
													}
												],
												"src": "5396:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5847:89:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5874:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5876:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5876:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5876:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5867:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:13:1"
															},
															"nodeType": "YulIf",
															"src": "5857:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5905:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5916:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5927:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:18:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5905:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5829:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5839:3:1",
														"type": ""
													}
												],
												"src": "5800:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6098:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6108:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6120:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6108:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6143:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6161:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6166:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6170:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6147:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6188:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6203:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6211:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6181:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6255:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6263:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6251:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6283:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6303:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6276:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6051:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6062:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6070:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6078:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6089:4:1",
														"type": ""
													}
												],
												"src": "5941:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6495:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6512:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6523:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6505:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6505:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6557:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6562:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6535:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6535:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6596:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6601:30:1",
																		"type": "",
																		"value": "You have no rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6641:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6653:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6641:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6472:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6486:4:1",
														"type": ""
													}
												],
												"src": "6321:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6852:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6869:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6862:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6862:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6903:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6914:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6899:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6919:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6892:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6953:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6938:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6958:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6931:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7024:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7009:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7029:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7002:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7059:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7070:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7047:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6829:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6843:4:1",
														"type": ""
													}
												],
												"src": "6678:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7166:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7212:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7221:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7224:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7214:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7214:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7214:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7187:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7196:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7183:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:32:1"
															},
															"nodeType": "YulIf",
															"src": "7176:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7237:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7247:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7237:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7132:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7143:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7155:6:1",
														"type": ""
													}
												],
												"src": "7085:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7448:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7465:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7458:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7458:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7510:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7495:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7488:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7549:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7534:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7554:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7527:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7597:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7609:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7425:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7439:4:1",
														"type": ""
													}
												],
												"src": "7274:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7683:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7693:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7705:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7708:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7701:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7693:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7734:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7736:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7736:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7736:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7725:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7731:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7722:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:11:1"
															},
															"nodeType": "YulIf",
															"src": "7719:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7665:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7668:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7674:4:1",
														"type": ""
													}
												],
												"src": "7634:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7819:116:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7829:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7844:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7847:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7840:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7840:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7829:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7907:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7909:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7909:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7909:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7878:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7871:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7871:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7885:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7892:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7901:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7888:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7888:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7882:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7882:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7868:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7868:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:45:1"
															},
															"nodeType": "YulIf",
															"src": "7858:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7798:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7801:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7807:7:1",
														"type": ""
													}
												],
												"src": "7767:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7986:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8017:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8045:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8050:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8041:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8041:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8031:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8031:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8082:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8075:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8075:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8075:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8110:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8113:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8103:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8103:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8103:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8006:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7999:9:1"
															},
															"nodeType": "YulIf",
															"src": "7996:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8137:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8146:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8149:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8142:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8137:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7971:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7974:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7980:1:1",
														"type": ""
													}
												],
												"src": "7940:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8291:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8301:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8343:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8358:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8374:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8379:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8370:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8370:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8383:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8366:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8366:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8354:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8403:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8423:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8396:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8396:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8252:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8263:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8271:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8282:4:1",
														"type": ""
													}
												],
												"src": "8162:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8615:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8625:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8677:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8662:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8682:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8655:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8716:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8701:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8721:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8694:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8694:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8765:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8777:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8788:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8773:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8765:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8592:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8606:4:1",
														"type": ""
													}
												],
												"src": "8441:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8976:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8993:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9004:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8986:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9027:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9038:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9023:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9016:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9016:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9066:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9077:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9062:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9082:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9055:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9055:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9110:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9122:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9133:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9118:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9110:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8953:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8967:4:1",
														"type": ""
													}
												],
												"src": "8802:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9228:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9249:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9258:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9245:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9270:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9241:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9241:32:1"
															},
															"nodeType": "YulIf",
															"src": "9238:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9299:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9318:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9312:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9303:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9362:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9337:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9337:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9377:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9387:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9194:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9205:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9217:6:1",
														"type": ""
													}
												],
												"src": "9147:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9577:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9594:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9605:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9587:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9639:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9624:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9644:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9617:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9617:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9667:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9678:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9663:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9683:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9656:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9656:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9656:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9738:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9715:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9554:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9568:4:1",
														"type": ""
													}
												],
												"src": "9403:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9830:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9876:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9885:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9888:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9878:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9878:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9878:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9851:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9860:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9847:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9843:32:1"
															},
															"nodeType": "YulIf",
															"src": "9840:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9901:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9920:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9914:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9905:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9961:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9939:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9939:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9976:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9986:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9796:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9807:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9819:6:1",
														"type": ""
													}
												],
												"src": "9752:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10176:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10193:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10186:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10186:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10227:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10238:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10223:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10243:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10216:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10266:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10277:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10262:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10282:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10255:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10255:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10348:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10333:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10353:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10326:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10375:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10387:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10375:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10153:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10167:4:1",
														"type": ""
													}
												],
												"src": "10002:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10587:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10604:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10597:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10597:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10638:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10634:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10654:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10627:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10677:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10688:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10673:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10693:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10666:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10666:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10748:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10759:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10744:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10764:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10737:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10737:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10782:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10794:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10805:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10790:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10564:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10578:4:1",
														"type": ""
													}
												],
												"src": "10413:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10994:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11061:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11080:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11100:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11073:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11141:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11164:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11141:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10985:4:1",
														"type": ""
													}
												],
												"src": "10820:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11244:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11254:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11263:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11258:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11323:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11348:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11353:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11344:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11344:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11367:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11372:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11363:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11363:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11357:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11357:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11337:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11337:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11284:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11287:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11281:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11295:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11297:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11306:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11309:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11302:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11302:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11297:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11277:3:1",
																"statements": []
															},
															"src": "11273:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11406:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11411:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11402:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11395:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11395:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11222:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11227:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11232:6:1",
														"type": ""
													}
												],
												"src": "11178:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11570:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11580:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11600:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11594:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11584:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11655:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11663:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11651:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11670:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11675:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11616:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11616:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11691:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11707:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11698:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11698:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11691:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11546:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11551:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11562:3:1",
														"type": ""
													}
												],
												"src": "11433:287:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11846:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11856:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11886:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11906:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11900:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11890:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11933:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11944:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11929:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11949:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11922:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11922:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12004:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12012:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12000:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12021:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12032:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12017:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12017:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12037:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11965:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12053:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12069:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12088:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12096:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12084:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12084:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12105:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12101:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12101:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12080:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12080:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12065:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12061:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12053:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11815:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11826:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11837:4:1",
														"type": ""
													}
												],
												"src": "11725:396:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You have no tokens staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token lock time has not yet expi\")\n        mstore(add(headStart, 96), \"red\")\n        tail := add(headStart, 128)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"You have no rewards to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xAE04D45D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xB5A5E509 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xF995441B EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8E7271FA EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x372500AB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x6AA4439F EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC2517A8 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x114CD3C8 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x3166B848 EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1D4 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x184 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x233 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0x14B3 JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x233 JUMP JUMPDEST PUSH2 0x184 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B4 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x32C CALLDATASIZE PUSH1 0x4 PUSH2 0x1441 JUMP JUMPDEST PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x233 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0xC0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH2 0x3C4 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x422 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x40F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x548 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x479 JUMPI PUSH2 0x479 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x536 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x4C5 JUMPI PUSH2 0x4C5 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x51C JUMPI PUSH2 0x51C PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x532 SWAP1 PUSH2 0x1512 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x540 DUP2 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x429 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x5A7 JUMP JUMPDEST PUSH2 0x594 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x567 JUMPI SWAP1 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B6 PUSH2 0xCA3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x596F7520646F6E2774206F776E207468697320746F6B656E21 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x6A5 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x6A3 SWAP2 PUSH2 0x152B JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x6B3 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 CALLER PUSH2 0xCFC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x73D SWAP1 DUP5 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x802 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x14E6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x7E3 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x7C6 JUMPI PUSH2 0x7C6 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x7F0 JUMPI DUP1 SWAP2 POP PUSH2 0x802 JUMP JUMPDEST DUP1 PUSH2 0x7FA DUP2 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x747 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x827 JUMPI PUSH2 0x827 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x871 DUP4 PUSH2 0x153E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x906 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP PUSH2 0x92C SWAP3 POP PUSH2 0xD56 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x94D SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x92C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9EF DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH2 0xA0D PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA52 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA2B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 GT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA7E JUMPI PUSH2 0xA7E PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xAAA JUMPI PUSH2 0xAAA PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP2 MSTORE POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xACB JUMPI PUSH2 0xACB PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xAE1 SWAP1 PUSH2 0x1512 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA58 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAF9 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xB1E PUSH1 0x0 PUSH2 0xE14 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB28 PUSH2 0xCA3 JUMP JUMPDEST PUSH2 0xB30 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0xB3A CALLER DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x92C PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xB4C PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xB59 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xB66 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH2 0x92C DUP2 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 SWAP1 PUSH2 0xBFB DUP5 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC14 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0xC1C PUSH2 0x111A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x92C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xCF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 SWAP3 PUSH2 0xE10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD32 SWAP1 TIMESTAMP PUSH2 0x156E JUMP JUMPDEST PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xDAF SWAP1 DUP5 SWAP1 PUSH2 0x1163 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEFF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x596F7520646F6E2774206F776E207468697320746F6B656E21 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 PUSH2 0xF9E DUP4 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xFCE SWAP1 DUP5 SWAP1 PUSH2 0x152B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE SWAP7 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP11 MSTORE SWAP5 DUP10 KECCAK256 DUP9 MLOAD PUSH1 0x3 SWAP1 SWAP7 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR DUP7 SSTORE SWAP2 MLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP4 MSTORE DUP1 SLOAD SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0x10CA DUP4 PUSH2 0x1512 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1235 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xDAF JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11D6 SWAP2 SWAP1 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1244 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x124C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1618 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1359 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1369 DUP3 DUP3 DUP7 PUSH2 0x1374 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1383 JUMPI POP DUP2 PUSH2 0xC05 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1393 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC05 DUP2 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13FC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1477 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x92C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC05 DUP2 PUSH2 0x14A5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1524 JUMPI PUSH2 0x1524 PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x154D JUMPI PUSH2 0x154D PUSH2 0x14FC JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xD50 JUMPI PUSH2 0xD50 PUSH2 0x14FC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15B5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC05 DUP2 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC05 DUP2 PUSH2 0x14A5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x160F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x15F7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x162A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15F4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1653 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xA6 0xBA DUP4 DUP5 0xDB DUP5 ADDRESS AND PUSH24 0x47D143D3222BB10865F21FE12DA799B4E1ECD6D816BA6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "28878:6925:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34898:683;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29743:27;;;;;;;;;1430:25:1;;;1418:2;1403:18;29743:27:0;1284:177:1;30027:54:0;;;;;;:::i;:::-;;;;;;;;;;;;;;32230:1429;;;;;;:::i;:::-;;:::i;:::-;;29694:31;;;;;;;;;;;;1816:14:1;;1809:22;1791:41;;1779:2;1764:18;29694:31:0;1651:187:1;33975:386:0;;;:::i;29659:26::-;;;;;;15972:86;16043:7;;;;15972:86;;34369:523;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;29482:28::-;;;;;-1:-1:-1;;;;;29482:28:0;;;;;;-1:-1:-1;;;;;2855:32:1;;;2837:51;;2825:2;2810:18;29482:28:0;2676:218:1;30601:107:0;;;;;;:::i;:::-;;:::i;28059:103::-;;;:::i;27411:87::-;27484:6;;;;;-1:-1:-1;;;;;27484:6:0;27411:87;;29612:38;;;;;;29798:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3678:25:1;;;3734:2;3719:18;;3712:34;;;;3762:18;;;3755:34;3666:2;3651:18;29798:41:0;3476:319:1;29925:48:0;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;29925:48:0;;;32106:116;;;;;;:::i;:::-;;:::i;30725:98::-;;;;;;:::i;:::-;;:::i;30829:122::-;;;;;;:::i;:::-;;:::i;29449:26::-;;;;;-1:-1:-1;;;;;29449:26:0;;;28317:201;;;;;;:::i;:::-;;:::i;35589:209::-;;;;;;:::i;:::-;;:::i;31903:195::-;;;:::i;34898:683::-;-1:-1:-1;;;;;34999:14:0;;35029:1;34999:14;;;:7;:14;;;;;:27;34962:20;;34999:31;34995:579;;-1:-1:-1;;;;;35102:14:0;;35047:34;35102:14;;;:7;:14;;;;;:27;35084:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35084:46:0;;;;;;;;;;;;;;;;;35047:83;;35145:14;35185:9;35180:286;-1:-1:-1;;;;;35204:14:0;;;;;;:7;:14;;;;;:27;;:34;35200:38;;35180:286;;;-1:-1:-1;;;;;35268:14:0;;35318:1;35268:14;;;:7;:14;;;;;:27;;:30;;35296:1;;35268:30;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;-1:-1:-1;;;;;35268:37:0;:53;35264:187;;-1:-1:-1;;;;;35370:14:0;;;;;;:7;:14;;;;;:27;;:30;;35398:1;;35370:30;;;;;;:::i;:::-;;;;;;;;;;35346:54;;;;;;;;35370:30;;;;;;;35346:54;;-1:-1:-1;;;;;35346:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;:13;;35360:6;;35346:21;;;;;;:::i;:::-;;;;;;:54;;;;35423:8;;;;;:::i;:::-;;;;35264:187;35240:3;;;;:::i;:::-;;;;35180:286;;;-1:-1:-1;35489:13:0;;34898:683;-1:-1:-1;;;34898:683:0:o;34995:579::-;35542:20;;;35560:1;35542:20;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35542:20:0;;;;;;;;;;;;;;;;-1:-1:-1;35535:27:0;34898:683;-1:-1:-1;;34898:683:0:o;32230:1429::-;18356:21;:19;:21::i;:::-;32329:10:::1;32356:1;32321:19:::0;;;:7:::1;:19;::::0;;;;:32;32299:111:::1;;;::::0;-1:-1:-1;;;32299:111:0;;4760:2:1;32299:111:0::1;::::0;::::1;4742:21:1::0;4799:2;4779:18;;;4772:30;4838:27;4818:18;;;4811:55;4883:18;;32299:111:0::1;;;;;;;;;32429:23;::::0;;;:13:::1;:23;::::0;;;;;-1:-1:-1;;;;;32429:23:0::1;32456:10;32429:37;32421:75;;;::::0;-1:-1:-1;;;32421:75:0;;5114:2:1;32421:75:0::1;::::0;::::1;5096:21:1::0;5153:2;5133:18;;;5126:30;-1:-1:-1;;;5172:18:1;;;5165:55;5237:18;;32421:75:0::1;4912:349:1::0;32421:75:0::1;32532:11;::::0;::::1;;:77:::0;::::1;;;-1:-1:-1::0;32581:8:0::1;::::0;32549:29:::1;::::0;;;:19:::1;:29;::::0;;;;;32593:15:::1;::::0;32549:40:::1;::::0;::::1;:::i;:::-;32548:60;32532:77;32531:95;;;-1:-1:-1::0;32615:11:0::1;::::0;::::1;;32614:12;32531:95;32509:180;;;::::0;-1:-1:-1;;;32509:180:0;;5598:2:1;32509:180:0::1;::::0;::::1;5580:21:1::0;5637:2;5617:18;;;5610:30;5676:34;5656:18;;;5649:62;-1:-1:-1;;;5727:18:1;;;5720:33;5770:19;;32509:180:0::1;5396:399:1::0;32509:180:0::1;32801:15;32819:28;32836:10;32819:16;:28::i;:::-;32866:10;32858:19;::::0;;;:7:::1;:19;::::0;;;;:36:::1;;:47:::0;;32801:46;;-1:-1:-1;32801:46:0;;32858:36;;:19;:47:::1;::::0;32801:46;;32858:47:::1;:::i;:::-;::::0;;;-1:-1:-1;32920:13:0::1;::::0;-1:-1:-1;32920:13:0;32948:353:::1;32980:10;32972:19;::::0;;;:7:::1;:19;::::0;;;;:32:::1;;:39:::0;32968:43;::::1;32948:353;;;33063:10;33055:19;::::0;;;:7:::1;:19;::::0;;;;:32:::1;;:35:::0;;33102:8;;33055:32;33088:1;;33055:35;::::1;;;;;:::i;:::-;;;;;;;;;;;:43;;;:55;:151;;;;-1:-1:-1::0;33158:10:0::1;33204:1;33150:19:::0;;;:7:::1;:19;::::0;;;;:32:::1;;:35:::0;;33183:1;;33150:35;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:42:::0;-1:-1:-1;;;;;33150:42:0::1;:56;;33055:151;33033:257;;;33249:1;33241:9;;33269:5;;33033:257;33013:3:::0;::::1;::::0;::::1;:::i;:::-;;;;32948:353;;;-1:-1:-1::0;33323:10:0::1;33372:1;33315:19:::0;;;:7:::1;:19;::::0;;;;:32:::1;;:39:::0;;33348:5;;33315:39;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:59:::0;;-1:-1:-1;;;;;;33315:59:0::1;-1:-1:-1::0;;;;;33315:59:0;;;::::1;::::0;;;::::1;::::0;;;33393:10:::1;33385:19:::0;;:7:::1;:19:::0;;;;;;:34;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;33464:1:0::1;33430:23:::0;;;:13:::1;:23;::::0;;;;;;;:36;;-1:-1:-1;;;;;;33430:36:0::1;::::0;;33477:19:::1;:29:::0;;;;;;:33;;;;33523:13:::1;::::0;:63;;-1:-1:-1;;;33523:63:0;;33558:4:::1;33523:63;::::0;::::1;6181:34:1::0;33565:10:0::1;6231:18:1::0;;;6224:43;6283:18;;;6276:34;;;-1:-1:-1;;;;;33523:13:0;;::::1;::::0;:26:::1;::::0;6116:18:1;;33523:63:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;33605:10:0::1;33597:19;::::0;;;:7:::1;:19;::::0;;;;33636:15:::1;33597:36;::::0;;::::1;:54:::0;-1:-1:-1;18400:20:0;;-1:-1:-1;18400:18:0;;-1:-1:-1;;18400:20:0:i;:::-;32230:1429;:::o;33975:386::-;34089:10;34019:15;34081:19;;;:7;:19;;;;;:36;;;34019:15;;34037:28;;:16;:28::i;:::-;:80;;;;:::i;:::-;34019:98;;34146:1;34136:7;:11;34128:52;;;;-1:-1:-1;;;34128:52:0;;6523:2:1;34128:52:0;;;6505:21:1;6562:2;6542:18;;;6535:30;6601;6581:18;;;6574:58;6649:18;;34128:52:0;6321:352:1;34128:52:0;34199:10;34191:19;;;;:7;:19;;;;;34230:15;34191:36;;;;:54;;;;34256:36;;;;:40;;;;34307:12;:46;;-1:-1:-1;;;;;34307:12:0;;;;34345:7;34307:25;:46::i;34369:523::-;34430:23;34466:34;34503:25;34522:5;34503:18;:25::i;:::-;34466:62;;34539:41;34604:13;:20;34583:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;34583:42:0;;;;;;;;;;;;;;;;34539:86;;34640:9;34636:214;34659:13;:20;34655:1;:24;34636:214;;;34724:114;;;;;;;;34757:13;34771:1;34757:16;;;;;;;;:::i;:::-;;;;;;;:23;;;-1:-1:-1;;;;;34724:114:0;;;;;34799:13;34813:1;34799:16;;;;;;;;:::i;:::-;;;;;;;:24;;;34724:114;;;34701:17;34719:1;34701:20;;;;;;;;:::i;:::-;;;;;;:137;;;;34681:3;;;;;:::i;:::-;;;;34636:214;;;-1:-1:-1;34867:17:0;34369:523;-1:-1:-1;;;34369:523:0:o;30601:107::-;27297:13;:11;:13::i;:::-;30674:11:::1;:26:::0;;-1:-1:-1;;30674:26:0::1;::::0;::::1;;::::0;;;::::1;::::0;;30601:107::o;28059:103::-;27297:13;:11;:13::i;:::-;28124:30:::1;28151:1;28124:18;:30::i;:::-;28059:103::o:0;32106:116::-;18356:21;:19;:21::i;:::-;15577:19:::1;:17;:19::i;:::-;32186:28:::2;32193:10;32205:8;32186:6;:28::i;:::-;18400:20:::0;17794:1;18916:7;:22;18733:213;30725:98;27297:13;:11;:13::i;:::-;30795:8:::1;:20:::0;30725:98::o;30829:122::-;27297:13;:11;:13::i;:::-;30911:14:::1;:32:::0;30829:122::o;28317:201::-;27297:13;:11;:13::i;:::-;-1:-1:-1;;;;;28406:22:0;::::1;28398:73;;;::::0;-1:-1:-1;;;28398:73:0;;6880:2:1;28398:73:0::1;::::0;::::1;6862:21:1::0;6919:2;6899:18;;;6892:30;6958:34;6938:18;;;6931:62;-1:-1:-1;;;7009:18:1;;;7002:36;7055:19;;28398:73:0::1;6678:402:1::0;28398:73:0::1;28482:28;28501:8;28482:18;:28::i;35589:209::-:0;-1:-1:-1;;;;;35732:16:0;;35653:7;35732:16;;;:7;:16;;;;;:33;;;35653:7;;35691:25;35740:7;35691:16;:25::i;:::-;:74;;;;:::i;:::-;35673:92;35589:209;-1:-1:-1;;;35589:209:0:o;31903:195::-;27297:13;:11;:13::i;:::-;15836:16:::1;:14;:16::i;:::-;31995:12:::2;::::0;:37:::2;::::0;-1:-1:-1;;;31995:37:0;;32026:4:::2;31995:37;::::0;::::2;2837:51:1::0;31976:16:0::2;::::0;-1:-1:-1;;;;;31995:12:0::2;::::0;:22:::2;::::0;2810:18:1;;31995:37:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32043:12;::::0;31976:56;;-1:-1:-1;32043:47:0::2;::::0;-1:-1:-1;;;;;32043:12:0::2;32069:10;31976:56:::0;32043:25:::2;:47::i;18436:289::-:0;17838:1;18566:7;;:19;18558:63;;;;-1:-1:-1;;;18558:63:0;;7476:2:1;18558:63:0;;;7458:21:1;7515:2;7495:18;;;7488:30;7554:33;7534:18;;;7527:61;7605:18;;18558:63:0;7274:355:1;18558:63:0;17838:1;18699:7;:18;18436:289::o;33667:300::-;33936:14;;-1:-1:-1;;;;;33892:16:0;;33760;33892;;;:7;:16;;;;;:29;;33838:33;;;;;33760:16;;33954:4;;33936:14;;33892:29;33820:51;;:15;:51;:::i;:::-;33819:102;;;;:::i;:::-;33803:147;;;;:::i;:::-;33802:156;;;;:::i;:::-;33794:165;33667:300;-1:-1:-1;;33667:300:0:o;18733:213::-;17794:1;18916:7;:22;18733:213::o;23768:177::-;23878:58;;;-1:-1:-1;;;;;8354:32:1;;23878:58:0;;;8336:51:1;8403:18;;;;8396:34;;;23878:58:0;;;;;;;;;;8309:18:1;;;;23878:58:0;;;;;;;;-1:-1:-1;;;;;23878:58:0;-1:-1:-1;;;23878:58:0;;;23851:86;;23871:5;;23851:19;:86::i;:::-;23768:177;;;:::o;27576:132::-;27484:6;;-1:-1:-1;;;;;27484:6:0;;;;;14778:10;27640:23;27632:68;;;;-1:-1:-1;;;27632:68:0;;8643:2:1;27632:68:0;;;8625:21:1;;;8662:18;;;8655:30;8721:34;8701:18;;;8694:62;8773:18;;27632:68:0;8441:356:1;28678:191:0;28771:6;;;-1:-1:-1;;;;;28788:17:0;;;28771:6;28788:17;;;-1:-1:-1;;;;;;28788:17:0;;;;;;28821:40;;28771:6;;;;;;;;28821:40;;28752:16;;28821:40;28741:128;28678:191;:::o;16131:108::-;16043:7;;;;16201:9;16193:38;;;;-1:-1:-1;;;16193:38:0;;9004:2:1;16193:38:0;;;8986:21:1;9043:2;9023:18;;;9016:30;-1:-1:-1;;;9062:18:1;;;9055:46;9118:18;;16193:38:0;8802:340:1;30959:936:0;31052:13;;:31;;-1:-1:-1;;;31052:31:0;;;;;1430:25:1;;;-1:-1:-1;;;;;31052:42:0;;;;:13;;:21;;1403:18:1;;31052:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31052:42:0;;31030:117;;;;-1:-1:-1;;;31030:117:0;;5114:2:1;31030:117:0;;;5096:21:1;5153:2;5133:18;;;5126:30;-1:-1:-1;;;5172:18:1;;;5165:55;5237:18;;31030:117:0;4912:349:1;31030:117:0;-1:-1:-1;;;;;31164:16:0;;31196:1;31164:16;;;:7;:16;;;;;:29;:33;31160:168;;31214:15;31232:25;31249:7;31232:16;:25::i;:::-;-1:-1:-1;;;;;31272:16:0;;;;;;:7;:16;;;;;:33;;:44;;31214:43;;-1:-1:-1;31214:43:0;;31272:33;;:16;:44;;31214:43;;31272:44;:::i;:::-;;;;-1:-1:-1;;;31160:168:0;31340:13;;:60;;-1:-1:-1;;;31340:60:0;;-1:-1:-1;;;;;6199:15:1;;;31340:60:0;;;6181:34:1;31384:4:0;6231:18:1;;;6224:43;6283:18;;;6276:34;;;31340:13:0;;;;:26;;6116:18:1;;31340:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;31446:164:0;;;;;;;;-1:-1:-1;;;;;31446:164:0;;;;;;;;;;;;;31577:15;31446:164;;;;;;-1:-1:-1;31621:16:0;;;:7;:16;;;;;:29;;;;:47;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31621:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31679:16;;:31;;31446:164;;-1:-1:-1;31679:31:0;;-1:-1:-1;31621:16:0;31679:31;;;:::i;:::-;;;;-1:-1:-1;;;31721:23:0;;;;:13;:23;;;;;;;;:33;;-1:-1:-1;;;;;31721:33:0;;;-1:-1:-1;;;;;;31721:33:0;;;;;;;31765:19;:29;;;;;31797:15;31765:47;;;;31836:16;;;:7;:16;;;;;:33;;:51;30959:936::o;16316:108::-;16043:7;;;;16375:41;;;;-1:-1:-1;;;16375:41:0;;9605:2:1;16375:41:0;;;9587:21:1;9644:2;9624:18;;;9617:30;-1:-1:-1;;;9663:18:1;;;9656:50;9723:18;;16375:41:0;9403:344:1;26073:761:0;26497:23;26523:69;26551:4;26523:69;;;;;;;;;;;;;;;;;26531:5;-1:-1:-1;;;;;26523:27:0;;;:69;;;;;:::i;:::-;26607:17;;26497:95;;-1:-1:-1;26607:21:0;26603:224;;26749:10;26738:30;;;;;;;;;;;;:::i;:::-;26730:85;;;;-1:-1:-1;;;26730:85:0;;10204:2:1;26730:85:0;;;10186:21:1;10243:2;10223:18;;;10216:30;10282:34;10262:18;;;10255:62;-1:-1:-1;;;10333:18:1;;;10326:40;10383:19;;26730:85:0;10002:406:1;8687:195:0;8790:12;8822:52;8844:6;8852:4;8858:1;8861:12;8822:21;:52::i;:::-;8815:59;8687:195;-1:-1:-1;;;;8687:195:0:o;9739:530::-;9866:12;9924:5;9899:21;:30;;9891:81;;;;-1:-1:-1;;;9891:81:0;;10615:2:1;9891:81:0;;;10597:21:1;10654:2;10634:18;;;10627:30;10693:34;10673:18;;;10666:62;-1:-1:-1;;;10744:18:1;;;10737:36;10790:19;;9891:81:0;10413:402:1;9891:81:0;6136:20;;9983:60;;;;-1:-1:-1;;;9983:60:0;;11022:2:1;9983:60:0;;;11004:21:1;11061:2;11041:18;;;11034:30;11100:31;11080:18;;;11073:59;11149:18;;9983:60:0;10820:353:1;9983:60:0;10117:12;10131:23;10158:6;-1:-1:-1;;;;;10158:11:0;10178:5;10186:4;10158:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10116:75;;;;10209:52;10227:7;10236:10;10248:12;10209:17;:52::i;:::-;10202:59;9739:530;-1:-1:-1;;;;;;;9739:530:0:o;11275:742::-;11390:12;11419:7;11415:595;;;-1:-1:-1;11450:10:0;11443:17;;11415:595;11564:17;;:21;11560:439;;11827:10;11821:17;11888:15;11875:10;11871:2;11867:19;11860:44;11560:439;11970:12;11963:20;;-1:-1:-1;;;11963:20:0;;;;;;;;:::i;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:877::-;631:2;683:21;;;753:13;;656:18;;;775:22;;;602:4;;631:2;816;;834:18;;;;875:15;;;602:4;918:335;932:6;929:1;926:13;918:335;;;991:13;;1033:9;;-1:-1:-1;;;;;1029:35:1;1017:48;;1105:11;;;1099:18;1085:12;;;1078:40;1158:11;;1152:18;1138:12;;;1131:40;1200:4;1191:14;;;;1228:15;;;;1061:1;947:9;918:335;;;-1:-1:-1;1270:3:1;;402:877;-1:-1:-1;;;;;;;402:877:1:o;1466:180::-;1525:6;1578:2;1566:9;1557:7;1553:23;1549:32;1546:52;;;1594:1;1591;1584:12;1546:52;-1:-1:-1;1617:23:1;;1466:180;-1:-1:-1;1466:180:1:o;1843:828::-;2078:2;2130:21;;;2200:13;;2103:18;;;2222:22;;;2049:4;;2078:2;2263;;2281:18;;;;2322:15;;;2049:4;2365:280;2379:6;2376:1;2373:13;2365:280;;;2438:13;;2480:9;;-1:-1:-1;;;;;2476:35:1;2464:48;;2552:11;;2546:18;2532:12;;;2525:40;2585:12;;;;2620:15;;;;2508:1;2394:9;2365:280;;2899:118;2985:5;2978:13;2971:21;2964:5;2961:32;2951:60;;3007:1;3004;2997:12;3022:241;3078:6;3131:2;3119:9;3110:7;3106:23;3102:32;3099:52;;;3147:1;3144;3137:12;3099:52;3186:9;3173:23;3205:28;3227:5;3205:28;:::i;4022:127::-;4083:10;4078:3;4074:20;4071:1;4064:31;4114:4;4111:1;4104:15;4138:4;4135:1;4128:15;4154:127;4215:10;4210:3;4206:20;4203:1;4196:31;4246:4;4243:1;4236:15;4270:4;4267:1;4260:15;4286:127;4347:10;4342:3;4338:20;4335:1;4328:31;4378:4;4375:1;4368:15;4402:4;4399:1;4392:15;4418:135;4457:3;4478:17;;;4475:43;;4498:18;;:::i;:::-;-1:-1:-1;4545:1:1;4534:13;;4418:135::o;5266:125::-;5331:9;;;5352:10;;;5349:36;;;5365:18;;:::i;5800:136::-;5839:3;5867:5;5857:39;;5876:18;;:::i;:::-;-1:-1:-1;;;5912:18:1;;5800:136::o;7085:184::-;7155:6;7208:2;7196:9;7187:7;7183:23;7179:32;7176:52;;;7224:1;7221;7214:12;7176:52;-1:-1:-1;7247:16:1;;7085:184;-1:-1:-1;7085:184:1:o;7634:128::-;7701:9;;;7722:11;;;7719:37;;;7736:18;;:::i;7767:168::-;7840:9;;;7871;;7888:15;;;7882:22;;7868:37;7858:71;;7909:18;;:::i;7940:217::-;7980:1;8006;7996:132;;8050:10;8045:3;8041:20;8038:1;8031:31;8085:4;8082:1;8075:15;8113:4;8110:1;8103:15;7996:132;-1:-1:-1;8142:9:1;;7940:217::o;9147:251::-;9217:6;9270:2;9258:9;9249:7;9245:23;9241:32;9238:52;;;9286:1;9283;9276:12;9238:52;9318:9;9312:16;9337:31;9362:5;9337:31;:::i;9752:245::-;9819:6;9872:2;9860:9;9851:7;9847:23;9843:32;9840:52;;;9888:1;9885;9878:12;9840:52;9920:9;9914:16;9939:28;9961:5;9939:28;:::i;11178:250::-;11263:1;11273:113;11287:6;11284:1;11281:13;11273:113;;;11363:11;;;11357:18;11344:11;;;11337:39;11309:2;11302:10;11273:113;;;-1:-1:-1;;11420:1:1;11402:16;;11395:27;11178:250::o;11433:287::-;11562:3;11600:6;11594:13;11616:66;11675:6;11670:3;11663:4;11655:6;11651:17;11616:66;:::i;:::-;11698:16;;;;;11433:287;-1:-1:-1;;11433:287:1:o;11725:396::-;11874:2;11863:9;11856:21;11837:4;11906:6;11900:13;11949:6;11944:2;11933:9;11929:18;11922:34;11965:79;12037:6;12032:2;12021:9;12017:18;12012:2;12004:6;12000:15;11965:79;:::i;:::-;12105:2;12084:15;-1:-1:-1;;12080:29:1;12065:45;;;;12112:2;12061:54;;11725:396;-1:-1:-1;;11725:396:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1157800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminWithdrawRewards()": "infinite",
								"availableRewards(address)": "infinite",
								"claimRewards()": "infinite",
								"getStakedTokens(address)": "infinite",
								"getStakedTokens_V3(address)": "infinite",
								"lockEnabled()": "2422",
								"lockTime()": "2341",
								"nftCollection()": "2448",
								"owner()": "2387",
								"paused()": "2371",
								"renounceOwnership()": "infinite",
								"rewardsPerHour()": "2362",
								"rewardsToken()": "2403",
								"setLockEnabled(bool)": "26834",
								"setLockTime(uint256)": "24524",
								"setRewardsPerHour(uint256)": "24546",
								"stake(uint256)": "infinite",
								"stakerAddress(uint256)": "2588",
								"stakers(address)": "6877",
								"tokenStartStakeTime(uint256)": "2506",
								"transferOwnership(address)": "infinite",
								"version()": "2340",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_stake(address,uint256)": "infinite",
								"calculateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29644,
									"end": 29650,
									"name": "PUSH",
									"source": 0,
									"value": "186A0"
								},
								{
									"begin": 29612,
									"end": 29650,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29612,
									"end": 29650,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29684,
									"end": 29685,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29659,
									"end": 29685,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 29659,
									"end": 29685,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29694,
									"end": 29725,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 29743,
									"end": 29770,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 29743,
									"end": 29770,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30100,
									"end": 30584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30100,
									"end": 30584,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17794,
									"end": 17795,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17905,
									"end": 17912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 14778,
									"end": 14788,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 27132,
									"end": 27150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27132,
									"end": 27164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30326,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30313,
									"end": 30352,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30383,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30363,
									"end": 30400,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30423,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30411,
									"end": 30439,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30450,
									"end": 30464,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30450,
									"end": 30482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30493,
									"end": 30501,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 30493,
									"end": 30513,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30551,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30540,
									"end": 30566,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28752,
									"end": 28768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28752,
									"end": 28768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 28741,
									"end": 28869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 273,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 299,
									"end": 305,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 340,
									"end": 349,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 331,
									"end": 338,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 327,
									"end": 350,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 323,
									"end": 356,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 373,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 373,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 410,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 395,
									"end": 411,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 420,
									"end": 451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 445,
									"end": 450,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 420,
									"end": 451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 420,
									"end": 451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 420,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 420,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 505,
									"end": 523,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 505,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 475,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 533,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 499,
									"end": 524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 533,
									"end": 566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 533,
									"end": 566,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 533,
									"end": 566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 632,
									"end": 634,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 635,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 617,
									"end": 635,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 611,
									"end": 636,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 681,
									"end": 683,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 666,
									"end": 684,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 666,
									"end": 684,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 660,
									"end": 685,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 585,
									"end": 592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 585,
									"end": 592,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 611,
									"end": 636,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 723,
									"end": 738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 723,
									"end": 738,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 716,
									"end": 739,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 704,
									"end": 740,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 704,
									"end": 740,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 694,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 694,
									"end": 758,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 744,
									"end": 756,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 694,
									"end": 758,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 694,
									"end": 758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 777,
									"end": 784,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 824,
									"end": 827,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 813,
									"end": 822,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 803,
									"end": 829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 793,
									"end": 829,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 793,
									"end": 829,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28878,
									"end": 35803,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031a6ba8384db8430167747d143d3222bb10865f21fe12da799b4e1ecd6d816ba64736f6c63430008120033",
									".code": [
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "AE04D45D"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "AE04D45D"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "B5A5E509"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "F854A27F"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "F995441B"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "8E7271FA"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "9168AE72"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "94067045"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "372500AB"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "372500AB"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "63C28DB1"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "6588103B"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "6AA4439F"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "C2517A8"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "D668087"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "114CD3C8"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "3166B848"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 34898,
											"end": 35581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34898,
											"end": 35581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 34898,
											"end": 35581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29743,
											"end": 29770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1284,
											"end": 1461,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30027,
											"end": 30081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30027,
											"end": 30081,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32230,
											"end": 33659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32230,
											"end": 33659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1816,
											"end": 1830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29694,
											"end": 29725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1651,
											"end": 1838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 33975,
											"end": 34361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29685,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 34369,
											"end": 34892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34369,
											"end": 34892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 34369,
											"end": 34892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29482,
											"end": 29510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2676,
											"end": 2894,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 30601,
											"end": 30708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 30601,
											"end": 30708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28059,
											"end": 28162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29612,
											"end": 29650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29798,
											"end": 29839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3678,
											"end": 3703,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3651,
											"end": 3669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29798,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3476,
											"end": 3795,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29925,
											"end": 29973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29925,
											"end": 29973,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32106,
											"end": 32222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32106,
											"end": 32222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30725,
											"end": 30823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30725,
											"end": 30823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30829,
											"end": 30951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30829,
											"end": 30951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29449,
											"end": 29475,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28317,
											"end": 28518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28317,
											"end": 28518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 35589,
											"end": 35798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35589,
											"end": 35798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31903,
											"end": 32098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35029,
											"end": 35030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35006,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34962,
											"end": 34982,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34962,
											"end": 34982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34999,
											"end": 35030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34995,
											"end": 35574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 34995,
											"end": 35574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35047,
											"end": 35081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35109,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35102,
											"end": 35129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 35084,
											"end": 35130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35084,
											"end": 35130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35047,
											"end": 35130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35047,
											"end": 35130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35145,
											"end": 35159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35185,
											"end": 35194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35211,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35231,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35204,
											"end": 35231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35204,
											"end": 35238,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35200,
											"end": 35238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35200,
											"end": 35238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35318,
											"end": 35319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35275,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35268,
											"end": 35295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35296,
											"end": 35297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35296,
											"end": 35297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 35268,
											"end": 35298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35268,
											"end": 35305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35268,
											"end": 35321,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35264,
											"end": 35451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 35264,
											"end": 35451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35377,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35397,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35370,
											"end": 35397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35398,
											"end": 35399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35398,
											"end": 35399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 35370,
											"end": 35400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35370,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 35346,
											"end": 35367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35346,
											"end": 35400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35423,
											"end": 35431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35423,
											"end": 35431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35264,
											"end": 35451,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 35264,
											"end": 35451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 35240,
											"end": 35243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35240,
											"end": 35243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 35180,
											"end": 35466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35489,
											"end": 35502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35489,
											"end": 35502,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34898,
											"end": 35581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34995,
											"end": 35574,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 34995,
											"end": 35574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35560,
											"end": 35561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 35542,
											"end": 35562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35535,
											"end": 35562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34898,
											"end": 35581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34898,
											"end": 35581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18356,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18356,
											"end": 18377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32329,
											"end": 32339,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32356,
											"end": 32357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32321,
											"end": 32340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32321,
											"end": 32353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32299,
											"end": 32410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32299,
											"end": 32410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32299,
											"end": 32410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4801,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4865,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20746F6B656E73207374616B656400000000000000"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4818,
											"end": 4836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32299,
											"end": 32410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32429,
											"end": 32452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32429,
											"end": 32452,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32456,
											"end": 32466,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32429,
											"end": 32466,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32421,
											"end": 32496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32421,
											"end": 32496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32421,
											"end": 32496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5096,
											"end": 5117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4912,
											"end": 5261,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32421,
											"end": 32496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32532,
											"end": 32543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32532,
											"end": 32543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32609,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32532,
											"end": 32609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32581,
											"end": 32589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32581,
											"end": 32589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32549,
											"end": 32578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32593,
											"end": 32608,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32593,
											"end": 32608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32549,
											"end": 32589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32549,
											"end": 32589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 32549,
											"end": 32589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32548,
											"end": 32608,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32532,
											"end": 32609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 32532,
											"end": 32609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32531,
											"end": 32626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32531,
											"end": 32626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32531,
											"end": 32626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32615,
											"end": 32626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32615,
											"end": 32626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32615,
											"end": 32626,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32614,
											"end": 32626,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32531,
											"end": 32626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32531,
											"end": 32626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32509,
											"end": 32689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32509,
											"end": 32689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32509,
											"end": 32689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32509,
											"end": 32689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5580,
											"end": 5601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5710,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5770,
											"end": 5789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5396,
											"end": 5795,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 32509,
											"end": 32689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32819,
											"end": 32847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32836,
											"end": 32846,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32819,
											"end": 32835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 32819,
											"end": 32847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32819,
											"end": 32847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 32819,
											"end": 32847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32866,
											"end": 32876,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32858,
											"end": 32877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32858,
											"end": 32894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32801,
											"end": 32847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 32858,
											"end": 32905,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32858,
											"end": 32905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32920,
											"end": 32933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32920,
											"end": 32933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32920,
											"end": 32933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32980,
											"end": 32990,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32972,
											"end": 32991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 33004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32972,
											"end": 33004,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32972,
											"end": 33011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33011,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33073,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33055,
											"end": 33074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33055,
											"end": 33087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33055,
											"end": 33090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33055,
											"end": 33098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33098,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33110,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33158,
											"end": 33168,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33204,
											"end": 33205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33150,
											"end": 33169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33150,
											"end": 33182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33183,
											"end": 33184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33150,
											"end": 33185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33150,
											"end": 33192,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33206,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33150,
											"end": 33206,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33055,
											"end": 33206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33033,
											"end": 33290,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33033,
											"end": 33290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33033,
											"end": 33290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33249,
											"end": 33250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33241,
											"end": 33250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33241,
											"end": 33250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33269,
											"end": 33274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 33269,
											"end": 33274,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33033,
											"end": 33290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33033,
											"end": 33290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33013,
											"end": 33016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33013,
											"end": 33016,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 32948,
											"end": 33301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33323,
											"end": 33333,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33372,
											"end": 33373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33315,
											"end": 33334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33315,
											"end": 33347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33348,
											"end": 33353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33348,
											"end": 33353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33315,
											"end": 33354,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33354,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33315,
											"end": 33374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33374,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33393,
											"end": 33403,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33385,
											"end": 33419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33385,
											"end": 33419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33385,
											"end": 33419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33464,
											"end": 33465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33430,
											"end": 33453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33430,
											"end": 33466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33430,
											"end": 33466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33477,
											"end": 33510,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33558,
											"end": 33562,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33565,
											"end": 33575,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 33523,
											"end": 33549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33523,
											"end": 33586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33605,
											"end": 33615,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33597,
											"end": 33616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33636,
											"end": 33651,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33597,
											"end": 33633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33597,
											"end": 33651,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32230,
											"end": 33659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 33975,
											"end": 34361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34089,
											"end": 34099,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34019,
											"end": 34034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34088,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34100,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34117,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34081,
											"end": 34117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34081,
											"end": 34117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34019,
											"end": 34034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34019,
											"end": 34034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34037,
											"end": 34065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 34037,
											"end": 34065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34065,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34037,
											"end": 34065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 34037,
											"end": 34117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34037,
											"end": 34117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34019,
											"end": 34117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34019,
											"end": 34117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34146,
											"end": 34147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34136,
											"end": 34143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34136,
											"end": 34147,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6523,
											"end": 6525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6631,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F207265776172647320746F20636C61696D00000000"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6574,
											"end": 6632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6649,
											"end": 6667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6321,
											"end": 6673,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34128,
											"end": 34180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34199,
											"end": 34209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34198,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34210,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34230,
											"end": 34245,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34227,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34191,
											"end": 34227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34227,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34191,
											"end": 34245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34292,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34256,
											"end": 34292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34256,
											"end": 34296,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34307,
											"end": 34353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34307,
											"end": 34319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34345,
											"end": 34352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34307,
											"end": 34332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 34307,
											"end": 34353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34466,
											"end": 34500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34503,
											"end": 34528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34522,
											"end": 34527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34503,
											"end": 34528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34503,
											"end": 34528,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 34503,
											"end": 34528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34539,
											"end": 34580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34604,
											"end": 34617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34604,
											"end": 34624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 34583,
											"end": 34625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34583,
											"end": 34625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34539,
											"end": 34625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34539,
											"end": 34625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34640,
											"end": 34649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34659,
											"end": 34679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34655,
											"end": 34679,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34771,
											"end": 34772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 34757,
											"end": 34773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34757,
											"end": 34780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34757,
											"end": 34780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34813,
											"end": 34814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 34799,
											"end": 34815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34799,
											"end": 34823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34799,
											"end": 34823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34724,
											"end": 34838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34719,
											"end": 34720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 34701,
											"end": 34721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34701,
											"end": 34838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34681,
											"end": 34684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34681,
											"end": 34684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 34636,
											"end": 34850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34867,
											"end": 34884,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34369,
											"end": 34892,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34369,
											"end": 34892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 30601,
											"end": 30708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30674,
											"end": 30700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30601,
											"end": 30708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28124,
											"end": 28154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 28151,
											"end": 28152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28124,
											"end": 28142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28124,
											"end": 28154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28124,
											"end": 28154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 28124,
											"end": 28154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32106,
											"end": 32222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 18356,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18356,
											"end": 18377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15577,
											"end": 15596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 15577,
											"end": 15594,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 15577,
											"end": 15596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15577,
											"end": 15596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 15577,
											"end": 15596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32186,
											"end": 32214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 32193,
											"end": 32203,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32205,
											"end": 32213,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32186,
											"end": 32192,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 32186,
											"end": 32214,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32186,
											"end": 32214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 32186,
											"end": 32214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 17794,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18916,
											"end": 18923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 18938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30725,
											"end": 30823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30795,
											"end": 30815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30725,
											"end": 30823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30829,
											"end": 30951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30911,
											"end": 30925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30911,
											"end": 30943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30829,
											"end": 30951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28428,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6880,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6862,
											"end": 6883,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6921,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6892,
											"end": 6922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6958,
											"end": 6992,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7055,
											"end": 7074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6678,
											"end": 7080,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 28398,
											"end": 28471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 28501,
											"end": 28509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28482,
											"end": 28510,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35739,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35765,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35732,
											"end": 35765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35653,
											"end": 35660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35740,
											"end": 35747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35691,
											"end": 35716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35716,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35691,
											"end": 35716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 35691,
											"end": 35765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 35691,
											"end": 35765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35673,
											"end": 35765,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35589,
											"end": 35798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35589,
											"end": 35798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31903,
											"end": 32098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27297,
											"end": 27310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15836,
											"end": 15850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 15836,
											"end": 15852,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15852,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 15836,
											"end": 15852,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32007,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31995,
											"end": 32007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31995,
											"end": 32032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31995,
											"end": 32032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32026,
											"end": 32030,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31995,
											"end": 32032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31976,
											"end": 31992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31976,
											"end": 31992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31995,
											"end": 32007,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32017,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31995,
											"end": 32017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2810,
											"end": 2828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31995,
											"end": 32032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 31995,
											"end": 32032,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 31995,
											"end": 32032,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32043,
											"end": 32055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32043,
											"end": 32090,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 32043,
											"end": 32090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32043,
											"end": 32055,
											"modifierDepth": 2,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32069,
											"end": 32079,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32043,
											"end": 32068,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32043,
											"end": 32090,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18436,
											"end": 18725,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 18436,
											"end": 18725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17838,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18566,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18566,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 18585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7476,
											"end": 7478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7587,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7527,
											"end": 7588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7605,
											"end": 7623,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7605,
											"end": 7623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7274,
											"end": 7629,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17838,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18699,
											"end": 18706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18436,
											"end": 18725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33967,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33667,
											"end": 33967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33936,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33936,
											"end": 33950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33899,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33871,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33838,
											"end": 33871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33838,
											"end": 33871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 33954,
											"end": 33958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33936,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33936,
											"end": 33950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33892,
											"end": 33921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33820,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33820,
											"end": 33871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33820,
											"end": 33835,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33820,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33820,
											"end": 33871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33820,
											"end": 33871,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33820,
											"end": 33871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33819,
											"end": 33921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33819,
											"end": 33921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33803,
											"end": 33950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33803,
											"end": 33950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33802,
											"end": 33958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 33802,
											"end": 33958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33794,
											"end": 33959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33667,
											"end": 33967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17794,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18916,
											"end": 18923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 18938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8354,
											"end": 8386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8336,
											"end": 8387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 23851,
											"end": 23937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27576,
											"end": 27708,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27576,
											"end": 27708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14778,
											"end": 14788,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8625,
											"end": 8646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8680,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8662,
											"end": 8680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8755,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8701,
											"end": 8719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8441,
											"end": 8797,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28752,
											"end": 28768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28752,
											"end": 28768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 28741,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16131,
											"end": 16239,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 16131,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8802,
											"end": 9142,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30959,
											"end": 31895,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30959,
											"end": 31895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31065,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31052,
											"end": 31065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31073,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 31052,
											"end": 31073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1403,
											"end": 1421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 31052,
											"end": 31083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 31052,
											"end": 31083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5114,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5096,
											"end": 5117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "38"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5237,
											"end": 5255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4912,
											"end": 5261,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 31030,
											"end": 31147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31196,
											"end": 31197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31171,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31180,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31197,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31160,
											"end": 31328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 31160,
											"end": 31328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31232,
											"end": 31257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 31249,
											"end": 31256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 31232,
											"end": 31257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31232,
											"end": 31257,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 31232,
											"end": 31257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31279,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31305,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31272,
											"end": 31305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31214,
											"end": 31257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31272,
											"end": 31316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31272,
											"end": 31316,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31160,
											"end": 31328,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 31160,
											"end": 31328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6181,
											"end": 6215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31384,
											"end": 31388,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 31340,
											"end": 31366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 31340,
											"end": 31400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31577,
											"end": 31592,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31628,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31621,
											"end": 31668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31446,
											"end": 31610,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31621,
											"end": 31637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 31679,
											"end": 31710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31679,
											"end": 31710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31721,
											"end": 31754,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31784,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 31765,
											"end": 31794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31797,
											"end": 31812,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31843,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31836,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31836,
											"end": 31887,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30959,
											"end": 31895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16316,
											"end": 16424,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 16316,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9605,
											"end": 9607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9587,
											"end": 9608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 9646,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9617,
											"end": 9647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 9403,
											"end": 9747,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26073,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 26073,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 26551,
											"end": 26555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26531,
											"end": 26536,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26607,
											"end": 26624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26607,
											"end": 26624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26607,
											"end": 26628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 26603,
											"end": 26827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26749,
											"end": 26759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 26738,
											"end": 26768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10243,
											"end": 10245,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10223,
											"end": 10241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10316,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10383,
											"end": 10402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10002,
											"end": 10408,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 8844,
											"end": 8850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8852,
											"end": 8856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 8822,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8874,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8687,
											"end": 8882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9924,
											"end": 9929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9920,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9929,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10615,
											"end": 10617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10657,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10727,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 10762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10809,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10790,
											"end": 10809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10413,
											"end": 10815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11022,
											"end": 11024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11004,
											"end": 11025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11063,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11041,
											"end": 11059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11034,
											"end": 11064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11131,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 11080,
											"end": 11098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11080,
											"end": 11098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10820,
											"end": 11173,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10117,
											"end": 10129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10158,
											"end": 10169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 10158,
											"end": 10191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 10227,
											"end": 10234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 10209,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10202,
											"end": 10261,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 10269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 12017,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 11275,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11390,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11419,
											"end": 11426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11450,
											"end": 11460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11821,
											"end": 11838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11875,
											"end": 11885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11871,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 11963,
											"end": 11983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 402,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 683,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 683,
											"end": 704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 753,
											"end": 766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 753,
											"end": 766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 656,
											"end": 674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 656,
											"end": 674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 775,
											"end": 797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 775,
											"end": 797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 775,
											"end": 797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 602,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 852,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 834,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 834,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 875,
											"end": 890,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 875,
											"end": 890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 875,
											"end": 890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 606,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 939,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1065,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1117,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1097,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1097,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1062,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 947,
											"end": 956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 918,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1273,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 402,
											"end": 1279,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 402,
											"end": 1279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1646,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1466,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1580,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1546,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 2671,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1843,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2213,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2263,
											"end": 2265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2451,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2564,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2394,
											"end": 2403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 2365,
											"end": 2645,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 3017,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2899,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2991,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2992,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2993,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2951,
											"end": 3011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3009,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3022,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3099,
											"end": 3151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3149,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3151,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3099,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3196,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3205,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4149,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4022,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4074,
											"end": 4094,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4142,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4135,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4143,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4281,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4154,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4225,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4210,
											"end": 4213,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4206,
											"end": 4226,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4267,
											"end": 4268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4413,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4286,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4338,
											"end": 4358,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4406,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4399,
											"end": 4400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4407,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4553,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4418,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4495,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4475,
											"end": 4518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4498,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4498,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5391,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5266,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5385,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5349,
											"end": 5385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 5365,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 5365,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5936,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5800,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5857,
											"end": 5896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 5876,
											"end": 5894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5912,
											"end": 5930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 5930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5800,
											"end": 5936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7269,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7085,
											"end": 7269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7211,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7176,
											"end": 7228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7226,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7176,
											"end": 7228,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7176,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7085,
											"end": 7269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7085,
											"end": 7269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7762,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 7634,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7733,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7719,
											"end": 7756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7736,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7736,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7935,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 7767,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7904,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 7905,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7858,
											"end": 7929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7858,
											"end": 7929,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 7909,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7909,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8157,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7940,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7981,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 7996,
											"end": 8128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8050,
											"end": 8060,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8045,
											"end": 8048,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8041,
											"end": 8061,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8082,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8075,
											"end": 8090,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8118,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 7996,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 8157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9398,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 9147,
											"end": 9398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9258,
											"end": 9267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9249,
											"end": 9256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9241,
											"end": 9273,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9238,
											"end": 9290,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9238,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9238,
											"end": 9290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9276,
											"end": 9288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9238,
											"end": 9290,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 9238,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9318,
											"end": 9327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9312,
											"end": 9328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 9362,
											"end": 9367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 9337,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 9752,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9860,
											"end": 9869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9851,
											"end": 9858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9875,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 9840,
											"end": 9892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9892,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 9840,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 9961,
											"end": 9966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9939,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 9939,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11428,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 11178,
											"end": 11428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11263,
											"end": 11264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11293,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11281,
											"end": 11294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11337,
											"end": 11376,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11302,
											"end": 11312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 11273,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11402,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11395,
											"end": 11422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11720,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 11433,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 11675,
											"end": 11681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11655,
											"end": 11661,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 11616,
											"end": 11682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11616,
											"end": 11682,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 11616,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11714,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 11720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 12121,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 11725,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11874,
											"end": 11876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11863,
											"end": 11872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11837,
											"end": 11841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11913,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11949,
											"end": 11955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11944,
											"end": 11946,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11933,
											"end": 11942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11922,
											"end": 11956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11965,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 12037,
											"end": 12043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12017,
											"end": 12035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12004,
											"end": 12010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11965,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 11965,
											"end": 12044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11965,
											"end": 12044,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 11965,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12084,
											"end": 12099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12080,
											"end": 12109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12061,
											"end": 12115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12061,
											"end": 12115,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11725,
											"end": 12121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11725,
											"end": 12121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"source/Farm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"adminWithdrawRewards()": "f995441b",
							"availableRewards(address)": "f854a27f",
							"claimRewards()": "372500ab",
							"getStakedTokens(address)": "63c28db1",
							"getStakedTokens_V3(address)": "0c2517a8",
							"lockEnabled()": "3166b848",
							"lockTime()": "0d668087",
							"nftCollection()": "6588103b",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"rewardsPerHour()": "8e7271fa",
							"rewardsToken()": "d1af0c7d",
							"setLockEnabled(bool)": "6aa4439f",
							"setLockTime(uint256)": "ae04d45d",
							"setRewardsPerHour(uint256)": "b5a5e509",
							"stake(uint256)": "a694fc3a",
							"stakerAddress(uint256)": "94067045",
							"stakers(address)": "9168ae72",
							"tokenStartStakeTime(uint256)": "114cd3c8",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminWithdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Farm.StakedToken_V1[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedTokens_V3\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackeUtx\",\"type\":\"uint256\"}],\"internalType\":\"struct Farm.StakedToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lockEnabled\",\"type\":\"bool\"}],\"name\":\"setLockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerHour\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenStartStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Farm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "source/Farm.sol:Farm",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 471,
								"contract": "source/Farm.sol:Farm",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1022,
								"contract": "source/Farm.sol:Farm",
								"label": "_owner",
								"offset": 1,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1166,
								"contract": "source/Farm.sol:Farm",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)438"
							},
							{
								"astId": 1169,
								"contract": "source/Farm.sol:Farm",
								"label": "nftCollection",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)122"
							},
							{
								"astId": 1171,
								"contract": "source/Farm.sol:Farm",
								"label": "nftCollectionAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1174,
								"contract": "source/Farm.sol:Farm",
								"label": "rewardsPerHour",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1177,
								"contract": "source/Farm.sol:Farm",
								"label": "version",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1180,
								"contract": "source/Farm.sol:Farm",
								"label": "lockEnabled",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1183,
								"contract": "source/Farm.sol:Farm",
								"label": "lockTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1188,
								"contract": "source/Farm.sol:Farm",
								"label": "stakers",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Staker)1163_storage)"
							},
							{
								"astId": 1192,
								"contract": "source/Farm.sol:Farm",
								"label": "stakerAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1196,
								"contract": "source/Farm.sol:Farm",
								"label": "tokenStartStakeTime",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakedToken)1152_storage)dyn_storage": {
								"base": "t_struct(StakedToken)1152_storage",
								"encoding": "dynamic_array",
								"label": "struct Farm.StakedToken[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)438": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)122": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1163_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farm.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1163_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(StakedToken)1152_storage": {
								"encoding": "inplace",
								"label": "struct Farm.StakedToken",
								"members": [
									{
										"astId": 1147,
										"contract": "source/Farm.sol:Farm",
										"label": "staker",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1149,
										"contract": "source/Farm.sol:Farm",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "source/Farm.sol:Farm",
										"label": "stackeUtx",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Staker)1163_storage": {
								"encoding": "inplace",
								"label": "struct Farm.Staker",
								"members": [
									{
										"astId": 1154,
										"contract": "source/Farm.sol:Farm",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1158,
										"contract": "source/Farm.sol:Farm",
										"label": "stakedTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(StakedToken)1152_storage)dyn_storage"
									},
									{
										"astId": 1160,
										"contract": "source/Farm.sol:Farm",
										"label": "timeOfLastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1162,
										"contract": "source/Farm.sol:Farm",
										"label": "unclaimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1022,
								"contract": "source/Farm.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 471,
								"contract": "source/Farm.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "source/Farm.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":23676:26837  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":23676:26837  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c77c08655927ec5742bf956926f7f5a7b76581ca099b8467e8eed946eb0fd7b264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c77c08655927ec5742bf956926f7f5a7b76581ca099b8467e8eed946eb0fd7b264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH29 0x8655927EC5742BF956926F7F5A7B76581CA099B8467E8EED946EB0FD7 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "23676:3161:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;23676:3161:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c77c08655927ec5742bf956926f7f5a7b76581ca099b8467e8eed946eb0fd7b264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 PUSH29 0x8655927EC5742BF956926F7F5A7B76581CA099B8467E8EED946EB0FD7 0xB2 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "23676:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c77c08655927ec5742bf956926f7f5a7b76581ca099b8467e8eed946eb0fd7b264736f6c63430008120033",
									".code": [
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Farm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":18953:23672  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":18953:23672  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220db5b40baf177a32fdfb78e6b8105774c09baf53086413b3b52ec9a8c3c5d7b2964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db5b40baf177a32fdfb78e6b8105774c09baf53086413b3b52ec9a8c3c5d7b2964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB JUMPDEST BLOCKHASH 0xBA CALL PUSH24 0xA32FDFB78E6B8105774C09BAF53086413B3B52EC9A8C3C5D PUSH28 0x2964736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "18953:4719:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18953:4719:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220db5b40baf177a32fdfb78e6b8105774c09baf53086413b3b52ec9a8c3c5d7b2964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB JUMPDEST BLOCKHASH 0xBA CALL PUSH24 0xA32FDFB78E6B8105774C09BAF53086413B3B52EC9A8C3C5D PUSH28 0x2964736F6C6343000812003300000000000000000000000000000000 ",
							"sourceMap": "18953:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db5b40baf177a32fdfb78e6b8105774c09baf53086413b3b52ec9a8c3c5d7b2964736f6c63430008120033",
									".code": [
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"source/Farm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x4a3e9be23c367b09e6adea231412ad35b2e71efbd16613f62d4f544a8a84fea8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1e58b6bc278035e6a763c7f84fade6219e82dcf7a36e4a90e8bbd455d5d5b9e0\",\"dweb:/ipfs/QmZvVwFS5Axmf81WfEJbgyqVr89vymEHteqWZFAjiqzfAm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/Farm.sol": {
				"ast": {
					"absolutePath": "source/Farm.sol",
					"exportedSymbols": {
						"Address": [
							363
						],
						"Context": [
							457
						],
						"Farm": [
							1838
						],
						"IERC165": [
							10
						],
						"IERC20": [
							438
						],
						"IERC721": [
							122
						],
						"Ownable": [
							1127
						],
						"Pausable": [
							561
						],
						"ReentrancyGuard": [
							612
						],
						"SafeERC20": [
							1018
						],
						"SafeMath": [
							805
						]
					},
					"id": 1839,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IERC165",
							"nameLocation": "75:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "90:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "452:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:20:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "513:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:6:0"
									},
									"scope": 10,
									"src": "443:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1839,
							"src": "65:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"547:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 10,
										"src": "547:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "547:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								10
							],
							"name": "IERC721",
							"nameLocation": "536:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "562:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 21,
									"name": "Transfer",
									"nameLocation": "664:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "689:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "673:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "711:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "695:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "715:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:67:0"
									},
									"src": "658:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "748:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 30,
									"name": "Approval",
									"nameLocation": "856:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "865:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "904:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "888:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "914:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:74:0"
									},
									"src": "850:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "947:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 39,
									"name": "ApprovalForAll",
									"nameLocation": "1078:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1093:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1132:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1116:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1147:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:64:0"
									},
									"src": "1072:85:0"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1165:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1258:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1276:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:17:0"
									},
									"scope": 122,
									"src": "1249:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1331:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1491:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:17:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:15:0"
									},
									"scope": 122,
									"src": "1474:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1554:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2137:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2172:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2164:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2195:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2187:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2208:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2234:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 63,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:107:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:0"
									},
									"scope": 122,
									"src": "2128:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2278:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2993:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3028:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3020:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3051:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3043:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:77:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:0:0"
									},
									"scope": 122,
									"src": "2984:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3104:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3636:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3667:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3711:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3648:77:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3734:0:0"
									},
									"scope": 122,
									"src": "3627:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3743:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4222:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4238:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4230:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:29:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:0:0"
									},
									"scope": 122,
									"src": "4213:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "4276:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4609:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4650:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:34:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4669:0:0"
									},
									"scope": 122,
									"src": "4600:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4678:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4838:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4858:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:17:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4898:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4890:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:18:0"
									},
									"scope": 122,
									"src": "4829:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4916:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5073:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5113:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5105:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5089:33:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5146:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:6:0"
									},
									"scope": 122,
									"src": "5064:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1839,
							"src": "526:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 363,
							"linearizedBaseContracts": [
								363
							],
							"name": "Address",
							"nameLocation": "5167:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "5835:356:0",
										"statements": [
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "6045:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "6037:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"nodeType": "VariableDeclarationStatement",
												"src": "6037:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6126:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6128:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "6148:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "6136:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6128:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "6148:7:0",
														"valueSize": 1
													},
													{
														"declaration": 131,
														"isOffset": false,
														"isSlot": false,
														"src": "6128:4:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "6117:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6175:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6175:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 129,
												"id": 137,
												"nodeType": "Return",
												"src": "6168:15:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "5182:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "5778:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5797:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:17:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5828:6:0"
									},
									"scope": 363,
									"src": "5769:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "7197:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 150,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7224:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		],
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7216:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 148,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7216:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7216:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7230:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7216:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "7241:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7216:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7249:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "7208:73:0"
											},
											{
												"assignments": [
													159,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7378:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "7373:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 158,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 166,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7423:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 160,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "7391:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7401:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "7391:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 162,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "7414:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7391:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7391:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7372:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7454:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7437:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "7437:78:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "6199:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "7135:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7161:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7145:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7145:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7144:43:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7197:0:0"
									},
									"scope": 363,
									"src": "7126:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "8373:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "8402:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "8410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8416:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 183,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															190,
															210
														],
														"referencedDeclaration": 210,
														"src": "8389:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8389:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 182,
												"id": 188,
												"nodeType": "Return",
												"src": "8382:67:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "7531:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8293:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8322:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:35:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8359:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:14:0"
									},
									"scope": 363,
									"src": "8284:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "8804:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "8844:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "8852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8858:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "8861:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															230,
															280
														],
														"referencedDeclaration": 280,
														"src": "8822:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8822:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 201,
												"id": 208,
												"nodeType": "Return",
												"src": "8815:59:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "8465:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8696:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8758:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8744:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8708:63:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8790:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8789:14:0"
									},
									"scope": 363,
									"src": "8687:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "9370:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "9410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "9418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 225,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "9424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9431:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															230,
															280
														],
														"referencedDeclaration": 280,
														"src": "9388:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "9381:94:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "8890:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "9266:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9296:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9317:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9304:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9304:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9287:50:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9356:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9355:14:0"
									},
									"scope": 363,
									"src": "9257:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "9880:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 247,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9907:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		],
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9899:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 245,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9899:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9899:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9913:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "9899:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "9924:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9899:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9931:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9891:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "9891:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 257,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10002:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 256,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "9991:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9991:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10011:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9983:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "9983:60:0"
											},
											{
												"assignments": [
													263,
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10122:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "10117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10144:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "10131:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "10186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 266,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "10158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10165:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 268,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "10178:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10158:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10158:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "10227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 275,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "10236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "10248:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 273,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "10209:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10209:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 278,
												"nodeType": "Return",
												"src": "10202:59:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9491:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "9748:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9770:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9799:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9786:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9786:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9813:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9834:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9820:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9769:78:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9866:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9866:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9865:14:0"
									},
									"scope": 363,
									"src": "9739:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "10554:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "10591:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "10599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10605:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 290,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															332
														],
														"referencedDeclaration": 332,
														"src": "10572:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 295,
												"nodeType": "Return",
												"src": "10565:80:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10277:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "10463:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10490:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10498:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10481:35:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10540:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:14:0"
									},
									"scope": 363,
									"src": "10454:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "10973:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "11003:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 310,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "10992:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10992:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11012:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10984:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "10984:67:0"
											},
											{
												"assignments": [
													317,
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11130:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "11125:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 316,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11152:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "11139:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 318,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11139:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"id": 322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "11166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11173:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11166:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11166:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11124:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "11225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 327,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "11234:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 328,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "11246:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 325,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11207:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11207:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 308,
												"id": 330,
												"nodeType": "Return",
												"src": "11200:59:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10661:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "10854:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10881:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10889:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10922:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10908:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10872:63:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10959:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10959:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:14:0"
									},
									"scope": 363,
									"src": "10845:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "11404:613:0",
										"statements": [
											{
												"condition": {
													"id": 343,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "11419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "11478:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 347,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "11564:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11575:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11564:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11564:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 357,
																"nodeType": "Block",
																"src": "11944:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 354,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 338,
																					"src": "11970:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 353,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11963:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11963:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 356,
																		"nodeType": "ExpressionStatement",
																		"src": "11963:20:0"
																	}
																]
															},
															"id": 358,
															"nodeType": "IfStatement",
															"src": "11560:439:0",
															"trueBody": {
																"id": 352,
																"nodeType": "Block",
																"src": "11587:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11775:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11798:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11827:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11821:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11821:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11802:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11871:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "11875:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11867:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11867:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "11888:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11860:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11860:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11860:44:0"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 336,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11827:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 336,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11875:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 351,
																		"nodeType": "InlineAssembly",
																		"src": "11766:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "11415:595:0",
												"trueBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "11428:44:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "11450:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 342,
															"id": 345,
															"nodeType": "Return",
															"src": "11443:17:0"
														}
													]
												}
											}
										]
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "11284:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11307:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11302:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11329:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11316:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11355:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11341:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11301:67:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11390:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11390:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11389:14:0"
									},
									"scope": 363,
									"src": "11275:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1839,
							"src": "5159:6861:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "IERC20",
							"nameLocation": "12034:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "12048:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12131:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12142:2:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "12168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12167:9:0"
									},
									"scope": 438,
									"src": "12122:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "12185:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12274:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12292:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "12284:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12283:17:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "12324:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12323:9:0"
									},
									"scope": 438,
									"src": "12265:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "12341:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12571:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12579:35:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:6:0"
									},
									"scope": 438,
									"src": "12562:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "12647:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "12932:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12950:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12941:32:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12996:9:0"
									},
									"scope": 438,
									"src": "12923:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "13014:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13684:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13691:33:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13742:6:0"
									},
									"scope": 438,
									"src": "13675:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "13757:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14076:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14097:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14089:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14113:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14105:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14132:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14124:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14088:51:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14157:6:0"
									},
									"scope": 438,
									"src": "14067:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "14172:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 428,
									"name": "Transfer",
									"nameLocation": "14347:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14372:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14356:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14378:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14355:57:0"
									},
									"src": "14341:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "14421:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 437,
									"name": "Approval",
									"nameLocation": "14584:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14593:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14616:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14649:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14641:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14592:63:0"
									},
									"src": "14578:78:0"
								}
							],
							"scope": 1839,
							"src": "12024:2635:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "Context",
							"nameLocation": "14683:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "14760:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 443,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14782:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "14778:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 445,
												"nodeType": "Return",
												"src": "14771:17:0"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "14707:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14717:2:0"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "14751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14750:9:0"
									},
									"scope": 457,
									"src": "14698:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "14871:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 452,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14889:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14893:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "14889:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 451,
												"id": 454,
												"nodeType": "Return",
												"src": "14882:15:0"
											}
										]
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "14813:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14821:2:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14855:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14854:16:0"
									},
									"scope": 457,
									"src": "14804:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "14665:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Context",
										"nameLocations": [
											"14942:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "14942:7:0"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "14942:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561,
								457
							],
							"name": "Pausable",
							"nameLocation": "14930:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "14957:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 464,
									"name": "Paused",
									"nameLocation": "15044:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "15051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15050:17:0"
									},
									"src": "15038:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "15076:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 469,
									"name": "Unpaused",
									"nameLocation": "15160:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "15169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15168:17:0"
									},
									"src": "15154:32:0"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "15207:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "15194:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 470,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "15194:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "15312:34:0",
										"statements": [
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 475,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "15323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15333:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15323:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "15323:15:0"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "15223:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 480,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15309:2:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15312:0:0"
									},
									"scope": 561,
									"src": "15298:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "15566:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "15577:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15577:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "15577:19:0"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "15607:1:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "15354:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 488,
									"name": "whenNotPaused",
									"nameLocation": "15550:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15563:2:0"
									},
									"src": "15541:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "15825:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "15836:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15836:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "15836:16:0"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "15863:1:0"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "15624:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 496,
									"name": "whenPaused",
									"nameLocation": "15812:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15822:2:0"
									},
									"src": "15803:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "16025:33:0",
										"statements": [
											{
												"expression": {
													"id": 502,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "16043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 501,
												"id": 503,
												"nodeType": "Return",
												"src": "16036:14:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "15880:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "15981:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15987:2:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "16019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16018:6:0"
									},
									"scope": 561,
									"src": "15972:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "16182:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16201:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 510,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "16202:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16202:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16212:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16193:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "16193:38:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "16066:59:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "16140:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16157:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16182:0:0"
									},
									"scope": 561,
									"src": "16131:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "16364:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 522,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "16383:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16383:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16393:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16375:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "16375:41:0"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "16247:63:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "16325:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16339:2:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16364:0:0"
									},
									"scope": 561,
									"src": "16316:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "16617:69:0",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "16628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16638:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16628:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "16628:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 539,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "16665:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16665:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 538,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "16658:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16658:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "16653:25:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "16432:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 531,
												"name": "whenNotPaused",
												"nameLocations": [
													"16603:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "16603:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16603:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "16577:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16583:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:0"
									},
									"scope": 561,
									"src": "16568:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "16875:72:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "16886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16896:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16886:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "16886:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "16926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16926:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "16917:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16917:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "16912:27:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "16694:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "whenPaused",
												"nameLocations": [
													"16864:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "16864:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16864:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "16836:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16844:2:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16875:0:0"
									},
									"scope": 561,
									"src": "16827:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "14912:2038:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "ReentrancyGuard",
							"nameLocation": "16972:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 564,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "17779:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17754:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17754:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17794:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 567,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "17827:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17802:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17838:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 569,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "17864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17848:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "17894:41:0",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "17905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "17915:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17905:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "17905:22:0"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17891:2:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17894:0:0"
									},
									"scope": 612,
									"src": "17880:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "18345:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "18356:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18356:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "18356:21:0"
											},
											{
												"id": 583,
												"nodeType": "PlaceholderStatement",
												"src": "18388:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "18400:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18400:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "18400:20:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "17943:372:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 588,
									"name": "nonReentrant",
									"nameLocation": "18330:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18342:2:0"
									},
									"src": "18321:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "18475:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "18566:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 593,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "18577:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18566:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18587:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18558:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "18558:63:0"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "18699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 599,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "18709:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18699:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "18699:18:0"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "18445:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18464:2:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18475:0:0"
									},
									"scope": 612,
									"src": "18436:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18771:175:0",
										"statements": [
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 606,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "18916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "18926:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18916:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18916:22:0"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "18742:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18760:2:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18771:0:0"
									},
									"scope": 612,
									"src": "18733:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1839,
							"src": "16954:1995:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805
							],
							"name": "SafeMath",
							"nameLocation": "18961:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "19283:114:0",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "19302:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "19294:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "19306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 625,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "19310:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19294:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 629,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "19330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 630,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "19335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19338:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19322:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "19322:46:0"
											},
											{
												"expression": {
													"id": 635,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 623,
													"src": "19388:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 636,
												"nodeType": "Return",
												"src": "19381:8:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "18977:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "19225:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19237:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19229:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19248:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19240:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19228:22:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19273:9:0"
									},
									"scope": 805,
									"src": "19216:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "19747:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "19769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 650,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "19772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19775:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 648,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															655,
															683
														],
														"referencedDeclaration": 683,
														"src": "19765:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19765:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 647,
												"id": 653,
												"nodeType": "Return",
												"src": "19758:50:0"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "19405:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "19689:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19712:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19704:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19692:22:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19737:9:0"
									},
									"scope": 805,
									"src": "19680:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "20214:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "20233:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 669,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "20238:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 671,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "20241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20225:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "20225:29:0"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "20273:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "20265:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "20277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "20281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20265:17:0"
											},
											{
												"expression": {
													"id": 680,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 675,
													"src": "20302:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 666,
												"id": 681,
												"nodeType": "Return",
												"src": "20295:8:0"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "19824:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "20128:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20151:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "20168:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20154:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20154:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20131:50:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20204:9:0"
									},
									"scope": 805,
									"src": "20119:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "20637:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "20873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20878:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20873:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "20869:47:0",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "20881:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "20896:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "20936:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "20928:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "20940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 703,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "20944:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20928:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "20964:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 708,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "20968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20964:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 710,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "20973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20964:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20976:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20956:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "20956:56:0"
											},
											{
												"expression": {
													"id": 715,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 701,
													"src": "21032:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 692,
												"id": 716,
												"nodeType": "Return",
												"src": "21025:8:0"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "20319:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "20579:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20591:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20602:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20594:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20582:22:0"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20628:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20627:9:0"
									},
									"scope": 805,
									"src": "20570:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "21584:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "21606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "21609:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21612:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 728,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															735,
															763
														],
														"referencedDeclaration": 763,
														"src": "21602:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21602:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 733,
												"nodeType": "Return",
												"src": "21595:46:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "21049:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "21526:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21538:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21530:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21529:22:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21574:9:0"
									},
									"scope": 805,
									"src": "21517:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "22240:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "22259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22263:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 751,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "22266:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22251:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22251:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "22251:28:0"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "22298:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "22290:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "22302:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 757,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "22306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22290:17:0"
											},
											{
												"expression": {
													"id": 760,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 755,
													"src": "22414:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 746,
												"id": 761,
												"nodeType": "Return",
												"src": "22407:8:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "21657:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "22154:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "22194:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22180:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22157:50:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22231:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22230:9:0"
									},
									"scope": 805,
									"src": "22145:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "22955:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "22977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 775,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "22980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22983:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 773,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															804
														],
														"referencedDeclaration": 804,
														"src": "22973:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22973:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 778,
												"nodeType": "Return",
												"src": "22966:44:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "22431:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "22897:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22909:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22901:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22920:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22912:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22900:22:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22945:9:0"
									},
									"scope": 805,
									"src": "22888:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "23598:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "23617:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23622:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 796,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "23625:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23609:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "23609:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "23656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 800,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "23660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 791,
												"id": 802,
												"nodeType": "Return",
												"src": "23649:12:0"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "23026:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "23512:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23524:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23552:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23538:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23515:50:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23588:9:0"
									},
									"scope": 805,
									"src": "23503:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "18953:4719:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "SafeERC20",
							"nameLocation": "23684:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 808,
									"libraryName": {
										"id": 806,
										"name": "SafeMath",
										"nameLocations": [
											"23707:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "23707:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23701:27:0",
									"typeName": {
										"id": 807,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23720:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 811,
									"libraryName": {
										"id": 809,
										"name": "Address",
										"nameLocations": [
											"23740:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 363,
										"src": "23740:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23734:26:0",
									"typeName": {
										"id": 810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23752:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "23840:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "23871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "23901:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23907:8:0",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 387,
																		"src": "23901:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23916:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "23901:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 828,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "23926:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "23930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "23878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "23882:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "23878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23878:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 821,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "23851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23851:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "23851:86:0"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "23777:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23797:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23790:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 812,
														"name": "IERC20",
														"nameLocations": [
															"23790:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "23790:6:0"
													},
													"referencedDeclaration": 438,
													"src": "23790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23812:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23804:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23789:41:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23840:0:0"
									},
									"scope": 1018,
									"src": "23768:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24043:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 850,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "24104:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24110:12:0",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 419,
																		"src": "24104:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24123:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24104:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 853,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "24133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 854,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "24139:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 855,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "24143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 848,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24081:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24085:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24081:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24081:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 846,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "24054:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24054:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24054:96:0"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23962:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "23979:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "IERC20",
														"nameLocations": [
															"23979:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "23979:6:0"
													},
													"referencedDeclaration": 438,
													"src": "23979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "23993:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24015:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24007:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23978:55:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24043:0:0"
									},
									"scope": 1018,
									"src": "23953:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "24503:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 872,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "24797:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24806:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24797:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24796:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 880,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "24837:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1018",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1018",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "24829:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 878,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "24829:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24829:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 882,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "24844:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 876,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "24813:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$438",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "24819:9:0",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 397,
																				"src": "24813:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24813:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24813:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24812:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24796:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24873:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24788:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "24788:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "24971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 895,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "25001:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "25007:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25001:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25015:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25001:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 898,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "25025:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "25034:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 893,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24978:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "24982:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24978:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24978:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "24951:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24951:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "24951:90:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24166:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "24436:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24448:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 862,
														"name": "IERC20",
														"nameLocations": [
															"24448:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "24448:6:0"
													},
													"referencedDeclaration": 438,
													"src": "24448:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24487:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24479:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24447:46:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24503:0:0"
									},
									"scope": 1018,
									"src": "24427:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "25143:200:0",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "25162:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "25154:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 925,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25221:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 920,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "25201:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25193:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 918,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "25193:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25193:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 922,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "25208:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 916,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "25177:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25183:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 397,
																"src": "25177:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25177:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25217:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 638,
														"src": "25177:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25177:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "25258:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 932,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "25288:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "25294:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25288:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25302:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25288:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 935,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "25312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 936,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "25321:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 930,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25269:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25265:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25265:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 928,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "25238:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25238:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "25238:97:0"
											}
										]
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "25066:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25088:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "IERC20",
														"nameLocations": [
															"25088:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "25088:6:0"
													},
													"referencedDeclaration": 438,
													"src": "25088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25110:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25127:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25087:46:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25143:0:0"
									},
									"scope": 1018,
									"src": "25057:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "25437:245:0",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "25456:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "25448:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "25515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25522:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 957,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "25495:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25487:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 955,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "25487:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25487:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 959,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "25502:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 953,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "25471:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25477:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 397,
																"src": "25471:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25471:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25511:3:0",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "25471:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25471:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25448:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "25597:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 970,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "25627:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "25633:7:0",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25627:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25641:8:0",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25627:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 973,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "25651:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 974,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "25660:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 968,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25604:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25608:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25604:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25604:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 966,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "25577:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25577:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "25577:97:0"
											}
										]
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "25360:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25389:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "IERC20",
														"nameLocations": [
															"25382:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "25382:6:0"
													},
													"referencedDeclaration": 438,
													"src": "25382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25381:46:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25437:0:0"
									},
									"scope": 1018,
									"src": "25351:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "26143:691:0",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "26510:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "26497:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 988,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "26551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26557:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 992,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "26531:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26523:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26523:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26538:12:0",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 210,
														"src": "26523:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26523:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26497:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 999,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "26607:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26618:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26607:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26607:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "26603:224:0",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "26630:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1006,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 989,
																				"src": "26749:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1008,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "26762:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1007,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "26762:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1009,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26761:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1004,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "26738:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "26742:6:0",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "26738:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26738:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26770:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1003,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "26730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26730:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "26730:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "25690:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "26082:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "26102:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 981,
														"name": "IERC20",
														"nameLocations": [
															"26102:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "26102:6:0"
													},
													"referencedDeclaration": 438,
													"src": "26102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26129:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "26116:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26101:33:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26143:0:0"
									},
									"scope": 1018,
									"src": "26073:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1839,
							"src": "23676:3161:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1019,
										"name": "Context",
										"nameLocations": [
											"26870:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "26870:7:0"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "26870:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127,
								457
							],
							"name": "Ownable",
							"nameLocation": "26859:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1022,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "26901:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "26885:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1021,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "26885:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1028,
									"name": "OwnershipTransferred",
									"nameLocation": "26922:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "26959:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "26943:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "26990:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "26974:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26942:57:0"
									},
									"src": "26916:84:0"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "27121:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1033,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "27151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27151:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1032,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "27132:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27132:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "27132:32:0"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "27008:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1038,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27118:2:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27121:0:0"
									},
									"scope": 1127,
									"src": "27107:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "27286:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1041,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "27297:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27297:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "27297:13:0"
											},
											{
												"id": 1044,
												"nodeType": "PlaceholderStatement",
												"src": "27321:1:0"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "27180:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1046,
									"name": "onlyOwner",
									"nameLocation": "27274:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27283:2:0"
									},
									"src": "27265:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "27466:32:0",
										"statements": [
											{
												"expression": {
													"id": 1052,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "27484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1053,
												"nodeType": "Return",
												"src": "27477:13:0"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "27338:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "27420:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27425:2:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "27457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27456:9:0"
									},
									"scope": 1127,
									"src": "27411:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "27621:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1060,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "27640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27640:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1062,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "27651:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27651:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "27640:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27665:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27632:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "27632:68:0"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "27506:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "27585:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27596:2:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27621:0:0"
									},
									"scope": 1127,
									"src": "27576:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "28113:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28143:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28143:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28143:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1075,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "28124:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28124:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "28124:30:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "27716:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "onlyOwner",
												"nameLocations": [
													"28103:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "28103:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28103:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "28068:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28085:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28113:0:0"
									},
									"scope": 1127,
									"src": "28059:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "28387:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "28406:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28426:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28418:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28418:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28418:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28406:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28430:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "28398:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1102,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "28501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "28482:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28482:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "28482:28:0"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "28170:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyOwner",
												"nameLocations": [
													"28377:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "28377:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28377:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "28326:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "28344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28343:18:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28387:0:0"
									},
									"scope": 1127,
									"src": "28317:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "28741:128:0",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "28760:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "28752:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1112,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28752:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"id": 1114,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28752:25:0"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "28788:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1117,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "28797:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28788:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "28788:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1121,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "28842:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "28852:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "28821:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28821:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "EmitStatement",
												"src": "28816:45:0"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "28526:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "28687:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "28706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28705:18:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28741:0:0"
									},
									"scope": 1127,
									"src": "28678:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1839,
							"src": "26841:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1128,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"28895:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "28895:15:0"
									},
									"id": 1129,
									"nodeType": "InheritanceSpecifier",
									"src": "28895:15:0"
								},
								{
									"baseName": {
										"id": 1130,
										"name": "Pausable",
										"nameLocations": [
											"28912:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "28912:8:0"
									},
									"id": 1131,
									"nodeType": "InheritanceSpecifier",
									"src": "28912:8:0"
								},
								{
									"baseName": {
										"id": 1132,
										"name": "Ownable",
										"nameLocations": [
											"28922:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "28922:7:0"
									},
									"id": 1133,
									"nodeType": "InheritanceSpecifier",
									"src": "28922:7:0"
								}
							],
							"canonicalName": "Farm",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1838,
							"linearizedBaseContracts": [
								1838,
								1127,
								561,
								457,
								612
							],
							"name": "Farm",
							"nameLocation": "28887:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1136,
									"libraryName": {
										"id": 1134,
										"name": "SafeMath",
										"nameLocations": [
											"28943:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "28943:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28937:27:0",
									"typeName": {
										"id": 1135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28956:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1140,
									"libraryName": {
										"id": 1137,
										"name": "SafeERC20",
										"nameLocations": [
											"28976:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "28976:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28970:27:0",
									"typeName": {
										"id": 1139,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1138,
											"name": "IERC20",
											"nameLocations": [
												"28990:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 438,
											"src": "28990:6:0"
										},
										"referencedDeclaration": 438,
										"src": "28990:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$438",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farm.StakedToken_V1",
									"id": 1145,
									"members": [
										{
											"constant": false,
											"id": 1142,
											"mutability": "mutable",
											"name": "staker",
											"nameLocation": "29046:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1145,
											"src": "29038:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1141,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29038:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1144,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "29071:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1145,
											"src": "29063:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29063:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken_V1",
									"nameLocation": "29012:14:0",
									"nodeType": "StructDefinition",
									"scope": 1838,
									"src": "29005:81:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.StakedToken",
									"id": 1152,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "staker",
											"nameLocation": "29132:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "29124:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29124:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "29157:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "29149:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29149:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "stackeUtx",
											"nameLocation": "29183:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1152,
											"src": "29175:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29175:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken",
									"nameLocation": "29101:11:0",
									"nodeType": "StructDefinition",
									"scope": 1838,
									"src": "29094:161:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.Staker",
									"id": 1163,
									"members": [
										{
											"constant": false,
											"id": 1154,
											"mutability": "mutable",
											"name": "amountStaked",
											"nameLocation": "29314:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29306:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29306:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1158,
											"mutability": "mutable",
											"name": "stakedTokens",
											"nameLocation": "29351:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29337:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
												"typeString": "struct Farm.StakedToken[]"
											},
											"typeName": {
												"baseType": {
													"id": 1156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1155,
														"name": "StakedToken",
														"nameLocations": [
															"29337:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1152,
														"src": "29337:11:0"
													},
													"referencedDeclaration": 1152,
													"src": "29337:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
														"typeString": "struct Farm.StakedToken"
													}
												},
												"id": 1157,
												"nodeType": "ArrayTypeName",
												"src": "29337:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
													"typeString": "struct Farm.StakedToken[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1160,
											"mutability": "mutable",
											"name": "timeOfLastUpdate",
											"nameLocation": "29382:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29374:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1159,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29374:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1162,
											"mutability": "mutable",
											"name": "unclaimedRewards",
											"nameLocation": "29417:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29409:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1161,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29409:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "29288:6:0",
									"nodeType": "StructDefinition",
									"scope": 1838,
									"src": "29281:160:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1166,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "29463:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29449:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$438",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1165,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1164,
											"name": "IERC20",
											"nameLocations": [
												"29449:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 438,
											"src": "29449:6:0"
										},
										"referencedDeclaration": 438,
										"src": "29449:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$438",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6588103b",
									"id": 1169,
									"mutability": "mutable",
									"name": "nftCollection",
									"nameLocation": "29497:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29482:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$122",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1168,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1167,
											"name": "IERC721",
											"nameLocations": [
												"29482:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 122,
											"src": "29482:7:0"
										},
										"referencedDeclaration": 122,
										"src": "29482:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$122",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1171,
									"mutability": "mutable",
									"name": "nftCollectionAddress",
									"nameLocation": "29533:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29517:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1170,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29517:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8e7271fa",
									"id": 1174,
									"mutability": "mutable",
									"name": "rewardsPerHour",
									"nameLocation": "29627:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29612:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1172,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29612:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29644:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "54fd4d50",
									"id": 1177,
									"mutability": "mutable",
									"name": "version",
									"nameLocation": "29674:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29659:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29659:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29684:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3166b848",
									"id": 1180,
									"mutability": "mutable",
									"name": "lockEnabled",
									"nameLocation": "29706:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29694:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1178,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "29694:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29720:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d668087",
									"id": 1183,
									"mutability": "mutable",
									"name": "lockTime",
									"nameLocation": "29758:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29743:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29743:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29769:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1188,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "29832:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29798:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
										"typeString": "mapping(address => struct Farm.Staker)"
									},
									"typeName": {
										"id": 1187,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29806:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29798:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
											"typeString": "mapping(address => struct Farm.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1186,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1185,
												"name": "Staker",
												"nameLocations": [
													"29817:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1163,
												"src": "29817:6:0"
											},
											"referencedDeclaration": 1163,
											"src": "29817:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1163_storage_ptr",
												"typeString": "struct Farm.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94067045",
									"id": 1192,
									"mutability": "mutable",
									"name": "stakerAddress",
									"nameLocation": "29960:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "29925:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1191,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29933:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29925:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29944:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "114cd3c8",
									"id": 1196,
									"mutability": "mutable",
									"name": "tokenStartStakeTime",
									"nameLocation": "30062:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1838,
									"src": "30027:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1195,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30035:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30027:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30046:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "30302:282:0",
										"statements": [
											{
												"expression": {
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "30313:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$122",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1212,
																"name": "_nftCollection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "30337:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1211,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "30329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$122_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30329:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$122",
															"typeString": "contract IERC721"
														}
													},
													"src": "30313:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$122",
														"typeString": "contract IERC721"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "30313:39:0"
											},
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "nftCollectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "30363:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1217,
														"name": "_nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "30386:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30363:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "30363:37:0"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "30411:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$438",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "30426:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$438",
															"typeString": "contract IERC20"
														}
													},
													"src": "30411:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "30411:28:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "30450:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "30467:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30450:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "30450:32:0"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "30493:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "30504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30493:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "30493:20:0"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "30540:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1233,
														"name": "_lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "30554:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30540:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "30540:26:0"
											}
										]
									},
									"id": 1237,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_nftCollection",
												"nameLocation": "30130:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "30122:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "30162:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "30155:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1199,
														"name": "IERC20",
														"nameLocations": [
															"30155:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "30155:6:0"
													},
													"referencedDeclaration": 438,
													"src": "30155:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nameLocation": "30194:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "30186:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "_lockEnabled",
												"nameLocation": "30225:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "30220:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30220:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "30267:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "30262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30111:190:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30302:0:0"
									},
									"scope": 1838,
									"src": "30100:484:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "30663:45:0",
										"statements": [
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "30674:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1245,
														"name": "_lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "30688:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30674:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "30674:26:0"
											}
										]
									},
									"functionSelector": "6aa4439f",
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1241,
												"name": "onlyOwner",
												"nameLocations": [
													"30653:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30653:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30653:9:0"
										}
									],
									"name": "setLockEnabled",
									"nameLocation": "30610:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_lockEnabled",
												"nameLocation": "30630:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "30625:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30625:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30624:19:0"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30663:0:0"
									},
									"scope": 1838,
									"src": "30601:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "30784:39:0",
										"statements": [
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "30795:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1257,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "30806:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "30795:20:0"
											}
										]
									},
									"functionSelector": "ae04d45d",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1253,
												"name": "onlyOwner",
												"nameLocations": [
													"30774:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30774:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30774:9:0"
										}
									],
									"name": "setLockTime",
									"nameLocation": "30734:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "30754:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "30746:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30745:19:0"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30784:0:0"
									},
									"scope": 1838,
									"src": "30725:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "30900:51:0",
										"statements": [
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "30911:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1269,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "30928:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30911:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "30911:32:0"
											}
										]
									},
									"functionSelector": "b5a5e509",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "onlyOwner",
												"nameLocations": [
													"30890:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30890:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30890:9:0"
										}
									],
									"name": "setRewardsPerHour",
									"nameLocation": "30838:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nameLocation": "30864:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "30856:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30855:25:0"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30900:0:0"
									},
									"scope": 1838,
									"src": "30829:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "31019:876:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1283,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "31074:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1281,
																		"name": "nftCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "31052:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$122",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31066:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 55,
																	"src": "31052:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31052:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1285,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "31087:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31052:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31109:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31030:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31030:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "31030:117:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1290,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31164:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1292,
															"indexExpression": {
																"id": 1291,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "31172:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31164:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31181:12:0",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "31164:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31196:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31164:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "IfStatement",
												"src": "31160:168:0",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "31199:129:0",
													"statements": [
														{
															"assignments": [
																1297
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1297,
																	"mutability": "mutable",
																	"name": "rewards",
																	"nameLocation": "31222:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1309,
																	"src": "31214:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1296,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31214:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1301,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1299,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1275,
																		"src": "31249:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1298,
																	"name": "calculateRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "31232:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31232:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31214:43:0"
														},
														{
															"expression": {
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1302,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "31272:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																				"typeString": "mapping(address => struct Farm.Staker storage ref)"
																			}
																		},
																		"id": 1304,
																		"indexExpression": {
																			"id": 1303,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "31280:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31272:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1163_storage",
																			"typeString": "struct Farm.Staker storage ref"
																		}
																	},
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "31289:16:0",
																	"memberName": "unclaimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1162,
																	"src": "31272:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1306,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "31309:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31272:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1308,
															"nodeType": "ExpressionStatement",
															"src": "31272:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1314,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "31367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1317,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1315,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31376:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1319,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "31391:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1311,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "31340:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$122",
																"typeString": "contract IERC721"
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31354:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "31340:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31340:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "31340:60:0"
											},
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "stakedToken",
														"nameLocation": "31432:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "31413:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
															"typeString": "struct Farm.StakedToken"
														},
														"typeName": {
															"id": 1323,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1322,
																"name": "StakedToken",
																"nameLocations": [
																	"31413:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1152,
																"src": "31413:11:0"
															},
															"referencedDeclaration": 1152,
															"src": "31413:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
																"typeString": "struct Farm.StakedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1331,
												"initialValue": {
													"arguments": [
														{
															"id": 1326,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "31492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "31534:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1328,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31577:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31583:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "31577:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1325,
														"name": "StakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "31446:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakedToken_$1152_storage_ptr_$",
															"typeString": "type(struct Farm.StakedToken storage pointer)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31446:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
														"typeString": "struct Farm.StakedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31413:197:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1337,
															"name": "stakedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "31656:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1332,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "31621:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1334,
																"indexExpression": {
																	"id": 1333,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "31629:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31621:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1163_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31638:12:0",
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1158,
															"src": "31621:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31651:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31621:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr_$_t_struct$_StakedToken_$1152_storage_$returns$__$attached_to$_t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Farm.StakedToken storage ref[] storage pointer,struct Farm.StakedToken storage ref)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31621:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "31621:47:0"
											},
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "31679:31:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1340,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1342,
															"indexExpression": {
																"id": 1341,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "31687:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "31696:12:0",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "31679:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "31679:31:0"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1346,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "31721:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1348,
														"indexExpression": {
															"id": 1347,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "31735:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31721:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1349,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "31747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31721:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "31721:33:0"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1352,
															"name": "tokenStartStakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "31765:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1354,
														"indexExpression": {
															"id": 1353,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "31785:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31765:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1355,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31797:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31803:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31797:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31765:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "31765:47:0"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1359,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31836:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1361,
															"indexExpression": {
																"id": 1360,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "31844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31836:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "31853:16:0",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1160,
														"src": "31836:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1363,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31878:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31872:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31836:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "31836:51:0"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "30968:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "30983:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "30975:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "31000:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "30992:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30974:35:0"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31019:0:0"
									},
									"scope": 1838,
									"src": "30959:936:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "31965:133:0",
										"statements": [
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "_balance",
														"nameLocation": "31984:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "31976:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1381,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32026:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32018:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32018:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32018:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1377,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "31995:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32008:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 377,
														"src": "31995:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31995:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31976:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32069:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32073:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "32081:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1385,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "32043:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32056:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "32043:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$438_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32043:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "32043:47:0"
											}
										]
									},
									"functionSelector": "f995441b",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1371,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1370,
												"name": "onlyOwner",
												"nameLocations": [
													"31944:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "31944:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31944:9:0"
										},
										{
											"id": 1373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1372,
												"name": "whenPaused",
												"nameLocations": [
													"31954:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "31954:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31954:10:0"
										}
									],
									"name": "adminWithdrawRewards",
									"nameLocation": "31912:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31932:2:0"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31965:0:0"
									},
									"scope": 1838,
									"src": "31903:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "32175:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32193:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32197:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32193:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1406,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "32205:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "32186:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32186:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "32186:28:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1398,
												"name": "nonReentrant",
												"nameLocations": [
													"32148:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 588,
												"src": "32148:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32148:12:0"
										},
										{
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1400,
												"name": "whenNotPaused",
												"nameLocations": [
													"32161:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "32161:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32161:13:0"
										}
									],
									"name": "stake",
									"nameLocation": "32115:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "32129:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "32121:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32120:18:0"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32175:0:0"
									},
									"scope": 1838,
									"src": "32106:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "32288:1371:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1418,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "32321:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1421,
																	"indexExpression": {
																		"expression": {
																			"id": 1419,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32329:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "32333:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32329:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32321:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1163_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32341:12:0",
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1154,
																"src": "32321:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32356:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32321:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32372:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															},
															"value": "You have no tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															}
														],
														"id": 1417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32299:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32299:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "32299:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1429,
																	"name": "stakerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "32429:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1431,
																"indexExpression": {
																	"id": 1430,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "32443:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32429:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1432,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32456:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32460:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32429:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32468:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32421:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32421:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "32421:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1439,
																			"name": "lockEnabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "32532:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1444,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"baseExpression": {
																										"id": 1440,
																										"name": "tokenStartStakeTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1196,
																										"src": "32549:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1442,
																									"indexExpression": {
																										"id": 1441,
																										"name": "_tokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1412,
																										"src": "32569:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "32549:29:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 1443,
																									"name": "lockTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1183,
																									"src": "32581:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "32549:40:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1445,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "32548:42:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 1446,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "32593:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "32599:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "32593:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32548:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1449,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "32547:62:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "32532:77:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32531:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "32614:12:0",
																"subExpression": {
																	"id": 1452,
																	"name": "lockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "32615:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "32531:95:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069726564",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32641:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063",
																"typeString": "literal_string \"Token lock time has not yet expired\""
															},
															"value": "Token lock time has not yet expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063",
																"typeString": "literal_string \"Token lock time has not yet expired\""
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32509:180:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "32509:180:0"
											},
											{
												"assignments": [
													1459
												],
												"declarations": [
													{
														"constant": false,
														"id": 1459,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "32809:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "32801:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1458,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32836:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32840:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32836:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1460,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "32819:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32819:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32801:46:0"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1465,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1468,
															"indexExpression": {
																"expression": {
																	"id": 1466,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32866:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32870:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32866:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32858:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "32878:16:0",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1162,
														"src": "32858:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1470,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "32898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32858:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "32858:47:0"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "32928:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "32920:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"hexValue": "30",
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32936:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32920:17:0"
											},
											{
												"body": {
													"id": 1523,
													"nodeType": "Block",
													"src": "33018:283:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1492,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1188,
																						"src": "33055:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																							"typeString": "mapping(address => struct Farm.Staker storage ref)"
																						}
																					},
																					"id": 1495,
																					"indexExpression": {
																						"expression": {
																							"id": 1493,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "33063:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1494,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "33067:6:0",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "33063:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "33055:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1163_storage",
																						"typeString": "struct Farm.Staker storage ref"
																					}
																				},
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "33075:12:0",
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1158,
																				"src": "33055:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																					"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1498,
																			"indexExpression": {
																				"id": 1497,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "33088:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33055:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1152_storage",
																				"typeString": "struct Farm.StakedToken storage ref"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33091:7:0",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1149,
																		"src": "33055:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1500,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "33102:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "33055:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1502,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1188,
																						"src": "33150:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																							"typeString": "mapping(address => struct Farm.Staker storage ref)"
																						}
																					},
																					"id": 1505,
																					"indexExpression": {
																						"expression": {
																							"id": 1503,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "33158:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "33162:6:0",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "33158:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "33150:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1163_storage",
																						"typeString": "struct Farm.Staker storage ref"
																					}
																				},
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "33170:12:0",
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1158,
																				"src": "33150:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																					"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1508,
																			"indexExpression": {
																				"id": 1507,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "33183:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33150:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1152_storage",
																				"typeString": "struct Farm.StakedToken storage ref"
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33186:6:0",
																		"memberName": "staker",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1147,
																		"src": "33150:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33204:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33196:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1510,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33196:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33196:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "33150:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "33055:151:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1522,
															"nodeType": "IfStatement",
															"src": "33033:257:0",
															"trueBody": {
																"id": 1521,
																"nodeType": "Block",
																"src": "33222:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1516,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "33241:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1517,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1478,
																				"src": "33249:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33241:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1519,
																		"nodeType": "ExpressionStatement",
																		"src": "33241:9:0"
																	},
																	{
																		"id": 1520,
																		"nodeType": "Break",
																		"src": "33269:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1481,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "32968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1482,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "32972:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1485,
																"indexExpression": {
																	"expression": {
																		"id": 1483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32980:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32984:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32980:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32972:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1163_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "32992:12:0",
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1158,
															"src": "32972:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33005:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32972:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32968:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"initializationExpression": {
													"assignments": [
														1478
													],
													"declarations": [
														{
															"constant": false,
															"id": 1478,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32961:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1524,
															"src": "32953:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1477,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32953:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1480,
													"initialValue": {
														"hexValue": "30",
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32965:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32953:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "33013:3:0",
														"subExpression": {
															"id": 1489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "33013:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ExpressionStatement",
													"src": "33013:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32948:353:0"
											},
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1525,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "33315:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1528,
																	"indexExpression": {
																		"expression": {
																			"id": 1526,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "33323:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "33327:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "33323:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33315:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1163_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33335:12:0",
																"memberName": "stakedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1158,
																"src": "33315:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																	"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																}
															},
															"id": 1531,
															"indexExpression": {
																"id": 1530,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "33348:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33315:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1152_storage",
																"typeString": "struct Farm.StakedToken storage ref"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "33355:6:0",
														"memberName": "staker",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "33315:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1533,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33315:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "33315:59:0"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "33385:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1539,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33385:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1542,
															"indexExpression": {
																"expression": {
																	"id": 1540,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33393:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33397:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33393:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33385:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "33405:12:0",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "33385:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "33385:34:0"
											},
											{
												"expression": {
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1546,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "33430:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1548,
														"indexExpression": {
															"id": 1547,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "33444:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33430:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33464:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1549,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33456:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33456:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33430:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "33430:36:0"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1555,
															"name": "tokenStartStakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "33477:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1557,
														"indexExpression": {
															"id": 1556,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "33497:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33477:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33509:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33477:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "33477:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1566,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33558:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1838",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1564,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33550:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33550:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33565:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "33569:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33565:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "33577:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1561,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "33523:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$122",
																"typeString": "contract IERC721"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33537:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "33523:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33523:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "33523:63:0"
											},
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1573,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33597:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1576,
															"indexExpression": {
																"expression": {
																	"id": 1574,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33605:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33609:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33605:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33597:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "33617:16:0",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1160,
														"src": "33597:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1578,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "33636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "33642:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "33636:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33597:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "33597:54:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1414,
												"name": "nonReentrant",
												"nameLocations": [
													"32275:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 588,
												"src": "32275:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32275:12:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "32239:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "32256:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "32248:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32247:18:0"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32288:0:0"
									},
									"scope": 1838,
									"src": "32230:1429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "33783:184:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1602,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1596,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1590,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "33820:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1591,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "33826:9:0",
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "33820:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1592,
																													"name": "stakers",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1188,
																													"src": "33838:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																														"typeString": "mapping(address => struct Farm.Staker storage ref)"
																													}
																												},
																												"id": 1594,
																												"indexExpression": {
																													"id": 1593,
																													"name": "_staker",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1585,
																													"src": "33846:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "33838:16:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Staker_$1163_storage",
																													"typeString": "struct Farm.Staker storage ref"
																												}
																											},
																											"id": 1595,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "33855:16:0",
																											"memberName": "timeOfLastUpdate",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1160,
																											"src": "33838:33:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "33820:51:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1597,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "33819:53:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1598,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1188,
																										"src": "33892:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1600,
																									"indexExpression": {
																										"id": 1599,
																										"name": "_staker",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1585,
																										"src": "33900:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "33892:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1163_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1601,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "33909:12:0",
																								"memberName": "amountStaked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1154,
																								"src": "33892:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "33819:102:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1603,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "33818:104:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1604,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "33803:130:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1605,
																			"name": "rewardsPerHour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1174,
																			"src": "33936:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33803:147:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1607,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33802:149:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "33363030",
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33954:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "33802:156:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1610,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "33801:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1589,
												"id": 1611,
												"nodeType": "Return",
												"src": "33794:165:0"
											}
										]
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "33676:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "33701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "33693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33692:17:0"
									},
									"returnParameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "_rewards",
												"nameLocation": "33768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "33760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33759:18:0"
									},
									"scope": 1838,
									"src": "33667:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "34008:353:0",
										"statements": [
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "34027:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1661,
														"src": "34019:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1619,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34054:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34058:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34054:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1618,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "34037:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34037:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1622,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "34081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1625,
															"indexExpression": {
																"expression": {
																	"id": 1623,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34093:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34081:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34101:16:0",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1162,
														"src": "34081:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34037:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34019:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1630,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1617,
																"src": "34136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34136:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34149:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															},
															"value": "You have no rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															}
														],
														"id": 1629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34128:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "34128:52:0"
											},
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1636,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "34191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1639,
															"indexExpression": {
																"expression": {
																	"id": 1637,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34199:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34203:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34199:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34191:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "34211:16:0",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1160,
														"src": "34191:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1641,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34236:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "34230:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34191:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "34191:54:0"
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1645,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "34256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1648,
															"indexExpression": {
																"expression": {
																	"id": 1646,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34264:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34268:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34264:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34256:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "34276:16:0",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1162,
														"src": "34256:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34295:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34256:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "34256:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34333:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34337:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34333:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "34345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1653,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "34307:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34320:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "34307:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$438_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34307:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "34307:46:0"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "33984:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33996:2:0"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34008:0:0"
									},
									"scope": 1838,
									"src": "33975:386:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "34455:437:0",
										"statements": [
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "_stakedTokens",
														"nameLocation": "34487:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "34466:34:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Farm.StakedToken[]"
														},
														"typeName": {
															"baseType": {
																"id": 1673,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1672,
																	"name": "StakedToken",
																	"nameLocations": [
																		"34466:11:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1152,
																	"src": "34466:11:0"
																},
																"referencedDeclaration": 1152,
																"src": "34466:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
																	"typeString": "struct Farm.StakedToken"
																}
															},
															"id": 1674,
															"nodeType": "ArrayTypeName",
															"src": "34466:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
																"typeString": "struct Farm.StakedToken[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"arguments": [
														{
															"id": 1677,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "34522:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1676,
														"name": "getStakedTokens_V3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "34503:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (address) view returns (struct Farm.StakedToken memory[] memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34503:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Farm.StakedToken memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34466:62:0"
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "_stakedTokesV1_V2",
														"nameLocation": "34563:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "34539:41:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Farm.StakedToken_V1[]"
														},
														"typeName": {
															"baseType": {
																"id": 1682,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1681,
																	"name": "StakedToken_V1",
																	"nameLocations": [
																		"34539:14:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1145,
																	"src": "34539:14:0"
																},
																"referencedDeclaration": 1145,
																"src": "34539:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakedToken_V1_$1145_storage_ptr",
																	"typeString": "struct Farm.StakedToken_V1"
																}
															},
															"id": 1683,
															"nodeType": "ArrayTypeName",
															"src": "34539:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_storage_$dyn_storage_ptr",
																"typeString": "struct Farm.StakedToken_V1[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1692,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1689,
																"name": "_stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "34604:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34618:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "34604:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "34583:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Farm.StakedToken_V1 memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1686,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1685,
																	"name": "StakedToken_V1",
																	"nameLocations": [
																		"34587:14:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1145,
																	"src": "34587:14:0"
																},
																"referencedDeclaration": 1145,
																"src": "34587:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakedToken_V1_$1145_storage_ptr",
																	"typeString": "struct Farm.StakedToken_V1"
																}
															},
															"id": 1687,
															"nodeType": "ArrayTypeName",
															"src": "34587:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_storage_$dyn_storage_ptr",
																"typeString": "struct Farm.StakedToken_V1[]"
															}
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34583:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Farm.StakedToken_V1 memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34539:86:0"
											},
											{
												"body": {
													"id": 1719,
													"nodeType": "Block",
													"src": "34686:164:0",
													"statements": [
														{
															"expression": {
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1704,
																		"name": "_stakedTokesV1_V2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "34701:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Farm.StakedToken_V1 memory[] memory"
																		}
																	},
																	"id": 1706,
																	"indexExpression": {
																		"id": 1705,
																		"name": "k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "34719:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34701:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakedToken_V1_$1145_memory_ptr",
																		"typeString": "struct Farm.StakedToken_V1 memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1708,
																					"name": "_stakedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1675,
																					"src": "34757:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Farm.StakedToken memory[] memory"
																					}
																				},
																				"id": 1710,
																				"indexExpression": {
																					"id": 1709,
																					"name": "k",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1694,
																					"src": "34771:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "34757:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																					"typeString": "struct Farm.StakedToken memory"
																				}
																			},
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34774:6:0",
																			"memberName": "staker",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "34757:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1712,
																					"name": "_stakedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1675,
																					"src": "34799:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Farm.StakedToken memory[] memory"
																					}
																				},
																				"id": 1714,
																				"indexExpression": {
																					"id": 1713,
																					"name": "k",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1694,
																					"src": "34813:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "34799:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																					"typeString": "struct Farm.StakedToken memory"
																				}
																			},
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34816:7:0",
																			"memberName": "tokenId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1149,
																			"src": "34799:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1707,
																		"name": "StakedToken_V1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "34724:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_StakedToken_V1_$1145_storage_ptr_$",
																			"typeString": "type(struct Farm.StakedToken_V1 storage pointer)"
																		}
																	},
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34724:114:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakedToken_V1_$1145_memory_ptr",
																		"typeString": "struct Farm.StakedToken_V1 memory"
																	}
																},
																"src": "34701:137:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakedToken_V1_$1145_memory_ptr",
																	"typeString": "struct Farm.StakedToken_V1 memory"
																}
															},
															"id": 1718,
															"nodeType": "ExpressionStatement",
															"src": "34701:137:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1697,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "34655:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1698,
															"name": "_stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "34659:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Farm.StakedToken memory[] memory"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34673:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "34659:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34655:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1720,
												"initializationExpression": {
													"assignments": [
														1694
													],
													"declarations": [
														{
															"constant": false,
															"id": 1694,
															"mutability": "mutable",
															"name": "k",
															"nameLocation": "34648:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1720,
															"src": "34640:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1693,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1696,
													"initialValue": {
														"hexValue": "30",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34652:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34640:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "34681:3:0",
														"subExpression": {
															"id": 1701,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "34681:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1703,
													"nodeType": "ExpressionStatement",
													"src": "34681:3:0"
												},
												"nodeType": "ForStatement",
												"src": "34636:214:0"
											},
											{
												"expression": {
													"id": 1721,
													"name": "_stakedTokesV1_V2",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1684,
													"src": "34867:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Farm.StakedToken_V1 memory[] memory"
													}
												},
												"functionReturnParameters": 1670,
												"id": 1722,
												"nodeType": "Return",
												"src": "34860:24:0"
											}
										]
									},
									"functionSelector": "63c28db1",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedTokens",
									"nameLocation": "34378:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34402:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34394:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34393:15:0"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "34430:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Farm.StakedToken_V1[]"
												},
												"typeName": {
													"baseType": {
														"id": 1667,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1666,
															"name": "StakedToken_V1",
															"nameLocations": [
																"34430:14:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1145,
															"src": "34430:14:0"
														},
														"referencedDeclaration": 1145,
														"src": "34430:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_V1_$1145_storage_ptr",
															"typeString": "struct Farm.StakedToken_V1"
														}
													},
													"id": 1668,
													"nodeType": "ArrayTypeName",
													"src": "34430:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_V1_$1145_storage_$dyn_storage_ptr",
														"typeString": "struct Farm.StakedToken_V1[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34429:25:0"
									},
									"scope": 1838,
									"src": "34369:523:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "34984:597:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1733,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "34999:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1735,
															"indexExpression": {
																"id": 1734,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "35007:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34999:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35014:12:0",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1154,
														"src": "34999:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35029:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34999:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "35520:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35560:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "35542:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1807,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1806,
																				"name": "StakedToken",
																				"nameLocations": [
																					"35546:11:0"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1152,
																				"src": "35546:11:0"
																			},
																			"referencedDeclaration": 1152,
																			"src": "35546:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1808,
																		"nodeType": "ArrayTypeName",
																		"src": "35546:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35542:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1732,
															"id": 1812,
															"nodeType": "Return",
															"src": "35535:27:0"
														}
													]
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "34995:579:0",
												"trueBody": {
													"id": 1805,
													"nodeType": "Block",
													"src": "35032:482:0",
													"statements": [
														{
															"assignments": [
																1743
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1743,
																	"mutability": "mutable",
																	"name": "_stakedTokens",
																	"nameLocation": "35068:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1805,
																	"src": "35047:34:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Farm.StakedToken[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1741,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1740,
																				"name": "StakedToken",
																				"nameLocations": [
																					"35047:11:0"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1152,
																				"src": "35047:11:0"
																			},
																			"referencedDeclaration": 1152,
																			"src": "35047:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1742,
																		"nodeType": "ArrayTypeName",
																		"src": "35047:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1753,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1748,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "35102:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1750,
																			"indexExpression": {
																				"id": 1749,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "35110:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35102:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1163_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35117:12:0",
																		"memberName": "amountStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1154,
																		"src": "35102:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "35084:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1745,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1744,
																				"name": "StakedToken",
																				"nameLocations": [
																					"35088:11:0"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1152,
																				"src": "35088:11:0"
																			},
																			"referencedDeclaration": 1152,
																			"src": "35088:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1746,
																		"nodeType": "ArrayTypeName",
																		"src": "35088:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35084:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35047:83:0"
														},
														{
															"assignments": [
																1755
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1755,
																	"mutability": "mutable",
																	"name": "_index",
																	"nameLocation": "35153:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1805,
																	"src": "35145:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1754,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "35145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1757,
															"initialValue": {
																"hexValue": "30",
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35162:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "35145:18:0"
														},
														{
															"body": {
																"id": 1801,
																"nodeType": "Block",
																"src": "35245:221:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1772,
																								"name": "stakers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "35268:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																									"typeString": "mapping(address => struct Farm.Staker storage ref)"
																								}
																							},
																							"id": 1774,
																							"indexExpression": {
																								"id": 1773,
																								"name": "_user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1726,
																								"src": "35276:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "35268:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1163_storage",
																								"typeString": "struct Farm.Staker storage ref"
																							}
																						},
																						"id": 1775,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "35283:12:0",
																						"memberName": "stakedTokens",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1158,
																						"src": "35268:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																							"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																						}
																					},
																					"id": 1777,
																					"indexExpression": {
																						"id": 1776,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1759,
																						"src": "35296:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "35268:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakedToken_$1152_storage",
																						"typeString": "struct Farm.StakedToken storage ref"
																					}
																				},
																				"id": 1778,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "35299:6:0",
																				"memberName": "staker",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1147,
																				"src": "35268:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1781,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "35318:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1780,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "35310:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1779,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "35310:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1782,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "35310:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 1783,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "35309:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "35268:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1800,
																		"nodeType": "IfStatement",
																		"src": "35264:187:0",
																		"trueBody": {
																			"id": 1799,
																			"nodeType": "Block",
																			"src": "35323:128:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1794,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1785,
																								"name": "_stakedTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1743,
																								"src": "35346:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Farm.StakedToken memory[] memory"
																								}
																							},
																							"id": 1787,
																							"indexExpression": {
																								"id": 1786,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1755,
																								"src": "35360:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "35346:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																								"typeString": "struct Farm.StakedToken memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1788,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1188,
																										"src": "35370:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1790,
																									"indexExpression": {
																										"id": 1789,
																										"name": "_user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1726,
																										"src": "35378:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "35370:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1163_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1791,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "35385:12:0",
																								"memberName": "stakedTokens",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1158,
																								"src": "35370:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																									"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																								}
																							},
																							"id": 1793,
																							"indexExpression": {
																								"id": 1792,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1759,
																								"src": "35398:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "35370:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1152_storage",
																								"typeString": "struct Farm.StakedToken storage ref"
																							}
																						},
																						"src": "35346:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakedToken_$1152_memory_ptr",
																							"typeString": "struct Farm.StakedToken memory"
																						}
																					},
																					"id": 1795,
																					"nodeType": "ExpressionStatement",
																					"src": "35346:54:0"
																				},
																				{
																					"expression": {
																						"id": 1797,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "35423:8:0",
																						"subExpression": {
																							"id": 1796,
																							"name": "_index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1755,
																							"src": "35423:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1798,
																					"nodeType": "ExpressionStatement",
																					"src": "35423:8:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1762,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "35200:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1763,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "35204:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1765,
																			"indexExpression": {
																				"id": 1764,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "35212:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "35204:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1163_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "35219:12:0",
																		"memberName": "stakedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1158,
																		"src": "35204:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage",
																			"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																		}
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "35232:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "35204:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35200:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1802,
															"initializationExpression": {
																"assignments": [
																	1759
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1759,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "35193:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1802,
																		"src": "35185:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1758,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "35185:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1761,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35197:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "35185:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "35240:3:0",
																	"subExpression": {
																		"id": 1769,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "35240:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1771,
																"nodeType": "ExpressionStatement",
																"src": "35240:3:0"
															},
															"nodeType": "ForStatement",
															"src": "35180:286:0"
														},
														{
															"expression": {
																"id": 1803,
																"name": "_stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "35489:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1732,
															"id": 1804,
															"nodeType": "Return",
															"src": "35482:20:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0c2517a8",
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedTokens_V3",
									"nameLocation": "34907:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34934:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "34926:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34925:15:0"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "34962:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Farm.StakedToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 1729,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1728,
															"name": "StakedToken",
															"nameLocations": [
																"34962:11:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1152,
															"src": "34962:11:0"
														},
														"referencedDeclaration": 1152,
														"src": "34962:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1152_storage_ptr",
															"typeString": "struct Farm.StakedToken"
														}
													},
													"id": 1730,
													"nodeType": "ArrayTypeName",
													"src": "34962:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_$1152_storage_$dyn_storage_ptr",
														"typeString": "struct Farm.StakedToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34961:22:0"
									},
									"scope": 1838,
									"src": "34898:683:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "35662:136:0",
										"statements": [
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "35681:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "35673:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1833,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1826,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "35708:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1825,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "35691:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35691:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1828,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "35732:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1163_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1830,
															"indexExpression": {
																"id": 1829,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1818,
																"src": "35740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35732:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1163_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "35749:16:0",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1162,
														"src": "35732:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35691:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35673:92:0"
											},
											{
												"expression": {
													"id": 1834,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1824,
													"src": "35783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1835,
												"nodeType": "Return",
												"src": "35776:14:0"
											}
										]
									},
									"functionSelector": "f854a27f",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nameLocation": "35598:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "35623:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "35615:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35614:17:0"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "35653:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35652:9:0"
									},
									"scope": 1838,
									"src": "35589:209:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1839,
							"src": "28878:6925:0",
							"usedErrors": []
						}
					],
					"src": "38:35767:0"
				},
				"id": 0
			}
		}
	}
}