{
	"id": "52ed498d222204d7161d0f31bd689229",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.12;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract MyToken is ERC20 {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\r\n        // Mint 100 tokens to msg.sender\r\n        // Similar to how\r\n        // 1 dollar = 100 cents\r\n        // 1 token = 1 * (10 ** decimals)\r\n        _mint(msg.sender, 100 * 10 ** uint(decimals()));\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1914  _name */\n  0x03\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1279:10517  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1300:1314   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1293:1315   */\n      iszero\n        /* \"#utility.yul\":1275:1316   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1263:1265   */\n      0x20\n        /* \"#utility.yul\":1248:1266   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1135:1322   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3169:3181  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1473:1498   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1446:1464   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1327:1504   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3013:3015  18 */\n      0x12\n        /* \"#utility.yul\":1984:2020   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1972:1974   */\n      0x20\n        /* \"#utility.yul\":1957:1975   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1842:2026   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3320:3327  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3893:3900  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3930  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3946  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2066:2079  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2098:2103  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2091:2103  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4174:4178  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4213:4220  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4222:4228  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4198  _approve */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4246:4250  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4830:4834  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4856:4862  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4864:4873  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4875:4881  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4855  _transfer */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4893:4917  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4931  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4953  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4971:4997  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3131:3133   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3134   */\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x28\n        /* \"#utility.yul\":3150:3168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3143:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3243   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3189:3207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3182:3244   */\n      mstore\n        /* \"#utility.yul\":3280:3290   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3260:3278   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3253:3291   */\n      mstore\n        /* \"#utility.yul\":3308:3327   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5061:5067  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5102:5108  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5099  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5060  _approve */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5127:5131  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5680  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5703  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      swap1\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5637:5717  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_73\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5660:5667  spender */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_87\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5706:5716  addedValue */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_95\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2270:2283  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2302:2309  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2295:2309  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6325:6329  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6379  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6402  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6420:6455  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3992:3994   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3974:3995   */\n      mstore\n        /* \"#utility.yul\":4031:4033   */\n      0x25\n        /* \"#utility.yul\":4011:4029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4004:4034   */\n      mstore\n        /* \"#utility.yul\":4070:4104   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4050:4068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4043:4105   */\n      mstore\n        /* \"#utility.yul\":4141:4148   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4121:4139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4114:4149   */\n      mstore\n        /* \"#utility.yul\":4166:4185   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_83\n        /* \"#utility.yul\":3790:4191   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6530:6537  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6558:6573  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6555  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_88\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_108:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6592:6596  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3660:3664  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3700:3709  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3711:3717  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3685  _transfer */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9597:9616  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4398:4400   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4380:4401   */\n      mstore\n        /* \"#utility.yul\":4437:4439   */\n      0x24\n        /* \"#utility.yul\":4417:4435   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4410:4440   */\n      mstore\n        /* \"#utility.yul\":4476:4510   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4456:4474   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4449:4511   */\n      mstore\n        /* \"#utility.yul\":4547:4553   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4527:4545   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4520:4554   */\n      mstore\n        /* \"#utility.yul\":4571:4590   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_83\n        /* \"#utility.yul\":4196:4596   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9675:9696  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4785:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4844   */\n      0x22\n        /* \"#utility.yul\":4822:4840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4815:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4915   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4861:4879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4854:4916   */\n      mstore\n        /* \"#utility.yul\":4952:4956   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4932:4950   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4925:4957   */\n      mstore\n        /* \"#utility.yul\":4974:4993   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_83\n        /* \"#utility.yul\":4601:4999   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9757  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9773  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9782  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1473:1498   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1446:1464   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7182:7202  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5188:5209   */\n      mstore\n        /* \"#utility.yul\":5245:5247   */\n      0x25\n        /* \"#utility.yul\":5225:5243   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5218:5248   */\n      mstore\n        /* \"#utility.yul\":5284:5318   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5264:5282   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5257:5319   */\n      mstore\n        /* \"#utility.yul\":5355:5362   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5335:5353   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5328:5363   */\n      mstore\n        /* \"#utility.yul\":5380:5399   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_83\n        /* \"#utility.yul\":5004:5405   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7262:7285  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5612:5614   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5594:5615   */\n      mstore\n        /* \"#utility.yul\":5651:5653   */\n      0x23\n        /* \"#utility.yul\":5631:5649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5624:5654   */\n      mstore\n        /* \"#utility.yul\":5690:5724   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5670:5688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5663:5725   */\n      mstore\n        /* \"#utility.yul\":5761:5766   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5741:5759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5734:5767   */\n      mstore\n        /* \"#utility.yul\":5784:5803   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_83\n        /* \"#utility.yul\":5410:5809   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7394:7415  uint256 senderBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7453:7476  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6016:6018   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5998:6019   */\n      mstore\n        /* \"#utility.yul\":6055:6057   */\n      0x26\n        /* \"#utility.yul\":6035:6053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6028:6058   */\n      mstore\n        /* \"#utility.yul\":6094:6128   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6074:6092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6067:6129   */\n      mstore\n        /* \"#utility.yul\":6165:6173   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6145:6163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6138:6174   */\n      mstore\n        /* \"#utility.yul\":6191:6210   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_83\n        /* \"#utility.yul\":5814:6216   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7565:7571  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7562  senderBalance */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_88\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup7\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7571  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7601  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_137\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_95\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7644:7653  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7655:7661  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1473:1498   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1446:1464   */\n      add\n      swap1\n        /* \"#utility.yul\":1327:1504   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7164:7669  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:670   */\n    tag_20:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":586:588   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n        /* \"#utility.yul\":591:657   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":570:658   */\n      and\n        /* \"#utility.yul\":555:659   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":661:663   */\n      0x40\n        /* \"#utility.yul\":551:664   */\n      add\n      swap4\n        /* \"#utility.yul\":14:670   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:871   */\n    tag_140:\n        /* \"#utility.yul\":743:763   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":803:845   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":792:846   */\n      dup2\n      and\n        /* \"#utility.yul\":782:847   */\n      dup2\n      eq\n        /* \"#utility.yul\":772:865   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":861:862   */\n      0x00\n        /* \"#utility.yul\":858:859   */\n      dup1\n        /* \"#utility.yul\":851:863   */\n      revert\n        /* \"#utility.yul\":772:865   */\n    tag_149:\n        /* \"#utility.yul\":675:871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":876:1130   */\n    tag_23:\n        /* \"#utility.yul\":944:950   */\n      0x00\n        /* \"#utility.yul\":952:958   */\n      dup1\n        /* \"#utility.yul\":1005:1007   */\n      0x40\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":984:991   */\n      dup6\n        /* \"#utility.yul\":980:1003   */\n      sub\n        /* \"#utility.yul\":976:1008   */\n      slt\n        /* \"#utility.yul\":973:1025   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1021:1022   */\n      0x00\n        /* \"#utility.yul\":1018:1019   */\n      dup1\n        /* \"#utility.yul\":1011:1023   */\n      revert\n        /* \"#utility.yul\":973:1025   */\n    tag_151:\n        /* \"#utility.yul\":1044:1073   */\n      tag_152\n        /* \"#utility.yul\":1063:1072   */\n      dup4\n        /* \"#utility.yul\":1044:1073   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1034:1073   */\n      swap5\n        /* \"#utility.yul\":1120:1122   */\n      0x20\n        /* \"#utility.yul\":1105:1123   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1092:1124   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":876:1130   */\n      jump\t// out\n        /* \"#utility.yul\":1509:1837   */\n    tag_33:\n        /* \"#utility.yul\":1586:1592   */\n      0x00\n        /* \"#utility.yul\":1594:1600   */\n      dup1\n        /* \"#utility.yul\":1602:1608   */\n      0x00\n        /* \"#utility.yul\":1655:1657   */\n      0x60\n        /* \"#utility.yul\":1643:1652   */\n      dup5\n        /* \"#utility.yul\":1634:1641   */\n      dup7\n        /* \"#utility.yul\":1630:1653   */\n      sub\n        /* \"#utility.yul\":1626:1658   */\n      slt\n        /* \"#utility.yul\":1623:1675   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1671:1672   */\n      0x00\n        /* \"#utility.yul\":1668:1669   */\n      dup1\n        /* \"#utility.yul\":1661:1673   */\n      revert\n        /* \"#utility.yul\":1623:1675   */\n    tag_156:\n        /* \"#utility.yul\":1694:1723   */\n      tag_157\n        /* \"#utility.yul\":1713:1722   */\n      dup5\n        /* \"#utility.yul\":1694:1723   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1684:1723   */\n      swap3\n      pop\n        /* \"#utility.yul\":1742:1780   */\n      tag_158\n        /* \"#utility.yul\":1776:1778   */\n      0x20\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1742:1780   */\n      tag_140\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1732:1780   */\n      swap2\n      pop\n        /* \"#utility.yul\":1827:1829   */\n      0x40\n        /* \"#utility.yul\":1816:1825   */\n      dup5\n        /* \"#utility.yul\":1812:1830   */\n      add\n        /* \"#utility.yul\":1799:1831   */\n      calldataload\n        /* \"#utility.yul\":1789:1831   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1837   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2031:2217   */\n    tag_46:\n        /* \"#utility.yul\":2090:2096   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x20\n        /* \"#utility.yul\":2131:2140   */\n      dup3\n        /* \"#utility.yul\":2122:2129   */\n      dup5\n        /* \"#utility.yul\":2118:2141   */\n      sub\n        /* \"#utility.yul\":2114:2146   */\n      slt\n        /* \"#utility.yul\":2111:2163   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2159:2160   */\n      0x00\n        /* \"#utility.yul\":2156:2157   */\n      dup1\n        /* \"#utility.yul\":2149:2161   */\n      revert\n        /* \"#utility.yul\":2111:2163   */\n    tag_161:\n        /* \"#utility.yul\":2182:2211   */\n      tag_162\n        /* \"#utility.yul\":2201:2210   */\n      dup3\n        /* \"#utility.yul\":2182:2211   */\n      tag_140\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2172:2211   */\n      swap4\n        /* \"#utility.yul\":2031:2217   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2482   */\n    tag_62:\n        /* \"#utility.yul\":2290:2296   */\n      0x00\n        /* \"#utility.yul\":2298:2304   */\n      dup1\n        /* \"#utility.yul\":2351:2353   */\n      0x40\n        /* \"#utility.yul\":2339:2348   */\n      dup4\n        /* \"#utility.yul\":2330:2337   */\n      dup6\n        /* \"#utility.yul\":2326:2349   */\n      sub\n        /* \"#utility.yul\":2322:2354   */\n      slt\n        /* \"#utility.yul\":2319:2371   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      dup1\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2319:2371   */\n    tag_164:\n        /* \"#utility.yul\":2390:2419   */\n      tag_165\n        /* \"#utility.yul\":2409:2418   */\n      dup4\n        /* \"#utility.yul\":2390:2419   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2380:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2438:2476   */\n      tag_166\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2461:2470   */\n      dup5\n        /* \"#utility.yul\":2457:2475   */\n      add\n        /* \"#utility.yul\":2438:2476   */\n      tag_140\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2428:2476   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2482   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2487:2924   */\n    tag_67:\n        /* \"#utility.yul\":2566:2567   */\n      0x01\n        /* \"#utility.yul\":2562:2574   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2609:2621   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2630:2691   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2684:2688   */\n      0x7f\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2672:2689   */\n      and\n        /* \"#utility.yul\":2662:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2630:2691   */\n    tag_168:\n        /* \"#utility.yul\":2737:2739   */\n      0x20\n        /* \"#utility.yul\":2729:2735   */\n      dup3\n        /* \"#utility.yul\":2726:2740   */\n      lt\n        /* \"#utility.yul\":2706:2724   */\n      dup2\n        /* \"#utility.yul\":2703:2741   */\n      eq\n        /* \"#utility.yul\":2700:2918   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2774:2851   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2771:2772   */\n      0x00\n        /* \"#utility.yul\":2764:2852   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x22\n        /* \"#utility.yul\":2872:2873   */\n      0x04\n        /* \"#utility.yul\":2865:2880   */\n      mstore\n        /* \"#utility.yul\":2903:2907   */\n      0x24\n        /* \"#utility.yul\":2900:2901   */\n      0x00\n        /* \"#utility.yul\":2893:2908   */\n      revert\n        /* \"#utility.yul\":2700:2918   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2487:2924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3338:3522   */\n    tag_141:\n        /* \"#utility.yul\":3390:3467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3468   */\n      mstore\n        /* \"#utility.yul\":3487:3491   */\n      0x11\n        /* \"#utility.yul\":3484:3485   */\n      0x04\n        /* \"#utility.yul\":3477:3492   */\n      mstore\n        /* \"#utility.yul\":3511:3515   */\n      0x24\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3501:3516   */\n      revert\n        /* \"#utility.yul\":3527:3652   */\n    tag_88:\n        /* \"#utility.yul\":3567:3571   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup3\n        /* \"#utility.yul\":3592:3593   */\n      dup3\n        /* \"#utility.yul\":3589:3597   */\n      lt\n        /* \"#utility.yul\":3586:3620   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3600:3618   */\n      tag_174\n      tag_141\n      jump\t// in\n    tag_174:\n      pop\n        /* \"#utility.yul\":3637:3646   */\n      sub\n      swap1\n        /* \"#utility.yul\":3527:3652   */\n      jump\t// out\n        /* \"#utility.yul\":3657:3785   */\n    tag_95:\n        /* \"#utility.yul\":3697:3700   */\n      0x00\n        /* \"#utility.yul\":3728:3729   */\n      dup3\n        /* \"#utility.yul\":3724:3730   */\n      not\n        /* \"#utility.yul\":3721:3722   */\n      dup3\n        /* \"#utility.yul\":3718:3731   */\n      gt\n        /* \"#utility.yul\":3715:3754   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":3734:3752   */\n      tag_177\n      tag_141\n      jump\t// in\n    tag_177:\n      pop\n        /* \"#utility.yul\":3770:3779   */\n      add\n      swap1\n        /* \"#utility.yul\":3657:3785   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220db8e68cd2551a590ed1b9ecfaf329dd48579a7e1d568abfad931be4d248f037464736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:4"
															},
															"nodeType": "YulIf",
															"src": "353:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:4"
															},
															"nodeType": "YulIf",
															"src": "536:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:4"
															},
															"nodeType": "YulIf",
															"src": "698:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:4",
																"statements": []
															},
															"src": "779:133:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:4"
															},
															"nodeType": "YulIf",
															"src": "921:80:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:885:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:4"
															},
															"nodeType": "YulIf",
															"src": "1164:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:4"
															},
															"nodeType": "YulIf",
															"src": "1301:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:4"
															},
															"nodeType": "YulIf",
															"src": "1474:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:4",
														"type": ""
													}
												],
												"src": "1036:562:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:4"
															},
															"nodeType": "YulIf",
															"src": "1746:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:4"
															},
															"nodeType": "YulIf",
															"src": "1816:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:4",
														"type": ""
													}
												],
												"src": "1603:380:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000e1538038062000e158339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b610b8380620002926000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610944565b60405180910390f35b6100ff6100fa3660046109e0565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0a565b6102a8565b604051601281526020016100e3565b6100ff6101513660046109e0565b61039a565b610113610164366004610a46565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d66103de565b6100ff6101a23660046109e0565b6103ed565b6100ff6101b53660046109e0565b6104c7565b6101136101c8366004610a68565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b600061029f3384846104d4565b50600192915050565b60006102b5848484610687565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548281101561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038f853361038a8685610b1e565b6104d4565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161029f91859061038a908690610b35565b60606004805461020f90610a9b565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156104ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610372565b6104bd338561038a8685610b1e565b5060019392505050565b600061029f338484610687565b73ffffffffffffffffffffffffffffffffffffffff8316610576576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff8216610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff82166107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610372565b61088d8282610b1e565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526020819052604080822093909355908516815290812080548492906108d0908490610b35565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093691815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561097157858101830151858201604001528201610955565b81811115610983576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109db57600080fd5b919050565b600080604083850312156109f357600080fd5b6109fc836109b7565b946020939093013593505050565b600080600060608486031215610a1f57600080fd5b610a28846109b7565b9250610a36602085016109b7565b9150604084013590509250925092565b600060208284031215610a5857600080fd5b610a61826109b7565b9392505050565b60008060408385031215610a7b57600080fd5b610a84836109b7565b9150610a92602084016109b7565b90509250929050565b600181811c90821680610aaf57607f821691505b60208210811415610ae9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610b3057610b30610aef565b500390565b60008219821115610b4857610b48610aef565b50019056fea2646970667358221220db8e68cd2551a590ed1b9ecfaf329dd48579a7e1d568abfad931be4d248f037464736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE15 CODESIZE SUB DUP1 PUSH3 0xE15 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP6 CALLER PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x29F SWAP2 DUP6 SWAP1 PUSH2 0x38A SWAP1 DUP7 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x4BD CALLER DUP6 PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x88D DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D0 SWAP1 DUP5 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x936 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x955 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA28 DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA36 PUSH1 0x20 DUP6 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP3 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA84 DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 PUSH1 0x20 DUP5 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xAE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB30 PUSH2 0xAEF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xAEF JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP15 PUSH9 0xCD2551A590ED1B9ECF 0xAF ORIGIN SWAP14 0xD4 DUP6 PUSH26 0xA7E1D568ABFAD931BE4D248F037464736F6C634300080C003300 ",
							"sourceMap": "1279:9238:0:-:0;;;1842:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1932:17:0;;;;:7;;:17;;;;;:::i;:::-;;1842:114;;1279:9238;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:9238:0;;;-1:-1:-1;1279:9238:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:4:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:4;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1279:9238:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_488": {
									"entryPoint": 1236,
									"id": 488,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_589": {
									"entryPoint": null,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_334": {
									"entryPoint": 1671,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_152": {
									"entryPoint": 658,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_264": {
									"entryPoint": 1005,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_226": {
									"entryPoint": 922,
									"id": 226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_50": {
									"entryPoint": 512,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_59": {
									"entryPoint": 990,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 680,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_113": {
									"entryPoint": 1223,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6218:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:535:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:4",
																"statements": []
															},
															"src": "294:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:4"
															},
															"nodeType": "YulIf",
															"src": "443:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:121:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "591:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:88:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:104:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "661:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:113:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:4",
														"type": ""
													}
												],
												"src": "14:656:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "724:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "734:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "743:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "849:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "858:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "861:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "851:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "796:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "803:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "782:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:73:4"
															},
															"nodeType": "YulIf",
															"src": "772:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "703:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "714:5:4",
														"type": ""
													}
												],
												"src": "675:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1009:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1021:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1011:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1011:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "984:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "980:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "980:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1005:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "976:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:32:4"
															},
															"nodeType": "YulIf",
															"src": "973:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1034:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1044:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1082:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1109:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1120:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1092:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1082:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "921:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "932:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "944:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "952:6:4",
														"type": ""
													}
												],
												"src": "876:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1230:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1240:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1252:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1263:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1240:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1300:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1300:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1293:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1275:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1210:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1221:4:4",
														"type": ""
													}
												],
												"src": "1135:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1438:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1438:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1480:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1473:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1397:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1327:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1659:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1671:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1661:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1655:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:32:4"
															},
															"nodeType": "YulIf",
															"src": "1623:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1684:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1713:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1694:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1732:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1765:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1776:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1761:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1742:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1789:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1816:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1827:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1812:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1799:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1563:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1574:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1586:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1594:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1602:6:4",
														"type": ""
													}
												],
												"src": "1509:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1949:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1961:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1957:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1949:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1991:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2006:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2014:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1984:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1908:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1919:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1930:4:4",
														"type": ""
													}
												],
												"src": "1842:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2147:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2156:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2159:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2149:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2149:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2149:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2122:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2118:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2118:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2143:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:32:4"
															},
															"nodeType": "YulIf",
															"src": "2111:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2172:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2182:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2172:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2067:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2078:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2090:6:4",
														"type": ""
													}
												],
												"src": "2031:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2355:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2330:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2339:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2351:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:32:4"
															},
															"nodeType": "YulIf",
															"src": "2319:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2380:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2409:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2390:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2380:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2428:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2461:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2438:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2267:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2278:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2290:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2298:6:4",
														"type": ""
													}
												],
												"src": "2222:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2542:382:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2552:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2569:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2583:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2613:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2587:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2660:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2662:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2676:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2672:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2672:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2640:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:26:4"
															},
															"nodeType": "YulIf",
															"src": "2630:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2750:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2771:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2774:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2764:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2875:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2865:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2865:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2865:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2903:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2893:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2706:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2737:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2726:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2726:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2703:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:4"
															},
															"nodeType": "YulIf",
															"src": "2700:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2522:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2531:6:4",
														"type": ""
													}
												],
												"src": "2487:437:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3103:230:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3113:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3154:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3165:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3143:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3209:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3275:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:18:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3280:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3253:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3253:38:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3300:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3080:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3094:4:4",
														"type": ""
													}
												],
												"src": "2929:404:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3380:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3338:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3598:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3600:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3600:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3592:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3595:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3589:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:8:4"
															},
															"nodeType": "YulIf",
															"src": "3586:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3629:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3641:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3644:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3558:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3561:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3567:4:4",
														"type": ""
													}
												],
												"src": "3527:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3705:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3732:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3734:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3734:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3721:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3728:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3724:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3718:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:13:4"
															},
															"nodeType": "YulIf",
															"src": "3715:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3763:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3774:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3777:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3688:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3691:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3697:3:4",
														"type": ""
													}
												],
												"src": "3657:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3992:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3974:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4031:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:18:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4070:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4043:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4125:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4136:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4121:18:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4141:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4158:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4170:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4181:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4158:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3941:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3955:4:4",
														"type": ""
													}
												],
												"src": "3790:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4370:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4387:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4437:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4476:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4542:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4527:18:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4547:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4563:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4575:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4563:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4347:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4361:4:4",
														"type": ""
													}
												],
												"src": "4196:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4785:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4881:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:18:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4952:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4966:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4978:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4966:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4752:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4766:4:4",
														"type": ""
													}
												],
												"src": "4601:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5240:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5284:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5339:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5350:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:18:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5355:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5328:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5372:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5384:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5395:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5380:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5372:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:4",
														"type": ""
													}
												],
												"src": "5004:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5584:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5594:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5635:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5646:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5631:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5631:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5651:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5674:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5685:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5690:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5663:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5745:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5756:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5741:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5761:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5734:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5776:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5799:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5776:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5561:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5575:4:4",
														"type": ""
													}
												],
												"src": "5410:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5988:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6005:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6016:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5998:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5998:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6039:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6050:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6035:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6078:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6089:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6074:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6094:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6067:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6149:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6160:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6145:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6165:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6195:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6206:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6183:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5965:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5979:4:4",
														"type": ""
													}
												],
												"src": "5814:402:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610944565b60405180910390f35b6100ff6100fa3660046109e0565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0a565b6102a8565b604051601281526020016100e3565b6100ff6101513660046109e0565b61039a565b610113610164366004610a46565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d66103de565b6100ff6101a23660046109e0565b6103ed565b6100ff6101b53660046109e0565b6104c7565b6101136101c8366004610a68565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b600061029f3384846104d4565b50600192915050565b60006102b5848484610687565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548281101561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038f853361038a8685610b1e565b6104d4565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161029f91859061038a908690610b35565b60606004805461020f90610a9b565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156104ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610372565b6104bd338561038a8685610b1e565b5060019392505050565b600061029f338484610687565b73ffffffffffffffffffffffffffffffffffffffff8316610576576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff8216610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff82166107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610372565b61088d8282610b1e565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526020819052604080822093909355908516815290812080548492906108d0908490610b35565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093691815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561097157858101830151858201604001528201610955565b81811115610983576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109db57600080fd5b919050565b600080604083850312156109f357600080fd5b6109fc836109b7565b946020939093013593505050565b600080600060608486031215610a1f57600080fd5b610a28846109b7565b9250610a36602085016109b7565b9150604084013590509250925092565b600060208284031215610a5857600080fd5b610a61826109b7565b9392505050565b60008060408385031215610a7b57600080fd5b610a84836109b7565b9150610a92602084016109b7565b90509250929050565b600181811c90821680610aaf57607f821691505b60208210811415610ae9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610b3057610b30610aef565b500390565b60008219821115610b4857610b48610aef565b50019056fea2646970667358221220db8e68cd2551a590ed1b9ecfaf329dd48579a7e1d568abfad931be4d248f037464736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP6 CALLER PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x29F SWAP2 DUP6 SWAP1 PUSH2 0x38A SWAP1 DUP7 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x4BD CALLER DUP6 PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x88D DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D0 SWAP1 DUP5 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x936 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x955 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA28 DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA36 PUSH1 0x20 DUP6 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP3 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA84 DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 PUSH1 0x20 DUP5 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xAE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB30 PUSH2 0xAEF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xAEF JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP15 PUSH9 0xCD2551A590ED1B9ECF 0xAF ORIGIN SWAP14 0xD4 DUP6 PUSH26 0xA7E1D568ABFAD931BE4D248F037464736F6C634300080C003300 ",
							"sourceMap": "1279:9238:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1300:14:4;;1293:22;1275:41;;1263:2;1248:18;4091:166:0;1135:187:4;3082:106:0;3169:12;;3082:106;;;1473:25:4;;;1461:2;1446:18;3082:106:0;1327:177:4;4724:414:0;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;1984:36:4;;1972:2;1957:18;2940:82:0;1842:184:4;5533:212:0;;;;;;:::i;:::-;;:::i;3246:125::-;;;;;;:::i;:::-;3346:18;;3320:7;3346:18;;;;;;;;;;;;3246:125;2223:93;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;3919:18;;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:2;4213:7:0;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:0;4091:166;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;4920:19;;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:2;4920:33:0;;;;;;;;4971:26;;;;4963:79;;;;;;;3131:2:4;4963:79:0;;;3113:21:4;3170:2;3150:18;;;3143:30;3209:34;3189:18;;;3182:62;3280:10;3260:18;;;3253:38;3308:19;;4963:79:0;;;;;;;;;5052:57;5061:6;665:10:2;5083:25:0;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:0;;4724:414;-1:-1:-1;;;;4724:414:0:o;5533:212::-;665:10:2;5621:4:0;5669:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:2;6325:4:0;6368:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;6420:35;;;;6412:85;;;;;;;3992:2:4;6412:85:0;;;3974:21:4;4031:2;4011:18;;;4004:30;4070:34;4050:18;;;4043:62;4141:7;4121:18;;;4114:35;4166:19;;6412:85:0;3790:401:4;6412:85:0;6507:67;665:10:2;6530:7:0;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:0;;6232:371;-1:-1:-1;;;6232:371:0:o;3574:172::-;3660:4;3676:42;665:10:2;3700:9:0;3711:6;3676:9;:42::i;9496:340::-;9597:19;;;9589:68;;;;;;;4398:2:4;9589:68:0;;;4380:21:4;4437:2;4417:18;;;4410:30;4476:34;4456:18;;;4449:62;4547:6;4527:18;;;4520:34;4571:19;;9589:68:0;4196:400:4;9589:68:0;9675:21;;;9667:68;;;;;;;4803:2:4;9667:68:0;;;4785:21:4;4842:2;4822:18;;;4815:30;4881:34;4861:18;;;4854:62;4952:4;4932:18;;;4925:32;4974:19;;9667:68:0;4601:398:4;9667:68:0;9746:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;1473:25:4;;;9797:32:0;;1446:18:4;9797:32:0;;;;;;;9496:340;;;:::o;7077:592::-;7182:20;;;7174:70;;;;;;;5206:2:4;7174:70:0;;;5188:21:4;5245:2;5225:18;;;5218:30;5284:34;5264:18;;;5257:62;5355:7;5335:18;;;5328:35;5380:19;;7174:70:0;5004:401:4;7174:70:0;7262:23;;;7254:71;;;;;;;5612:2:4;7254:71:0;;;5594:21:4;5651:2;5631:18;;;5624:30;5690:34;5670:18;;;5663:62;5761:5;5741:18;;;5734:33;5784:19;;7254:71:0;5410:399:4;7254:71:0;7418:17;;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;;;;6016:2:4;7445:74:0;;;5998:21:4;6055:2;6035:18;;;6028:30;6094:34;6074:18;;;6067:62;6165:8;6145:18;;;6138:36;6191:19;;7445:74:0;5814:402:4;7445:74:0;7549:22;7565:6;7549:13;:22;:::i;:::-;7529:17;;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;7627:35;;7636:6;7627:35;;;7655:6;7627:35;;;;1473:25:4;;1461:2;1446:18;;1327:177;7627:35:0;;;;;;;;7164:505;7077:592;;;:::o;14:656:4:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:4;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:4:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:4:o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1509:328;;;;;:::o;2031:186::-;2090:6;2143:2;2131:9;2122:7;2118:23;2114:32;2111:52;;;2159:1;2156;2149:12;2111:52;2182:29;2201:9;2182:29;:::i;:::-;2172:39;2031:186;-1:-1:-1;;;2031:186:4:o;2222:260::-;2290:6;2298;2351:2;2339:9;2330:7;2326:23;2322:32;2319:52;;;2367:1;2364;2357:12;2319:52;2390:29;2409:9;2390:29;:::i;:::-;2380:39;;2438:38;2472:2;2461:9;2457:18;2438:38;:::i;:::-;2428:48;;2222:260;;;;;:::o;2487:437::-;2566:1;2562:12;;;;2609;;;2630:61;;2684:4;2676:6;2672:17;2662:27;;2630:61;2737:2;2729:6;2726:14;2706:18;2703:38;2700:218;;;2774:77;2771:1;2764:88;2875:4;2872:1;2865:15;2903:4;2900:1;2893:15;2700:218;;2487:437;;;:::o;3338:184::-;3390:77;3387:1;3380:88;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3527:125;3567:4;3595:1;3592;3589:8;3586:34;;;3600:18;;:::i;:::-;-1:-1:-1;3637:9:4;;3527:125::o;3657:128::-;3697:3;3728:1;3724:6;3721:1;3718:13;3715:39;;;3734:18;;:::i;:::-;-1:-1:-1;3770:9:4;;3657:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "589400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24594",
								"balanceOf(address)": "2561",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "26908",
								"increaseAllowance(address,uint256)": "26897",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "51189",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 4
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 10517,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db8e68cd2551a590ed1b9ecfaf329dd48579a7e1d568abfad931be4d248f037464736f6c634300080c0033",
									".code": [
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1315,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1135,
											"end": 1322,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1327,
											"end": 1504,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1984,
											"end": 2020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1842,
											"end": 2026,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3143,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3243,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4033,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4185,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4166,
											"end": 4185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3790,
											"end": 4191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4510,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 4511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4571,
											"end": 4590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4196,
											"end": 4596,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4844,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4601,
											"end": 4999,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5004,
											"end": 5405,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5653,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5766,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5803,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5784,
											"end": 5803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5410,
											"end": 5809,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6128,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6173,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6210,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6191,
											"end": 6210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5814,
											"end": 6216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1504,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 591,
											"end": 657,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 570,
											"end": 658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 551,
											"end": 664,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 670,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 871,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 675,
											"end": 871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 763,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 792,
											"end": 846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 782,
											"end": 847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 772,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 861,
											"end": 862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 851,
											"end": 863,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 772,
											"end": 865,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 984,
											"end": 991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1008,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1073,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1641,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1658,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1713,
											"end": 1722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2141,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2354,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2470,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2688,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2851,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3597,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 18,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 20,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"source/ERC20.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/ERC20.sol\":173:494  contract MyToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"source/ERC20.sol\":206:491  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  dup2\n  mload\n    /* \"source/ERC20.sol\":266:270  name */\n  dup3\n  swap1\n    /* \"source/ERC20.sol\":272:278  symbol */\n  dup3\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  tag_7\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1914  _name */\n  0x03\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1909:1922  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  dup1\n  mload\n  tag_9\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1939  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1932:1949  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":1842:1956  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"source/ERC20.sol\":436:483  _mint(msg.sender, 100 * 10 ** uint(decimals())) */\n  tag_11\n    /* \"source/ERC20.sol\":442:452  msg.sender */\n  caller\n    /* \"source/ERC20.sol\":471:481  decimals() */\n  tag_12\n    /* \"source/ERC20.sol\":471:479  decimals */\n  shl(0x20, tag_13)\n    /* \"source/ERC20.sol\":471:481  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"source/ERC20.sol\":460:482  10 ** uint(decimals()) */\n  tag_14\n  swap1\n    /* \"source/ERC20.sol\":466:482  uint(decimals()) */\n  0xff\n  and\n    /* \"source/ERC20.sol\":460:462  10 */\n  0x0a\n    /* \"source/ERC20.sol\":460:482  10 ** uint(decimals()) */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"source/ERC20.sol\":454:482  100 * 10 ** uint(decimals()) */\n  tag_16\n  swap1\n    /* \"source/ERC20.sol\":454:457  100 */\n  0x64\n    /* \"source/ERC20.sol\":454:482  100 * 10 ** uint(decimals()) */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"source/ERC20.sol\":436:441  _mint */\n  tag_18\n    /* \"source/ERC20.sol\":436:483  _mint(msg.sender, 100 * 10 ** uint(decimals())) */\n  jump\t// in\ntag_11:\n    /* \"source/ERC20.sol\":206:491  constructor(string memory name, string memory symbol) ERC20(name, symbol) {... */\n  pop\n  pop\n    /* \"source/ERC20.sol\":173:494  contract MyToken is ERC20 {... */\n  jump(tag_49)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3013:3015  18 */\n  0x12\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7940:8270  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8023:8044  account != address(0) */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3484:3486   */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3466:3487   */\n  mstore\n    /* \"#utility.yul\":3523:3525   */\n  0x1f\n    /* \"#utility.yul\":3503:3521   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3496:3526   */\n  mstore\n    /* \"#utility.yul\":3562:3595   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":3542:3560   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3535:3596   */\n  mstore\n    /* \"#utility.yul\":3613:3631   */\n  0x64\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8015:8080  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8167:8173  amount */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8151:8163  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8151:8173  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8201  _balances[account] */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8192  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8201  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n  dup1\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8205:8211  amount */\n  dup4\n  swap3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8192  _balances */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n  tag_29\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8205:8211  amount */\n  dup5\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8183:8211  _balances[account] += amount */\n  tag_28\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":3921:3946   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8243:8244  0 */\n  0x00\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":3909:3911   */\n  0x20\n    /* \"#utility.yul\":3894:3912   */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":8226:8263  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7940:8270  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"source/ERC20.sol\":173:494  contract MyToken is ERC20 {... */\ntag_8:\n  dup3\n  dup1\n  sload\n  tag_33\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_36\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_39)\ntag_36:\n  dup3\n  0x1f\n  lt\n  tag_37\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_39)\ntag_37:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_39\n  jumpi\n  swap2\n  dup3\n  add\ntag_38:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_38)\ntag_39:\n  pop\n  tag_40\n  swap3\n  swap2\n  pop\n  tag_41\n  jump\t// in\ntag_40:\n  pop\n  swap1\n  jump\t// out\ntag_41:\ntag_42:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_40\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_42)\n    /* \"#utility.yul\":14:141   */\ntag_44:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_45:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_52:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_54\n  tag_44\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_56\n  tag_44\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_57:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_58:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_61:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_63:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_64:\n    /* \"#utility.yul\":1354:1415   */\n  tag_65\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_45\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_66:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_67\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_45\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1730   */\ntag_46:\n    /* \"#utility.yul\":1664:1674   */\n  0x4e487b71\n    /* \"#utility.yul\":1659:1662   */\n  0xe0\n    /* \"#utility.yul\":1655:1675   */\n  shl\n    /* \"#utility.yul\":1652:1653   */\n  0x00\n    /* \"#utility.yul\":1645:1676   */\n  mstore\n    /* \"#utility.yul\":1695:1699   */\n  0x11\n    /* \"#utility.yul\":1692:1693   */\n  0x04\n    /* \"#utility.yul\":1685:1700   */\n  mstore\n    /* \"#utility.yul\":1719:1723   */\n  0x24\n    /* \"#utility.yul\":1716:1717   */\n  0x00\n    /* \"#utility.yul\":1709:1724   */\n  revert\n    /* \"#utility.yul\":1735:2157   */\ntag_47:\n    /* \"#utility.yul\":1824:1825   */\n  0x01\n    /* \"#utility.yul\":1867:1872   */\n  dup2\n    /* \"#utility.yul\":1824:1825   */\n  dup2\n    /* \"#utility.yul\":1881:2151   */\ntag_70:\n    /* \"#utility.yul\":1902:1909   */\n  dup1\n    /* \"#utility.yul\":1892:1900   */\n  dup6\n    /* \"#utility.yul\":1889:1910   */\n  gt\n    /* \"#utility.yul\":1881:2151   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1961:1965   */\n  dup2\n    /* \"#utility.yul\":1957:1958   */\n  0x00\n    /* \"#utility.yul\":1953:1959   */\n  not\n    /* \"#utility.yul\":1949:1966   */\n  div\n    /* \"#utility.yul\":1943:1947   */\n  dup3\n    /* \"#utility.yul\":1940:1967   */\n  gt\n    /* \"#utility.yul\":1937:1990   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1970:1988   */\n  tag_74\n  tag_46\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2020:2027   */\n  dup1\n    /* \"#utility.yul\":2010:2018   */\n  dup6\n    /* \"#utility.yul\":2006:2028   */\n  and\n    /* \"#utility.yul\":2003:2058   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2040:2056   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":2003:2058   */\ntag_75:\n    /* \"#utility.yul\":2119:2141   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":2079:2094   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":1881:2151   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":1885:1888   */\n  pop\n    /* \"#utility.yul\":1735:2157   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2162:2968   */\ntag_48:\n    /* \"#utility.yul\":2211:2216   */\n  0x00\n    /* \"#utility.yul\":2241:2249   */\n  dup3\n    /* \"#utility.yul\":2231:2311   */\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":2282:2283   */\n  0x01\n    /* \"#utility.yul\":2296:2301   */\n  jump(tag_76)\n    /* \"#utility.yul\":2231:2311   */\ntag_77:\n    /* \"#utility.yul\":2330:2334   */\n  dup2\n    /* \"#utility.yul\":2320:2396   */\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2381:2386   */\n  jump(tag_76)\n    /* \"#utility.yul\":2320:2396   */\ntag_78:\n    /* \"#utility.yul\":2412:2416   */\n  dup2\n    /* \"#utility.yul\":2430:2431   */\n  0x01\n    /* \"#utility.yul\":2425:2484   */\n  dup2\n  eq\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2498:2499   */\n  0x02\n    /* \"#utility.yul\":2493:2623   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2405:2623   */\n  jump(tag_79)\n    /* \"#utility.yul\":2425:2484   */\ntag_80:\n    /* \"#utility.yul\":2455:2456   */\n  0x01\n    /* \"#utility.yul\":2446:2456   */\n  swap2\n  pop\n    /* \"#utility.yul\":2469:2474   */\n  pop\n  jump(tag_76)\n    /* \"#utility.yul\":2493:2623   */\ntag_81:\n    /* \"#utility.yul\":2530:2533   */\n  0xff\n    /* \"#utility.yul\":2520:2528   */\n  dup5\n    /* \"#utility.yul\":2517:2534   */\n  gt\n    /* \"#utility.yul\":2514:2557   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2537:2555   */\n  tag_83\n  tag_46\n  jump\t// in\ntag_83:\n  pop\n  pop\n    /* \"#utility.yul\":2593:2594   */\n  0x01\n    /* \"#utility.yul\":2579:2595   */\n  dup3\n  shl\n    /* \"#utility.yul\":2608:2613   */\n  jump(tag_76)\n    /* \"#utility.yul\":2405:2623   */\ntag_79:\n  pop\n    /* \"#utility.yul\":2707:2709   */\n  0x20\n    /* \"#utility.yul\":2697:2705   */\n  dup4\n    /* \"#utility.yul\":2694:2710   */\n  lt\n    /* \"#utility.yul\":2688:2691   */\n  0x0133\n    /* \"#utility.yul\":2682:2686   */\n  dup4\n    /* \"#utility.yul\":2679:2692   */\n  lt\n    /* \"#utility.yul\":2675:2711   */\n  and\n    /* \"#utility.yul\":2669:2671   */\n  0x4e\n    /* \"#utility.yul\":2659:2667   */\n  dup5\n    /* \"#utility.yul\":2656:2672   */\n  lt\n    /* \"#utility.yul\":2651:2653   */\n  0x0b\n    /* \"#utility.yul\":2645:2649   */\n  dup5\n    /* \"#utility.yul\":2642:2654   */\n  lt\n    /* \"#utility.yul\":2638:2673   */\n  and\n    /* \"#utility.yul\":2635:2712   */\n  or\n    /* \"#utility.yul\":2632:2791   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2744:2763   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":2776:2781   */\n  jump(tag_76)\n    /* \"#utility.yul\":2632:2791   */\ntag_84:\n    /* \"#utility.yul\":2823:2857   */\n  tag_85\n    /* \"#utility.yul\":2848:2856   */\n  dup4\n    /* \"#utility.yul\":2842:2846   */\n  dup4\n    /* \"#utility.yul\":2823:2857   */\n  tag_47\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2893:2899   */\n  dup1\n    /* \"#utility.yul\":2889:2890   */\n  0x00\n    /* \"#utility.yul\":2885:2891   */\n  not\n    /* \"#utility.yul\":2881:2900   */\n  div\n    /* \"#utility.yul\":2872:2879   */\n  dup3\n    /* \"#utility.yul\":2869:2901   */\n  gt\n    /* \"#utility.yul\":2866:2924   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2904:2922   */\n  tag_87\n  tag_46\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2942:2962   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":2162:2968   */\ntag_76:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2973:3104   */\ntag_15:\n    /* \"#utility.yul\":3033:3038   */\n  0x00\n    /* \"#utility.yul\":3062:3098   */\n  tag_89\n    /* \"#utility.yul\":3089:3097   */\n  dup4\n    /* \"#utility.yul\":3083:3087   */\n  dup4\n    /* \"#utility.yul\":3062:3098   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3053:3098   */\n  swap4\n    /* \"#utility.yul\":2973:3104   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3109:3277   */\ntag_17:\n    /* \"#utility.yul\":3149:3156   */\n  0x00\n    /* \"#utility.yul\":3215:3216   */\n  dup2\n    /* \"#utility.yul\":3211:3212   */\n  0x00\n    /* \"#utility.yul\":3207:3213   */\n  not\n    /* \"#utility.yul\":3203:3217   */\n  div\n    /* \"#utility.yul\":3200:3201   */\n  dup4\n    /* \"#utility.yul\":3197:3218   */\n  gt\n    /* \"#utility.yul\":3192:3193   */\n  dup3\n    /* \"#utility.yul\":3185:3194   */\n  iszero\n    /* \"#utility.yul\":3178:3195   */\n  iszero\n    /* \"#utility.yul\":3174:3219   */\n  and\n    /* \"#utility.yul\":3171:3242   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3222:3240   */\n  tag_92\n  tag_46\n  jump\t// in\ntag_92:\n  pop\n    /* \"#utility.yul\":3262:3271   */\n  mul\n  swap1\n    /* \"#utility.yul\":3109:3277   */\n  jump\t// out\n    /* \"#utility.yul\":3642:3770   */\ntag_28:\n    /* \"#utility.yul\":3682:3685   */\n  0x00\n    /* \"#utility.yul\":3713:3714   */\n  dup3\n    /* \"#utility.yul\":3709:3715   */\n  not\n    /* \"#utility.yul\":3706:3707   */\n  dup3\n    /* \"#utility.yul\":3703:3716   */\n  gt\n    /* \"#utility.yul\":3700:3739   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3719:3737   */\n  tag_96\n  tag_46\n  jump\t// in\ntag_96:\n  pop\n    /* \"#utility.yul\":3755:3764   */\n  add\n  swap1\n    /* \"#utility.yul\":3642:3770   */\n  jump\t// out\n    /* \"#utility.yul\":3957:4337   */\ntag_34:\n    /* \"#utility.yul\":4036:4037   */\n  0x01\n    /* \"#utility.yul\":4032:4044   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":4079:4091   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":4100:4161   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4154:4158   */\n  0x7f\n    /* \"#utility.yul\":4146:4152   */\n  dup3\n    /* \"#utility.yul\":4142:4159   */\n  and\n    /* \"#utility.yul\":4132:4159   */\n  swap2\n  pop\n    /* \"#utility.yul\":4100:4161   */\ntag_99:\n    /* \"#utility.yul\":4207:4209   */\n  0x20\n    /* \"#utility.yul\":4199:4205   */\n  dup3\n    /* \"#utility.yul\":4196:4210   */\n  lt\n    /* \"#utility.yul\":4176:4194   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  eq\n    /* \"#utility.yul\":4170:4331   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4253:4263   */\n  0x4e487b71\n    /* \"#utility.yul\":4248:4251   */\n  0xe0\n    /* \"#utility.yul\":4244:4264   */\n  shl\n    /* \"#utility.yul\":4241:4242   */\n  0x00\n    /* \"#utility.yul\":4234:4265   */\n  mstore\n    /* \"#utility.yul\":4288:4292   */\n  0x22\n    /* \"#utility.yul\":4285:4286   */\n  0x04\n    /* \"#utility.yul\":4278:4293   */\n  mstore\n    /* \"#utility.yul\":4316:4320   */\n  0x24\n    /* \"#utility.yul\":4313:4314   */\n  0x00\n    /* \"#utility.yul\":4306:4321   */\n  revert\n    /* \"#utility.yul\":4170:4331   */\ntag_100:\n  pop\n    /* \"#utility.yul\":3957:4337   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_49:\n    /* \"source/ERC20.sol\":173:494  contract MyToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/ERC20.sol\":173:494  contract MyToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x18160ddd\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":1300:1314   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1293:1315   */\n      iszero\n        /* \"#utility.yul\":1275:1316   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1263:1265   */\n      0x20\n        /* \"#utility.yul\":1248:1266   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_19\n        /* \"#utility.yul\":1135:1322   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3169:3181  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1473:1498   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1446:1464   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3082:3188  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":1327:1504   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3013:3015  18 */\n      0x12\n        /* \"#utility.yul\":1984:2020   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1972:1974   */\n      0x20\n        /* \"#utility.yul\":1957:1975   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2940:3022  function decimals() public view virtual returns (uint8) {... */\n      tag_19\n        /* \"#utility.yul\":1842:2026   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      tag_41\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3320:3327  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3346:3364  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3246:3371  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_17\n      tag_50\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      tag_53\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      tag_57\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_27\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3893:3900  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3930  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3937  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3919:3946  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3804:3953  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2066:2079  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2098:2103  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2091:2103  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2021:2110  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4174:4178  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4213:4220  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4222:4228  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4198  _approve */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4190:4229  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4246:4250  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4091:4257  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4830:4834  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4856:4862  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4864:4873  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4875:4881  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4855  _transfer */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4846:4882  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4893:4917  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4931  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4939  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4920:4953  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4971:4997  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3131:3133   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3113:3134   */\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x28\n        /* \"#utility.yul\":3150:3168   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3143:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3243   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3189:3207   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3182:3244   */\n      mstore\n        /* \"#utility.yul\":3280:3290   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3260:3278   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3253:3291   */\n      mstore\n        /* \"#utility.yul\":3308:3327   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4963:5042  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5061:5067  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5102:5108  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5099  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5083:5108  currentAllowance - amount */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5060  _approve */\n      tag_76\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5052:5109  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5127:5131  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":4724:5138  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5533:5745  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_42:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5680  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5694  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5703  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5621:5625  bool */\n      swap1\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5637:5717  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_73\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5660:5667  spender */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_87\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5706:5716  addedValue */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":5669:5716  _allowances[_msgSender()][spender] + addedValue */\n      tag_95\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2223:2316  function symbol() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2270:2283  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2302:2309  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":2295:2309  return _symbol */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6325:6329  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6379  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6393  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6368:6402  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6420:6455  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3992:3994   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3974:3995   */\n      mstore\n        /* \"#utility.yul\":4031:4033   */\n      0x25\n        /* \"#utility.yul\":4011:4029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4004:4034   */\n      mstore\n        /* \"#utility.yul\":4070:4104   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4050:4068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4043:4105   */\n      mstore\n        /* \"#utility.yul\":4141:4148   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4121:4139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4114:4149   */\n      mstore\n        /* \"#utility.yul\":4166:4185   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_83\n        /* \"#utility.yul\":3790:4191   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6412:6497  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_108\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6530:6537  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6558:6573  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6555  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6539:6573  currentAllowance - subtractedValue */\n      tag_88\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6507:6574  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_108:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6592:6596  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":6232:6603  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3574:3746  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3660:3664  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3700:3709  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3711:3717  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3685  _transfer */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":3676:3718  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9597:9616  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4398:4400   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4380:4401   */\n      mstore\n        /* \"#utility.yul\":4437:4439   */\n      0x24\n        /* \"#utility.yul\":4417:4435   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4410:4440   */\n      mstore\n        /* \"#utility.yul\":4476:4510   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4456:4474   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4449:4511   */\n      mstore\n        /* \"#utility.yul\":4547:4553   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4527:4545   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4520:4554   */\n      mstore\n        /* \"#utility.yul\":4571:4590   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_83\n        /* \"#utility.yul\":4196:4596   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9589:9657  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9675:9696  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4785:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4844   */\n      0x22\n        /* \"#utility.yul\":4822:4840   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4815:4845   */\n      mstore\n        /* \"#utility.yul\":4881:4915   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4861:4879   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4854:4916   */\n      mstore\n        /* \"#utility.yul\":4952:4956   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4932:4950   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4925:4957   */\n      mstore\n        /* \"#utility.yul\":4974:4993   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_83\n        /* \"#utility.yul\":4601:4999   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9667:9735  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9757  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9764  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9773  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9746:9782  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1473:1498   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1446:1464   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9797:9829  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":9496:9836  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7182:7202  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5188:5209   */\n      mstore\n        /* \"#utility.yul\":5245:5247   */\n      0x25\n        /* \"#utility.yul\":5225:5243   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5218:5248   */\n      mstore\n        /* \"#utility.yul\":5284:5318   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5264:5282   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5257:5319   */\n      mstore\n        /* \"#utility.yul\":5355:5362   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5335:5353   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5328:5363   */\n      mstore\n        /* \"#utility.yul\":5380:5399   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_83\n        /* \"#utility.yul\":5004:5405   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7174:7244  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_125:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7262:7285  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5612:5614   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5594:5615   */\n      mstore\n        /* \"#utility.yul\":5651:5653   */\n      0x23\n        /* \"#utility.yul\":5631:5649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5624:5654   */\n      mstore\n        /* \"#utility.yul\":5690:5724   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5670:5688   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5663:5725   */\n      mstore\n        /* \"#utility.yul\":5761:5766   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5741:5759   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5734:5767   */\n      mstore\n        /* \"#utility.yul\":5784:5803   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_83\n        /* \"#utility.yul\":5410:5809   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7254:7325  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7394:7415  uint256 senderBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7418:7435  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7453:7476  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6016:6018   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5998:6019   */\n      mstore\n        /* \"#utility.yul\":6055:6057   */\n      0x26\n        /* \"#utility.yul\":6035:6053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6028:6058   */\n      mstore\n        /* \"#utility.yul\":6094:6128   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6074:6092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6067:6129   */\n      mstore\n        /* \"#utility.yul\":6165:6173   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6145:6163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6138:6174   */\n      mstore\n        /* \"#utility.yul\":6191:6210   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_83\n        /* \"#utility.yul\":5814:6216   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7445:7519  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7565:7571  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7562  senderBalance */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7549:7571  senderBalance - amount */\n      tag_88\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup7\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7546  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7571  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7601  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7529:7538  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_137\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7605:7611  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7581:7611  _balances[recipient] += amount */\n      tag_95\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7644:7653  recipient */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7636:7642  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7655:7661  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_138\n      swap2\n        /* \"#utility.yul\":1473:1498   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1446:1464   */\n      add\n      swap1\n        /* \"#utility.yul\":1327:1504   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7627:7662  Transfer(sender, recipient, amount) */\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7164:7669  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":7077:7669  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:670   */\n    tag_20:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":586:588   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n        /* \"#utility.yul\":591:657   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":570:658   */\n      and\n        /* \"#utility.yul\":555:659   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":661:663   */\n      0x40\n        /* \"#utility.yul\":551:664   */\n      add\n      swap4\n        /* \"#utility.yul\":14:670   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:871   */\n    tag_140:\n        /* \"#utility.yul\":743:763   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":803:845   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":792:846   */\n      dup2\n      and\n        /* \"#utility.yul\":782:847   */\n      dup2\n      eq\n        /* \"#utility.yul\":772:865   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":861:862   */\n      0x00\n        /* \"#utility.yul\":858:859   */\n      dup1\n        /* \"#utility.yul\":851:863   */\n      revert\n        /* \"#utility.yul\":772:865   */\n    tag_149:\n        /* \"#utility.yul\":675:871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":876:1130   */\n    tag_23:\n        /* \"#utility.yul\":944:950   */\n      0x00\n        /* \"#utility.yul\":952:958   */\n      dup1\n        /* \"#utility.yul\":1005:1007   */\n      0x40\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":984:991   */\n      dup6\n        /* \"#utility.yul\":980:1003   */\n      sub\n        /* \"#utility.yul\":976:1008   */\n      slt\n        /* \"#utility.yul\":973:1025   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1021:1022   */\n      0x00\n        /* \"#utility.yul\":1018:1019   */\n      dup1\n        /* \"#utility.yul\":1011:1023   */\n      revert\n        /* \"#utility.yul\":973:1025   */\n    tag_151:\n        /* \"#utility.yul\":1044:1073   */\n      tag_152\n        /* \"#utility.yul\":1063:1072   */\n      dup4\n        /* \"#utility.yul\":1044:1073   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1034:1073   */\n      swap5\n        /* \"#utility.yul\":1120:1122   */\n      0x20\n        /* \"#utility.yul\":1105:1123   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1092:1124   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":876:1130   */\n      jump\t// out\n        /* \"#utility.yul\":1509:1837   */\n    tag_33:\n        /* \"#utility.yul\":1586:1592   */\n      0x00\n        /* \"#utility.yul\":1594:1600   */\n      dup1\n        /* \"#utility.yul\":1602:1608   */\n      0x00\n        /* \"#utility.yul\":1655:1657   */\n      0x60\n        /* \"#utility.yul\":1643:1652   */\n      dup5\n        /* \"#utility.yul\":1634:1641   */\n      dup7\n        /* \"#utility.yul\":1630:1653   */\n      sub\n        /* \"#utility.yul\":1626:1658   */\n      slt\n        /* \"#utility.yul\":1623:1675   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1671:1672   */\n      0x00\n        /* \"#utility.yul\":1668:1669   */\n      dup1\n        /* \"#utility.yul\":1661:1673   */\n      revert\n        /* \"#utility.yul\":1623:1675   */\n    tag_156:\n        /* \"#utility.yul\":1694:1723   */\n      tag_157\n        /* \"#utility.yul\":1713:1722   */\n      dup5\n        /* \"#utility.yul\":1694:1723   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1684:1723   */\n      swap3\n      pop\n        /* \"#utility.yul\":1742:1780   */\n      tag_158\n        /* \"#utility.yul\":1776:1778   */\n      0x20\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1742:1780   */\n      tag_140\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1732:1780   */\n      swap2\n      pop\n        /* \"#utility.yul\":1827:1829   */\n      0x40\n        /* \"#utility.yul\":1816:1825   */\n      dup5\n        /* \"#utility.yul\":1812:1830   */\n      add\n        /* \"#utility.yul\":1799:1831   */\n      calldataload\n        /* \"#utility.yul\":1789:1831   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1837   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2031:2217   */\n    tag_46:\n        /* \"#utility.yul\":2090:2096   */\n      0x00\n        /* \"#utility.yul\":2143:2145   */\n      0x20\n        /* \"#utility.yul\":2131:2140   */\n      dup3\n        /* \"#utility.yul\":2122:2129   */\n      dup5\n        /* \"#utility.yul\":2118:2141   */\n      sub\n        /* \"#utility.yul\":2114:2146   */\n      slt\n        /* \"#utility.yul\":2111:2163   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2159:2160   */\n      0x00\n        /* \"#utility.yul\":2156:2157   */\n      dup1\n        /* \"#utility.yul\":2149:2161   */\n      revert\n        /* \"#utility.yul\":2111:2163   */\n    tag_161:\n        /* \"#utility.yul\":2182:2211   */\n      tag_162\n        /* \"#utility.yul\":2201:2210   */\n      dup3\n        /* \"#utility.yul\":2182:2211   */\n      tag_140\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2172:2211   */\n      swap4\n        /* \"#utility.yul\":2031:2217   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2482   */\n    tag_62:\n        /* \"#utility.yul\":2290:2296   */\n      0x00\n        /* \"#utility.yul\":2298:2304   */\n      dup1\n        /* \"#utility.yul\":2351:2353   */\n      0x40\n        /* \"#utility.yul\":2339:2348   */\n      dup4\n        /* \"#utility.yul\":2330:2337   */\n      dup6\n        /* \"#utility.yul\":2326:2349   */\n      sub\n        /* \"#utility.yul\":2322:2354   */\n      slt\n        /* \"#utility.yul\":2319:2371   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      dup1\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2319:2371   */\n    tag_164:\n        /* \"#utility.yul\":2390:2419   */\n      tag_165\n        /* \"#utility.yul\":2409:2418   */\n      dup4\n        /* \"#utility.yul\":2390:2419   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2380:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2438:2476   */\n      tag_166\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2461:2470   */\n      dup5\n        /* \"#utility.yul\":2457:2475   */\n      add\n        /* \"#utility.yul\":2438:2476   */\n      tag_140\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2428:2476   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2482   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2487:2924   */\n    tag_67:\n        /* \"#utility.yul\":2566:2567   */\n      0x01\n        /* \"#utility.yul\":2562:2574   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2609:2621   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2630:2691   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2684:2688   */\n      0x7f\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2672:2689   */\n      and\n        /* \"#utility.yul\":2662:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2630:2691   */\n    tag_168:\n        /* \"#utility.yul\":2737:2739   */\n      0x20\n        /* \"#utility.yul\":2729:2735   */\n      dup3\n        /* \"#utility.yul\":2726:2740   */\n      lt\n        /* \"#utility.yul\":2706:2724   */\n      dup2\n        /* \"#utility.yul\":2703:2741   */\n      eq\n        /* \"#utility.yul\":2700:2918   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2774:2851   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2771:2772   */\n      0x00\n        /* \"#utility.yul\":2764:2852   */\n      mstore\n        /* \"#utility.yul\":2875:2879   */\n      0x22\n        /* \"#utility.yul\":2872:2873   */\n      0x04\n        /* \"#utility.yul\":2865:2880   */\n      mstore\n        /* \"#utility.yul\":2903:2907   */\n      0x24\n        /* \"#utility.yul\":2900:2901   */\n      0x00\n        /* \"#utility.yul\":2893:2908   */\n      revert\n        /* \"#utility.yul\":2700:2918   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2487:2924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3338:3522   */\n    tag_141:\n        /* \"#utility.yul\":3390:3467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3380:3468   */\n      mstore\n        /* \"#utility.yul\":3487:3491   */\n      0x11\n        /* \"#utility.yul\":3484:3485   */\n      0x04\n        /* \"#utility.yul\":3477:3492   */\n      mstore\n        /* \"#utility.yul\":3511:3515   */\n      0x24\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3501:3516   */\n      revert\n        /* \"#utility.yul\":3527:3652   */\n    tag_88:\n        /* \"#utility.yul\":3567:3571   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      dup3\n        /* \"#utility.yul\":3592:3593   */\n      dup3\n        /* \"#utility.yul\":3589:3597   */\n      lt\n        /* \"#utility.yul\":3586:3620   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":3600:3618   */\n      tag_174\n      tag_141\n      jump\t// in\n    tag_174:\n      pop\n        /* \"#utility.yul\":3637:3646   */\n      sub\n      swap1\n        /* \"#utility.yul\":3527:3652   */\n      jump\t// out\n        /* \"#utility.yul\":3657:3785   */\n    tag_95:\n        /* \"#utility.yul\":3697:3700   */\n      0x00\n        /* \"#utility.yul\":3728:3729   */\n      dup3\n        /* \"#utility.yul\":3724:3730   */\n      not\n        /* \"#utility.yul\":3721:3722   */\n      dup3\n        /* \"#utility.yul\":3718:3731   */\n      gt\n        /* \"#utility.yul\":3715:3754   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":3734:3752   */\n      tag_177\n      tag_141\n      jump\t// in\n    tag_177:\n      pop\n        /* \"#utility.yul\":3770:3779   */\n      add\n      swap1\n        /* \"#utility.yul\":3657:3785   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c73c861411783372479fe6ec7453f60908d19d90425b59a760f805d76d2ebb6764736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_632": {
									"entryPoint": null,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_381": {
									"entryPoint": 171,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_68": {
									"entryPoint": 166,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4339:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:4"
															},
															"nodeType": "YulIf",
															"src": "353:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:4"
															},
															"nodeType": "YulIf",
															"src": "536:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:4"
															},
															"nodeType": "YulIf",
															"src": "698:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:4",
																"statements": []
															},
															"src": "779:133:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:4"
															},
															"nodeType": "YulIf",
															"src": "921:80:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:885:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:4"
															},
															"nodeType": "YulIf",
															"src": "1164:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:4"
															},
															"nodeType": "YulIf",
															"src": "1301:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:4"
															},
															"nodeType": "YulIf",
															"src": "1474:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:4",
														"type": ""
													}
												],
												"src": "1036:562:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1652:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1659:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1664:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1655:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1645:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1692:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1695:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1685:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1716:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1719:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1603:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1799:358:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1809:16:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1824:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1813:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1834:16:4",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "1843:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1834:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1859:13:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "1867:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "1859:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1923:228:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1968:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "1970:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1970:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1970:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1943:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1957:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1953:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1953:6:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "1961:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "1949:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1949:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1940:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:27:4"
																		},
																		"nodeType": "YulIf",
																		"src": "1937:53:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2029:29:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2031:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "2044:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "2051:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "2040:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2040:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "2031:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2010:8:4"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2020:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2006:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2006:22:4"
																		},
																		"nodeType": "YulIf",
																		"src": "2003:55:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2071:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2083:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2089:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "2079:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2079:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "2071:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2107:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2123:7:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2132:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "2119:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2119:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "2107:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1892:8:4"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1902:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1889:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:21:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:3:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1885:3:4",
																"statements": []
															},
															"src": "1881:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "1763:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1770:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1783:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1790:4:4",
														"type": ""
													}
												],
												"src": "1735:422:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2221:747:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2259:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2273:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2282:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2273:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2296:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2241:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2234:16:4"
															},
															"nodeType": "YulIf",
															"src": "2231:80:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2344:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2358:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2367:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2358:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2381:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2330:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:12:4"
															},
															"nodeType": "YulIf",
															"src": "2320:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2432:52:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "2446:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2455:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2446:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2469:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2425:59:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2430:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2500:123:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2535:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "2537:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2537:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2537:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2520:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2530:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "2517:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2517:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "2514:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "2570:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "2583:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2593:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2579:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2579:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2570:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2608:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2493:130:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2498:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "2412:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "2405:218:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2721:70:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2735:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2748:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2754:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "2744:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2744:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2735:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2776:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2645:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2651:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2642:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2642:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2659:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2669:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2656:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2656:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "2682:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2688:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2679:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2679:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "2697:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2707:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2694:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2694:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2635:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:77:4"
															},
															"nodeType": "YulIf",
															"src": "2632:159:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2848:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "2823:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2804:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "2813:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2902:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2904:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2872:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2889:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2885:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2885:6:4"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "2881:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2881:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:32:4"
															},
															"nodeType": "YulIf",
															"src": "2866:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2933:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2946:7:4"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "2955:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2942:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2933:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2192:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2198:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2211:5:4",
														"type": ""
													}
												],
												"src": "2162:806:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3043:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3053:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3089:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "3062:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3053:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3014:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3020:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3033:5:4",
														"type": ""
													}
												],
												"src": "2973:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3161:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3220:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3222:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3222:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3222:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3192:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3185:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3185:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3178:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3200:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3211:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3207:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3207:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3215:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3203:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3203:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3197:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3197:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:45:4"
															},
															"nodeType": "YulIf",
															"src": "3171:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3266:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3269:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3262:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3262:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3251:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3140:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3143:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3149:7:4",
														"type": ""
													}
												],
												"src": "3109:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3456:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3473:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3466:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3523:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3496:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3546:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3557:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3542:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3542:18:4"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3562:33:4",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:61:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3535:61:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3605:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3613:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3605:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3433:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3447:4:4",
														"type": ""
													}
												],
												"src": "3282:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3690:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3717:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3719:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3719:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3706:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3713:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3709:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3709:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3703:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:13:4"
															},
															"nodeType": "YulIf",
															"src": "3700:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3748:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3759:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3762:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3673:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3676:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3682:3:4",
														"type": ""
													}
												],
												"src": "3642:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3876:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3886:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3898:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3909:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3894:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3886:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3928:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3939:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3921:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3921:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3921:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3845:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3856:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3867:4:4",
														"type": ""
													}
												],
												"src": "3775:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4012:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4022:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4039:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4032:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4053:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4083:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4057:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4130:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4132:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4146:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4154:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4142:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4142:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4110:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:26:4"
															},
															"nodeType": "YulIf",
															"src": "4100:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4220:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4241:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4248:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4253:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4244:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4244:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4234:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4234:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4234:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4285:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4288:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4278:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4278:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4278:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4313:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4316:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4306:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4306:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4306:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4176:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4199:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4207:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4196:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4173:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:38:4"
															},
															"nodeType": "YulIf",
															"src": "4170:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3992:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4001:6:4",
														"type": ""
													}
												],
												"src": "3957:380:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10A7 CODESIZE SUB DUP1 PUSH3 0x10A7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x306 JUMP JUMPDEST DUP2 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x4D SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x193 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x63 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x193 JUMP JUMPDEST POP POP POP PUSH3 0x9E CALLER PUSH3 0x7B PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x8B SWAP1 PUSH1 0xFF AND PUSH1 0xA PUSH3 0x485 JUMP JUMPDEST PUSH3 0x98 SWAP1 PUSH1 0x64 PUSH3 0x49A JUMP JUMPDEST PUSH3 0xAB JUMP JUMPDEST POP POP PUSH3 0x514 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x11A SWAP2 SWAP1 PUSH3 0x4BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x149 SWAP1 DUP5 SWAP1 PUSH3 0x4BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1A1 SWAP1 PUSH3 0x4D7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1C5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x210 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1E0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x210 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x210 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x210 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1F3 JUMP JUMPDEST POP PUSH3 0x21E SWAP3 SWAP2 POP PUSH3 0x222 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x21E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x223 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27E PUSH3 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2A9 JUMPI PUSH3 0x2A9 PUSH3 0x239 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2EA JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x2FC JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x340 DUP7 DUP4 DUP8 ADD PUSH3 0x24F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x366 DUP6 DUP3 DUP7 ADD PUSH3 0x24F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3C7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3AB JUMPI PUSH3 0x3AB PUSH3 0x370 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3B9 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x38B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3E0 JUMPI POP PUSH1 0x1 PUSH3 0x47F JUMP JUMPDEST DUP2 PUSH3 0x3EF JUMPI POP PUSH1 0x0 PUSH3 0x47F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x408 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x413 JUMPI PUSH3 0x433 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x47F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x427 JUMPI PUSH3 0x427 PUSH3 0x370 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x47F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x458 JUMPI POP DUP2 DUP2 EXP PUSH3 0x47F JUMP JUMPDEST PUSH3 0x464 DUP4 DUP4 PUSH3 0x386 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x47B JUMPI PUSH3 0x47B PUSH3 0x370 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x493 DUP4 DUP4 PUSH3 0x3CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x4B7 JUMPI PUSH3 0x4B7 PUSH3 0x370 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x4D2 JUMPI PUSH3 0x4D2 PUSH3 0x370 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4EC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x50E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP1 PUSH3 0x524 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP6 CALLER PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x29F SWAP2 DUP6 SWAP1 PUSH2 0x38A SWAP1 DUP7 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x4BD CALLER DUP6 PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x88D DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D0 SWAP1 DUP5 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x936 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x955 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA28 DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA36 PUSH1 0x20 DUP6 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP3 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA84 DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 PUSH1 0x20 DUP5 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xAE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB30 PUSH2 0xAEF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xAEF JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXTCODECOPY DUP7 EQ GT PUSH25 0x3372479FE6EC7453F60908D19D90425B59A760F805D76D2EBB PUSH8 0x64736F6C63430008 0xC STOP CALLER ",
							"sourceMap": "173:321:3:-:0;;;206:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:13:0;;266:4:3;;272:6;;1909:13:0;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1932:17:0;;;;:7;;:17;;;;;:::i;:::-;;1842:114;;436:47:3::1;442:10;471;:8;;;:10;;:::i;:::-;460:22;::::0;466:16:::1;;460:2;:22;:::i;:::-;454:28;::::0;:3:::1;:28;:::i;:::-;436:5;:47::i;:::-;206:285:::0;;173:321;;2940:82:0;3013:2;;2940:82::o;7940:330::-;-1:-1:-1;;;;;8023:21:0;;8015:65;;;;-1:-1:-1;;;8015:65:0;;3484:2:4;8015:65:0;;;3466:21:4;3523:2;3503:18;;;3496:30;3562:33;3542:18;;;3535:61;3613:18;;8015:65:0;;;;;;;;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8183:18:0;;:9;:18;;;;;;;;;;:28;;8205:6;;8183:9;:28;;8205:6;;8183:28;:::i;:::-;;;;-1:-1:-1;;8226:37:0;;3921:25:4;;;-1:-1:-1;;;;;8226:37:0;;;8243:1;;8226:37;;3909:2:4;3894:18;8226:37:0;;;;;;;7940:330;;:::o;173:321:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;173:321:3;;;-1:-1:-1;173:321:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:4:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:4;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:127::-;1664:10;1659:3;1655:20;1652:1;1645:31;1695:4;1692:1;1685:15;1719:4;1716:1;1709:15;1735:422;1824:1;1867:5;1824:1;1881:270;1902:7;1892:8;1889:21;1881:270;;;1961:4;1957:1;1953:6;1949:17;1943:4;1940:27;1937:53;;;1970:18;;:::i;:::-;2020:7;2010:8;2006:22;2003:55;;;2040:16;;;;2003:55;2119:22;;;;2079:15;;;;1881:270;;;1885:3;1735:422;;;;;:::o;2162:806::-;2211:5;2241:8;2231:80;;-1:-1:-1;2282:1:4;2296:5;;2231:80;2330:4;2320:76;;-1:-1:-1;2367:1:4;2381:5;;2320:76;2412:4;2430:1;2425:59;;;;2498:1;2493:130;;;;2405:218;;2425:59;2455:1;2446:10;;2469:5;;;2493:130;2530:3;2520:8;2517:17;2514:43;;;2537:18;;:::i;:::-;-1:-1:-1;;2593:1:4;2579:16;;2608:5;;2405:218;;2707:2;2697:8;2694:16;2688:3;2682:4;2679:13;2675:36;2669:2;2659:8;2656:16;2651:2;2645:4;2642:12;2638:35;2635:77;2632:159;;;-1:-1:-1;2744:19:4;;;2776:5;;2632:159;2823:34;2848:8;2842:4;2823:34;:::i;:::-;2893:6;2889:1;2885:6;2881:19;2872:7;2869:32;2866:58;;;2904:18;;:::i;:::-;2942:20;;-1:-1:-1;2162:806:4;;;;;:::o;2973:131::-;3033:5;3062:36;3089:8;3083:4;3062:36;:::i;:::-;3053:45;2973:131;-1:-1:-1;;;2973:131:4:o;3109:168::-;3149:7;3215:1;3211;3207:6;3203:14;3200:1;3197:21;3192:1;3185:9;3178:17;3174:45;3171:71;;;3222:18;;:::i;:::-;-1:-1:-1;3262:9:4;;3109:168::o;3642:128::-;3682:3;3713:1;3709:6;3706:1;3703:13;3700:39;;;3719:18;;:::i;:::-;-1:-1:-1;3755:9:4;;3642:128::o;3957:380::-;4036:1;4032:12;;;;4079;;;4100:61;;4154:4;4146:6;4142:17;4132:27;;4100:61;4207:2;4199:6;4196:14;4176:18;4173:38;4170:161;;;4253:10;4248:3;4244:20;4241:1;4234:31;4288:4;4285:1;4278:15;4316:4;4313:1;4306:15;4170:161;;3957:380;;;:::o;:::-;173:321:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_488": {
									"entryPoint": 1236,
									"id": 488,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_589": {
									"entryPoint": null,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_334": {
									"entryPoint": 1671,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_152": {
									"entryPoint": 658,
									"id": 152,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_264": {
									"entryPoint": 1005,
									"id": 264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_226": {
									"entryPoint": 922,
									"id": 226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_50": {
									"entryPoint": 512,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_59": {
									"entryPoint": 990,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_78": {
									"entryPoint": null,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 680,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_113": {
									"entryPoint": 1223,
									"id": 113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6218:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:535:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:4",
																"statements": []
															},
															"src": "294:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:4"
															},
															"nodeType": "YulIf",
															"src": "443:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:121:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "591:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:88:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:104:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "661:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:113:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:4",
														"type": ""
													}
												],
												"src": "14:656:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "724:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "734:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "743:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "849:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "858:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "861:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "851:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "796:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "803:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "782:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:73:4"
															},
															"nodeType": "YulIf",
															"src": "772:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "703:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "714:5:4",
														"type": ""
													}
												],
												"src": "675:196:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1009:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1021:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1011:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1011:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "984:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "980:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "980:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1005:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "976:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:32:4"
															},
															"nodeType": "YulIf",
															"src": "973:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1034:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1044:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1082:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1109:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1120:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1105:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1092:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1082:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "921:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "932:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "944:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "952:6:4",
														"type": ""
													}
												],
												"src": "876:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1230:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1240:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1252:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1263:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1240:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1282:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1300:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1300:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1293:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1275:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1210:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1221:4:4",
														"type": ""
													}
												],
												"src": "1135:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1438:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1438:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1480:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1473:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1397:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1327:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1659:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1671:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1661:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1655:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:32:4"
															},
															"nodeType": "YulIf",
															"src": "1623:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1684:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1713:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1694:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1694:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1732:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1765:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1776:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1761:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1742:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1789:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1816:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1827:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1812:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1799:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1563:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1574:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1586:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1594:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1602:6:4",
														"type": ""
													}
												],
												"src": "1509:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1949:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1961:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1957:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1949:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1991:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2006:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2014:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1984:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1908:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1919:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1930:4:4",
														"type": ""
													}
												],
												"src": "1842:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2147:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2156:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2159:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2149:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2149:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2149:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2122:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2118:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2118:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2143:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:32:4"
															},
															"nodeType": "YulIf",
															"src": "2111:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2172:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2182:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2172:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2067:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2078:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2090:6:4",
														"type": ""
													}
												],
												"src": "2031:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2355:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2330:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2339:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2351:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:32:4"
															},
															"nodeType": "YulIf",
															"src": "2319:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2380:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2409:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2390:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2380:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2428:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2461:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2438:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2267:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2278:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2290:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2298:6:4",
														"type": ""
													}
												],
												"src": "2222:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2542:382:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2552:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2569:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2583:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2613:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2587:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2660:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2662:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2676:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2672:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2672:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2662:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2640:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:26:4"
															},
															"nodeType": "YulIf",
															"src": "2630:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2750:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2771:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2774:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2764:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:88:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2875:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2865:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2865:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2865:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2903:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2893:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2893:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2893:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2706:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2737:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2726:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2726:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2703:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:4"
															},
															"nodeType": "YulIf",
															"src": "2700:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2522:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2531:6:4",
														"type": ""
													}
												],
												"src": "2487:437:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3103:230:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3113:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3154:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3165:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3143:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3209:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3275:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:18:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3280:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3253:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3253:38:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3300:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3300:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3080:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3094:4:4",
														"type": ""
													}
												],
												"src": "2929:404:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3390:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3380:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3487:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3477:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3477:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3501:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3338:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3598:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3600:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3600:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3592:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3595:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3589:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:8:4"
															},
															"nodeType": "YulIf",
															"src": "3586:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3629:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3641:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3644:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3558:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3561:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3567:4:4",
														"type": ""
													}
												],
												"src": "3527:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3705:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3732:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3734:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3734:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3721:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3728:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3724:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3724:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3718:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:13:4"
															},
															"nodeType": "YulIf",
															"src": "3715:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3763:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3774:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3777:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3763:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3688:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3691:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3697:3:4",
														"type": ""
													}
												],
												"src": "3657:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3992:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3974:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3974:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3974:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4031:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4065:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:18:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4070:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4043:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4125:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4136:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4121:18:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4141:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4158:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4170:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4181:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4158:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3941:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3955:4:4",
														"type": ""
													}
												],
												"src": "3790:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4370:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4387:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4437:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4476:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4542:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4527:18:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4547:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4563:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4575:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4563:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4347:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4361:4:4",
														"type": ""
													}
												],
												"src": "4196:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4785:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4785:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4785:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4865:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4876:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4881:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4936:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4947:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4932:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4932:18:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4952:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4966:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4978:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4966:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4752:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4766:4:4",
														"type": ""
													}
												],
												"src": "4601:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5178:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5195:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5229:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5240:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5225:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5245:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5218:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5268:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5279:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5284:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5257:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5257:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5339:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5350:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:18:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5355:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5328:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5372:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5384:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5395:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5380:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5372:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5155:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5169:4:4",
														"type": ""
													}
												],
												"src": "5004:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5584:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5594:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5635:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5646:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5631:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5631:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5651:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5674:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5685:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5690:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5663:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5745:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5756:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5741:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5761:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5734:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5776:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5799:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5784:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5776:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5561:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5575:4:4",
														"type": ""
													}
												],
												"src": "5410:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5988:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6005:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6016:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5998:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5998:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5998:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6039:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6050:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6035:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6078:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6089:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6074:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6094:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6067:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6067:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6149:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6160:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6145:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6145:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6165:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6195:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6206:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6191:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6191:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6183:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5965:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5979:4:4",
														"type": ""
													}
												],
												"src": "5814:402:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e39190610944565b60405180910390f35b6100ff6100fa3660046109e0565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a0a565b6102a8565b604051601281526020016100e3565b6100ff6101513660046109e0565b61039a565b610113610164366004610a46565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d66103de565b6100ff6101a23660046109e0565b6103ed565b6100ff6101b53660046109e0565b6104c7565b6101136101c8366004610a68565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610a9b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610a9b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b600061029f3384846104d4565b50600192915050565b60006102b5848484610687565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203384529091529020548281101561037b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61038f853361038a8685610b1e565b6104d4565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161029f91859061038a908690610b35565b60606004805461020f90610a9b565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156104ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610372565b6104bd338561038a8685610b1e565b5060019392505050565b600061029f338484610687565b73ffffffffffffffffffffffffffffffffffffffff8316610576576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff8216610619576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff82166107cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610372565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610372565b61088d8282610b1e565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526020819052604080822093909355908516815290812080548492906108d0908490610b35565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093691815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561097157858101830151858201604001528201610955565b81811115610983576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109db57600080fd5b919050565b600080604083850312156109f357600080fd5b6109fc836109b7565b946020939093013593505050565b600080600060608486031215610a1f57600080fd5b610a28846109b7565b9250610a36602085016109b7565b9150604084013590509250925092565b600060208284031215610a5857600080fd5b610a61826109b7565b9392505050565b60008060408385031215610a7b57600080fd5b610a84836109b7565b9150610a92602084016109b7565b90509250929050565b600181811c90821680610aaf57607f821691505b60208210811415610ae9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610b3057610b30610aef565b500390565b60008219821115610b4857610b48610aef565b50019056fea2646970667358221220c73c861411783372479fe6ec7453f60908d19d90425b59a760f805d76d2ebb6764736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0xFA CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x113 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E0 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0x113 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xA68 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xA9B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x38F DUP6 CALLER PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x29F SWAP2 DUP6 SWAP1 PUSH2 0x38A SWAP1 DUP7 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xA9B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x4BD CALLER DUP6 PUSH2 0x38A DUP7 DUP6 PUSH2 0xB1E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F CALLER DUP5 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x88D DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8D0 SWAP1 DUP5 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x936 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x955 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FC DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA28 DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 POP PUSH2 0xA36 PUSH1 0x20 DUP6 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA61 DUP3 PUSH2 0x9B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA84 DUP4 PUSH2 0x9B7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA92 PUSH1 0x20 DUP5 ADD PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xAAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xAE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB30 PUSH2 0xAEF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0xAEF JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 EXTCODECOPY DUP7 EQ GT PUSH25 0x3372479FE6EC7453F60908D19D90425B59A760F805D76D2EBB PUSH8 0x64736F6C63430008 0xC STOP CALLER ",
							"sourceMap": "173:321:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;:::i;:::-;;:::i;:::-;;;1300:14:4;;1293:22;1275:41;;1263:2;1248:18;4091:166:0;1135:187:4;3082:106:0;3169:12;;3082:106;;;1473:25:4;;;1461:2;1446:18;3082:106:0;1327:177:4;4724:414:0;;;;;;:::i;:::-;;:::i;2940:82::-;;;3013:2;1984:36:4;;1972:2;1957:18;2940:82:0;1842:184:4;5533:212:0;;;;;;:::i;:::-;;:::i;3246:125::-;;;;;;:::i;:::-;3346:18;;3320:7;3346:18;;;;;;;;;;;;3246:125;2223:93;;;:::i;6232:371::-;;;;;;:::i;:::-;;:::i;3574:172::-;;;;;;:::i;:::-;;:::i;3804:149::-;;;;;;:::i;:::-;3919:18;;;;3893:7;3919:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3804:149;2021:89;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;665:10:2;4213:7:0;4222:6;4190:8;:39::i;:::-;-1:-1:-1;4246:4:0;4091:166;;;;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;4920:19;;;4893:24;4920:19;;;:11;:19;;;;;;;;665:10:2;4920:33:0;;;;;;;;4971:26;;;;4963:79;;;;;;;3131:2:4;4963:79:0;;;3113:21:4;3170:2;3150:18;;;3143:30;3209:34;3189:18;;;3182:62;3280:10;3260:18;;;3253:38;3308:19;;4963:79:0;;;;;;;;;5052:57;5061:6;665:10:2;5083:25:0;5102:6;5083:16;:25;:::i;:::-;5052:8;:57::i;:::-;-1:-1:-1;5127:4:0;;4724:414;-1:-1:-1;;;;4724:414:0:o;5533:212::-;665:10:2;5621:4:0;5669:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;5621:4;;5637:80;;5660:7;;5669:47;;5706:10;;5669:47;:::i;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;6232:371::-;665:10:2;6325:4:0;6368:25;;;:11;:25;;;;;;;;;:34;;;;;;;;;;6420:35;;;;6412:85;;;;;;;3992:2:4;6412:85:0;;;3974:21:4;4031:2;4011:18;;;4004:30;4070:34;4050:18;;;4043:62;4141:7;4121:18;;;4114:35;4166:19;;6412:85:0;3790:401:4;6412:85:0;6507:67;665:10:2;6530:7:0;6539:34;6558:15;6539:16;:34;:::i;6507:67::-;-1:-1:-1;6592:4:0;;6232:371;-1:-1:-1;;;6232:371:0:o;3574:172::-;3660:4;3676:42;665:10:2;3700:9:0;3711:6;3676:9;:42::i;9496:340::-;9597:19;;;9589:68;;;;;;;4398:2:4;9589:68:0;;;4380:21:4;4437:2;4417:18;;;4410:30;4476:34;4456:18;;;4449:62;4547:6;4527:18;;;4520:34;4571:19;;9589:68:0;4196:400:4;9589:68:0;9675:21;;;9667:68;;;;;;;4803:2:4;9667:68:0;;;4785:21:4;4842:2;4822:18;;;4815:30;4881:34;4861:18;;;4854:62;4952:4;4932:18;;;4925:32;4974:19;;9667:68:0;4601:398:4;9667:68:0;9746:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9797:32;;1473:25:4;;;9797:32:0;;1446:18:4;9797:32:0;;;;;;;9496:340;;;:::o;7077:592::-;7182:20;;;7174:70;;;;;;;5206:2:4;7174:70:0;;;5188:21:4;5245:2;5225:18;;;5218:30;5284:34;5264:18;;;5257:62;5355:7;5335:18;;;5328:35;5380:19;;7174:70:0;5004:401:4;7174:70:0;7262:23;;;7254:71;;;;;;;5612:2:4;7254:71:0;;;5594:21:4;5651:2;5631:18;;;5624:30;5690:34;5670:18;;;5663:62;5761:5;5741:18;;;5734:33;5784:19;;7254:71:0;5410:399:4;7254:71:0;7418:17;;;7394:21;7418:17;;;;;;;;;;;7453:23;;;;7445:74;;;;;;;6016:2:4;7445:74:0;;;5998:21:4;6055:2;6035:18;;;6028:30;6094:34;6074:18;;;6067:62;6165:8;6145:18;;;6138:36;6191:19;;7445:74:0;5814:402:4;7445:74:0;7549:22;7565:6;7549:13;:22;:::i;:::-;7529:17;;;;:9;:17;;;;;;;;;;;:42;;;;7581:20;;;;;;;;:30;;7605:6;;7529:9;7581:30;;7605:6;;7581:30;:::i;:::-;;;;;;;;7644:9;7627:35;;7636:6;7627:35;;;7655:6;7627:35;;;;1473:25:4;;1461:2;1446:18;;1327:177;7627:35:0;;;;;;;;7164:505;7077:592;;;:::o;14:656:4:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;586:2:4;574:15;591:66;570:88;555:104;;;;661:2;551:113;;14:656;-1:-1:-1;;;14:656:4:o;675:196::-;743:20;;803:42;792:54;;782:65;;772:93;;861:1;858;851:12;772:93;675:196;;;:::o;876:254::-;944:6;952;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1044:29;1063:9;1044:29;:::i;:::-;1034:39;1120:2;1105:18;;;;1092:32;;-1:-1:-1;;;876:254:4:o;1509:328::-;1586:6;1594;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;;1742:38;1776:2;1765:9;1761:18;1742:38;:::i;:::-;1732:48;;1827:2;1816:9;1812:18;1799:32;1789:42;;1509:328;;;;;:::o;2031:186::-;2090:6;2143:2;2131:9;2122:7;2118:23;2114:32;2111:52;;;2159:1;2156;2149:12;2111:52;2182:29;2201:9;2182:29;:::i;:::-;2172:39;2031:186;-1:-1:-1;;;2031:186:4:o;2222:260::-;2290:6;2298;2351:2;2339:9;2330:7;2326:23;2322:32;2319:52;;;2367:1;2364;2357:12;2319:52;2390:29;2409:9;2390:29;:::i;:::-;2380:39;;2438:38;2472:2;2461:9;2457:18;2438:38;:::i;:::-;2428:48;;2222:260;;;;;:::o;2487:437::-;2566:1;2562:12;;;;2609;;;2630:61;;2684:4;2676:6;2672:17;2662:27;;2630:61;2737:2;2729:6;2726:14;2706:18;2703:38;2700:218;;;2774:77;2771:1;2764:88;2875:4;2872:1;2865:15;2903:4;2900:1;2893:15;2700:218;;2487:437;;;:::o;3338:184::-;3390:77;3387:1;3380:88;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3527:125;3567:4;3595:1;3592;3589:8;3586:34;;;3600:18;;:::i;:::-;-1:-1:-1;3637:9:4;;3527:125::o;3657:128::-;3697:3;3728:1;3724:6;3721:1;3718:13;3715:39;;;3734:18;;:::i;:::-;-1:-1:-1;3770:9:4;;3657:128::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "589400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24594",
								"balanceOf(address)": "2561",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "26908",
								"increaseAllowance(address,uint256)": "26897",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "51189",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 206,
									"end": 491,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 266,
									"end": 270,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 266,
									"end": 270,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 272,
									"end": 278,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1932,
									"end": 1949,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1842,
									"end": 1956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 436,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 442,
									"end": 452,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 471,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 471,
									"end": 479,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 471,
									"end": 479,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 479,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 471,
									"end": 481,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 471,
									"end": 481,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 471,
									"end": 481,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 471,
									"end": 481,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 471,
									"end": 481,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 460,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 460,
									"end": 482,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 466,
									"end": 482,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 466,
									"end": 482,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 460,
									"end": 462,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 460,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 460,
									"end": 482,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 482,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 460,
									"end": 482,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 454,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 454,
									"end": 482,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 454,
									"end": 457,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 454,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 454,
									"end": 482,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 454,
									"end": 482,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 454,
									"end": 482,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 436,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 436,
									"end": 483,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 436,
									"end": 483,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 436,
									"end": 483,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 206,
									"end": 491,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2940,
									"end": 3022,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2940,
									"end": 3022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3013,
									"end": 3015,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3013,
									"end": 3015,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2940,
									"end": 3022,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7940,
									"end": 8270,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 7940,
									"end": 8270,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8023,
									"end": 8044,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8023,
									"end": 8044,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3484,
									"end": 3486,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3466,
									"end": 3487,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3525,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3503,
									"end": 3521,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3503,
									"end": 3521,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3503,
									"end": 3521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3496,
									"end": 3526,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3562,
									"end": 3595,
									"name": "PUSH",
									"source": 4,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3542,
									"end": 3560,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3535,
									"end": 3596,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3613,
									"end": 3631,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 3613,
									"end": 3631,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 8015,
									"end": 8080,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8167,
									"end": 8173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8163,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8151,
									"end": 8163,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8151,
									"end": 8173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8192,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8201,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8205,
									"end": 8211,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8205,
									"end": 8211,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8205,
									"end": 8211,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8205,
									"end": 8211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8183,
									"end": 8211,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3921,
									"end": 3946,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3921,
									"end": 3946,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3921,
									"end": 3946,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8243,
									"end": 8244,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8243,
									"end": 8244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3909,
									"end": 3911,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3894,
									"end": 3912,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8226,
									"end": 8263,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7940,
									"end": 8270,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 4
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1730,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1603,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1664,
									"end": 1674,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1655,
									"end": 1675,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1652,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 1676,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1695,
									"end": 1699,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1685,
									"end": 1700,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1723,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1709,
									"end": 1724,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1824,
									"end": 1825,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1867,
									"end": 1872,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1824,
									"end": 1825,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1902,
									"end": 1909,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1892,
									"end": 1900,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1910,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1965,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1957,
									"end": 1958,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1953,
									"end": 1959,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1949,
									"end": 1966,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1943,
									"end": 1947,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1940,
									"end": 1967,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1937,
									"end": 1990,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1937,
									"end": 1990,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 1937,
									"end": 1990,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2020,
									"end": 2027,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2010,
									"end": 2018,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2006,
									"end": 2028,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2058,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2003,
									"end": 2058,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2056,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2058,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2003,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2119,
									"end": 2141,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2119,
									"end": 2141,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2119,
									"end": 2141,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2119,
									"end": 2141,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2079,
									"end": 2094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2079,
									"end": 2094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2079,
									"end": 2094,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2079,
									"end": 2094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1881,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1735,
									"end": 2157,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2249,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2231,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2231,
									"end": 2311,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2282,
									"end": 2283,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2296,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2296,
									"end": 2301,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2231,
									"end": 2311,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2231,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2330,
									"end": 2334,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2381,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2381,
									"end": 2386,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2320,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2412,
									"end": 2416,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2430,
									"end": 2431,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2499,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2405,
									"end": 2623,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2405,
									"end": 2623,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2425,
									"end": 2484,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2455,
									"end": 2456,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2446,
									"end": 2456,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2446,
									"end": 2456,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2469,
									"end": 2474,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2469,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2469,
									"end": 2474,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2493,
									"end": 2623,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2530,
									"end": 2533,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 2520,
									"end": 2528,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2534,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2557,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2557,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 2514,
									"end": 2557,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2537,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 2537,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2537,
									"end": 2555,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2537,
									"end": 2555,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 2537,
									"end": 2555,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2593,
									"end": 2594,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2579,
									"end": 2595,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2595,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2608,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2608,
									"end": 2613,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2405,
									"end": 2623,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2405,
									"end": 2623,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2405,
									"end": 2623,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2707,
									"end": 2709,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2697,
									"end": 2705,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2710,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2688,
									"end": 2691,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 2682,
									"end": 2686,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2679,
									"end": 2692,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2675,
									"end": 2711,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2669,
									"end": 2671,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 2659,
									"end": 2667,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2672,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2651,
									"end": 2653,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2642,
									"end": 2654,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2638,
									"end": 2673,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2635,
									"end": 2712,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2632,
									"end": 2791,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2632,
									"end": 2791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 2632,
									"end": 2791,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2744,
									"end": 2763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2744,
									"end": 2763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2744,
									"end": 2763,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2776,
									"end": 2781,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2776,
									"end": 2781,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2632,
									"end": 2791,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 2632,
									"end": 2791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 2848,
									"end": 2856,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2842,
									"end": 2846,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 2823,
									"end": 2857,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2823,
									"end": 2857,
									"name": "tag",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 2823,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2893,
									"end": 2899,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 2890,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2885,
									"end": 2891,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2881,
									"end": 2900,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2872,
									"end": 2879,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2869,
									"end": 2901,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2866,
									"end": 2924,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2866,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 2866,
									"end": 2924,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 2904,
									"end": 2922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2942,
									"end": 2962,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2942,
									"end": 2962,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2968,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2973,
									"end": 3104,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2973,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3033,
									"end": 3038,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3062,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 3089,
									"end": 3097,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3062,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 3062,
									"end": 3098,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3062,
									"end": 3098,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 3062,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3053,
									"end": 3098,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 2973,
									"end": 3104,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2973,
									"end": 3104,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3109,
									"end": 3277,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 3109,
									"end": 3277,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3149,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3215,
									"end": 3216,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3211,
									"end": 3212,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3207,
									"end": 3213,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3203,
									"end": 3217,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3200,
									"end": 3201,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3192,
									"end": 3193,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3185,
									"end": 3194,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3178,
									"end": 3195,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3174,
									"end": 3219,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3171,
									"end": 3242,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3171,
									"end": 3242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3171,
									"end": 3242,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3222,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3222,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 3222,
									"end": 3240,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3222,
									"end": 3240,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3222,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3262,
									"end": 3271,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3262,
									"end": 3271,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3109,
									"end": 3277,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3642,
									"end": 3770,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3642,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3682,
									"end": 3685,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3713,
									"end": 3714,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3709,
									"end": 3715,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3706,
									"end": 3707,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3703,
									"end": 3716,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3700,
									"end": 3739,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3700,
									"end": 3739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 3700,
									"end": 3739,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3719,
									"end": 3737,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 3719,
									"end": 3737,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 3719,
									"end": 3737,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3719,
									"end": 3737,
									"name": "tag",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 3719,
									"end": 3737,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3642,
									"end": 3770,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4036,
									"end": 4037,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4032,
									"end": 4044,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4032,
									"end": 4044,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4032,
									"end": 4044,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 4032,
									"end": 4044,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4079,
									"end": 4091,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4079,
									"end": 4091,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4079,
									"end": 4091,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4100,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 4100,
									"end": 4161,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4154,
									"end": 4158,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 4146,
									"end": 4152,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4142,
									"end": 4159,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4132,
									"end": 4159,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4132,
									"end": 4159,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4100,
									"end": 4161,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 4100,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4207,
									"end": 4209,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4199,
									"end": 4205,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4196,
									"end": 4210,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4176,
									"end": 4194,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4253,
									"end": 4263,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 4244,
									"end": 4264,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4241,
									"end": 4242,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4234,
									"end": 4265,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4288,
									"end": 4292,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 4285,
									"end": 4286,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4278,
									"end": 4293,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4316,
									"end": 4320,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4313,
									"end": 4314,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4306,
									"end": 4321,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4170,
									"end": 4331,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 3957,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 173,
									"end": 494,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 494,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c73c861411783372479fe6ec7453f60908d19d90425b59a760f805d76d2ebb6764736f6c634300080c0033",
									".code": [
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 494,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 494,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1300,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1315,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1135,
											"end": 1322,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1327,
											"end": 1504,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1984,
											"end": 2020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2940,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1842,
											"end": 2026,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3346,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3953,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4190,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 4881,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4846,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4971,
											"end": 4997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3113,
											"end": 3134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3143,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3243,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3308,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4963,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5099,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5083,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5052,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5052,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 5138,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5533,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5637,
											"end": 5717,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2223,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4033,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4104,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4043,
											"end": 4105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4114,
											"end": 4149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4185,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4166,
											"end": 4185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3790,
											"end": 4191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6412,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6558,
											"end": 6573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6555,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6507,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6232,
											"end": 6603,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3574,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4410,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4510,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4449,
											"end": 4511,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4590,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4571,
											"end": 4590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4196,
											"end": 4596,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9589,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4844,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4881,
											"end": 4915,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4861,
											"end": 4879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4952,
											"end": 4956,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4974,
											"end": 4993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4601,
											"end": 4999,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9667,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9757,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9746,
											"end": 9782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9829,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7182,
											"end": 7202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5188,
											"end": 5209,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5284,
											"end": 5318,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5257,
											"end": 5319,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5004,
											"end": 5405,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7174,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5615,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5651,
											"end": 5653,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5654,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5761,
											"end": 5766,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5734,
											"end": 5767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5803,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5784,
											"end": 5803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5410,
											"end": 5809,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7254,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7418,
											"end": 7435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7453,
											"end": 7476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5998,
											"end": 6019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6028,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6094,
											"end": 6128,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6173,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6138,
											"end": 6174,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6191,
											"end": 6210,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6191,
											"end": 6210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5814,
											"end": 6216,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7445,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7549,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7605,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1504,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7662,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 7164,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7669,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 591,
											"end": 657,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 570,
											"end": 658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 551,
											"end": 664,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 14,
											"end": 670,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 670,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 871,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 675,
											"end": 871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 743,
											"end": 763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 763,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 803,
											"end": 845,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 792,
											"end": 846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 782,
											"end": 847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 847,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 772,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 861,
											"end": 862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 851,
											"end": 863,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 772,
											"end": 865,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 772,
											"end": 865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 675,
											"end": 871,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 984,
											"end": 991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 980,
											"end": 1003,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 976,
											"end": 1008,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1073,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 876,
											"end": 1130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1657,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1641,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1653,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1658,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1623,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1713,
											"end": 1722,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1723,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1742,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1732,
											"end": 1780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2145,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2141,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2146,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2111,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2182,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2031,
											"end": 2217,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2354,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2319,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2409,
											"end": 2418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2470,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2438,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2482,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2688,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2630,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2737,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2735,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2740,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2851,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2852,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2924,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3338,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3597,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3652,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3731,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3715,
											"end": 3754,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3785,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/ERC20.sol\":\"MyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"source/ERC20.sol\":{\"keccak256\":\"0xb637de11594b85b984ca837d04ae21eb669647d8ca0fa5ddb7b1ef5c834ec3b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b952b979ede40618bf8ff09282bc3af6f4640f6f6fc69d1d603b80f08c978441\",\"dweb:/ipfs/QmNteJssp1Yy6wpVucZNb6Gz7XT29TTtnMD8iX9KYRNaVc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "source/ERC20.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 18,
								"contract": "source/ERC20.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 20,
								"contract": "source/ERC20.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "source/ERC20.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "source/ERC20.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							601
						],
						"ERC20": [
							500
						],
						"IERC20": [
							578
						]
					},
					"id": 501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 579,
							"src": "58:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 602,
							"src": "81:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 601,
										"src": "1297:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1297:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "1306:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1306:6:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "116:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 500,
							"linearizedBaseContracts": [
								500,
								578,
								601
							],
							"name": "ERC20",
							"nameLocation": "1288:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1356:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1319:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 11,
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1328:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1319:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 10,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1339:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1430:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1372:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1381:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 16,
											"keyType": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1401:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1392:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1464:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1448:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1498:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1483:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1483:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1524:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "1509:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 23,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1509:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1899:57:0",
										"statements": [
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1909:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 33,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1917:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1909:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1909:13:0"
											},
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 36,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "1932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 37,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1932:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1932:17:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1538:299:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1855:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 26,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1890:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1876:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 28,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1854:44:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1899:0:0"
									},
									"scope": 500,
									"src": "1842:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2081:29:0",
										"statements": [
											{
												"expression": {
													"id": 47,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "2098:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "2091:12:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1962:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2030:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2066:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:15:0"
									},
									"scope": 500,
									"src": "2021:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "2285:31:0",
										"statements": [
											{
												"expression": {
													"id": 56,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "2302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 55,
												"id": 57,
												"nodeType": "Return",
												"src": "2295:14:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2116:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2232:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2238:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "2270:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:15:0"
									},
									"scope": 500,
									"src": "2223:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2996:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3013:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 64,
												"id": 66,
												"nodeType": "Return",
												"src": "3006:9:0"
											}
										]
									},
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "2322:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2949:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2957:2:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2989:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 62,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2989:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2988:7:0"
									},
									"scope": 500,
									"src": "2940:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3152:36:0",
										"statements": [
											{
												"expression": {
													"id": 75,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "3169:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 76,
												"nodeType": "Return",
												"src": "3162:19:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3028:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3091:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 71,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3125:8:0"
									},
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3102:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3143:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:9:0"
									},
									"scope": 500,
									"src": "3082:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										517
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3329:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 87,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "3346:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 89,
													"indexExpression": {
														"id": 88,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3346:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 90,
												"nodeType": "Return",
												"src": "3339:25:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3194:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3255:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3302:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:17:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:9:0"
									},
									"scope": 500,
									"src": "3246:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										527
									],
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3666:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 104,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "3686:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3686:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 106,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "3700:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3711:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3676:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3676:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3676:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3735:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 102,
												"id": 111,
												"nodeType": "Return",
												"src": "3728:11:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3377:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3583:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 99,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3642:8:0"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3600:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3591:35:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3660:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3659:6:0"
									},
									"scope": 500,
									"src": "3574:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										537
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3902:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 124,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "3919:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 126,
														"indexExpression": {
															"id": 125,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3919:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 128,
													"indexExpression": {
														"id": 127,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3919:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 123,
												"id": 129,
												"nodeType": "Return",
												"src": "3912:34:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3752:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3813:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 120,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3875:8:0"
									},
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3831:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3823:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3846:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:32:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:0"
									},
									"scope": 500,
									"src": "3804:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										547
									],
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "4180:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 143,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "4199:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4199:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4213:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4222:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 142,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "4190:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "4190:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 141,
												"id": 150,
												"nodeType": "Return",
												"src": "4239:11:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3959:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4100:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4156:8:0"
									},
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4133:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4125:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4107:33:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4174:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4173:6:0"
									},
									"scope": 500,
									"src": "4091:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										559
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "4836:302:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4856:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4864:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "4875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "4846:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4846:36:0"
											},
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4901:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "4893:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 173,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "4920:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 175,
														"indexExpression": {
															"id": 174,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4932:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4920:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 178,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "4940:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4940:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4920:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4893:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "4971:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 182,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "4991:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4971:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4999:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "4963:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5061:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "5069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5069:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 191,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5083:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "5102:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5083:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "5052:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5052:57:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 164,
												"id": 197,
												"nodeType": "Return",
												"src": "5120:11:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4263:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4733:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4812:8:0"
									},
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4770:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4762:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4745:51:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4830:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4830:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:6:0"
									},
									"scope": 500,
									"src": "4724:414:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "5627:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 210,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "5646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5646:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 212,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "5660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 213,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "5669:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 216,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 214,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 589,
																			"src": "5681:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5681:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5669:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 218,
																"indexExpression": {
																	"id": 217,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "5695:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5669:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 219,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "5706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5669:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 209,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "5637:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5637:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "5637:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 224,
												"nodeType": "Return",
												"src": "5727:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5144:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5542:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5585:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5577:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5621:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5621:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5620:6:0"
									},
									"scope": 500,
									"src": "5533:212:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6331:272:0",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6349:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6341:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 238,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6368:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 241,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 239,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6380:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6368:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 243,
													"indexExpression": {
														"id": 242,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "6394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6368:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6341:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6420:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 247,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6440:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6420:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6457:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6412:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "6412:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 253,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "6516:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6516:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "6530:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 256,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "6539:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 257,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "6558:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "6507:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6507:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6507:67:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 235,
												"id": 262,
												"nodeType": "Return",
												"src": "6585:11:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5751:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6241:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6284:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6276:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6258:42:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:6:0"
									},
									"scope": 500,
									"src": "6232:371:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "7164:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7182:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7200:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7192:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7192:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7182:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7204:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7174:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7174:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "7174:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "7262:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7275:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7275:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7275:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7262:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7287:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7254:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "7254:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "7336:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "7336:47:0"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7402:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "7394:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"baseExpression": {
														"id": 302,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "7418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 304,
													"indexExpression": {
														"id": 303,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "7428:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7394:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 307,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "7453:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 308,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7470:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7453:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7445:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "7445:74:0"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 313,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "7529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 315,
														"indexExpression": {
															"id": 314,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7539:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7529:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 316,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7549:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 317,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7549:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7529:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "7529:42:0"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 321,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "7581:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 323,
														"indexExpression": {
															"id": 322,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7581:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 324,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "7605:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7581:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "7581:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 328,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "7636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "7644:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7655:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "7627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7627:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "7622:40:0"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "6609:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7086:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7120:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7112:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7139:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "7131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7095:51:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7164:0:0"
									},
									"scope": 500,
									"src": "7077:592:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "8005:265:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "8023:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8042:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 344,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8034:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8034:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8023:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8046:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "8015:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8120:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8112:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8112:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8112:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8133:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8091:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "8091:49:0"
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 361,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "8151:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 362,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "8167:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8151:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "8151:22:0"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 365,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "8183:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 367,
														"indexExpression": {
															"id": 366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8183:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 368,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "8205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8183:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "8183:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8243:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8235:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8235:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8256:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "8226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8226:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "8221:42:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "7675:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7949:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7980:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "7972:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7954:33:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8005:0:0"
									},
									"scope": 500,
									"src": "7940:330:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "8655:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 390,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "8673:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8692:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8684:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8684:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8673:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8696:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8665:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "8665:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8764:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8781:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8773:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 401,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8773:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8773:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8785:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "8743:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8743:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8743:49:0"
											},
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8811:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 442,
														"src": "8803:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"baseExpression": {
														"id": 410,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "8828:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 412,
													"indexExpression": {
														"id": 411,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "8838:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8828:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8803:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "8864:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "8882:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8864:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8890:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8856:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "8856:71:0"
											},
											{
												"expression": {
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 421,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "8937:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 423,
														"indexExpression": {
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8958:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8958:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "8937:44:0"
											},
											{
												"expression": {
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 429,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "8991:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 430,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "9007:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8991:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "8991:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 434,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "9038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9055:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9047:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "9059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "9029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9029:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "EmitStatement",
												"src": "9024:42:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "8276:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8599:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "8605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8630:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "8622:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8604:33:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8655:0:0"
									},
									"scope": 500,
									"src": "8590:483:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "9579:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9597:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9614:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9606:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9606:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9597:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9618:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9589:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "9589:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "9675:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9694:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9686:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 465,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9686:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9686:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9675:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9698:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9667:68:0"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 473,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "9746:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 476,
															"indexExpression": {
																"id": 474,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9758:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9746:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 475,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9746:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "9776:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9746:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "9746:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 482,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "9806:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9822:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "9797:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "EmitStatement",
												"src": "9792:37:0"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "9079:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9505:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9514:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "9546:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9513:48:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9579:0:0"
									},
									"scope": 500,
									"src": "9496:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "10512:3:0",
										"statements": []
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "9842:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10432:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10461:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "10479:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10452:42:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10512:0:0"
									},
									"scope": 500,
									"src": "10423:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 501,
							"src": "1279:9238:0",
							"usedErrors": []
						}
					],
					"src": "33:10485:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "IERC20",
							"nameLocation": "139:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:1"
									},
									"scope": 578,
									"src": "223:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "380:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "420:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:1"
									},
									"scope": 578,
									"src": "361:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "667:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "686:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:1"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "720:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:1"
									},
									"scope": 578,
									"src": "649:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1020:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1035:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "1075:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:1"
									},
									"scope": 578,
									"src": "1001:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1754:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:1"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1805:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:1"
									},
									"scope": 578,
									"src": "1737:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2140:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2156:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2175:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:1"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "2209:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:1"
									},
									"scope": 578,
									"src": "2118:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 568,
									"name": "Transfer",
									"nameLocation": "2390:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2399:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2421:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2441:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:1"
									},
									"src": "2384:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 577,
									"name": "Approval",
									"nameLocation": "2621:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2630:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2653:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2678:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:1"
									},
									"src": "2615:78:1"
								}
							],
							"scope": 579,
							"src": "129:2566:1",
							"usedErrors": []
						}
					],
					"src": "33:2663:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							601
						]
					},
					"id": 602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 601,
							"linearizedBaseContracts": [
								601
							],
							"name": "Context",
							"nameLocation": "572:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "648:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 585,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 584,
												"id": 587,
												"nodeType": "Return",
												"src": "658:17:2"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "639:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:2"
									},
									"scope": 601,
									"src": "586:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "755:165:2",
										"statements": [
											{
												"expression": {
													"id": 594,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$601",
														"typeString": "contract Context"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "765:4:2"
											},
											{
												"expression": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 593,
												"id": 598,
												"nodeType": "Return",
												"src": "898:15:2"
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "739:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:2"
									},
									"scope": 601,
									"src": "688:232:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 602,
							"src": "554:368:2",
							"usedErrors": []
						}
					],
					"src": "33:890:2"
				},
				"id": 2
			},
			"source/ERC20.sol": {
				"ast": {
					"absolutePath": "source/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							601
						],
						"ERC20": [
							500
						],
						"IERC20": [
							578
						],
						"MyToken": [
							633
						]
					},
					"id": 634,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 603,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/ERC20.sol",
							"id": 604,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 634,
							"sourceUnit": 501,
							"src": "61:108:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 605,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 500,
										"src": "193:5:3"
									},
									"id": 606,
									"nodeType": "InheritanceSpecifier",
									"src": "193:5:3"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 633,
							"linearizedBaseContracts": [
								633,
								500,
								578,
								601
							],
							"name": "MyToken",
							"nameLocation": "182:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "280:211:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "442:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "442:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "454:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "460:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 68,
																				"src": "471:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "471:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "466:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 622,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "466:4:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "466:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "460:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "454:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "436:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "436:47:3"
											}
										]
									},
									"id": 632,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 613,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 614,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 610,
													"src": "272:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 615,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 612,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 500,
												"src": "260:5:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "260:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "232:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "218:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 607,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "218:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "252:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "238:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 609,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:42:3"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:0:3"
									},
									"scope": 633,
									"src": "206:285:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 634,
							"src": "173:321:3",
							"usedErrors": []
						}
					],
					"src": "33:461:3"
				},
				"id": 3
			}
		}
	}
}